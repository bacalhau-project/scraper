URL: https://kubernetes.io/zh-cn/

文档Kubernetes 博客培训合作伙伴社区案例分析版本列表发布信息v1.31v1.30v1.29v1.28v1.27中文 (Chinese)Englishবাংলা (Bengali)Français (French)Deutsch (German)हिन्दी (Hindi)Bahasa Indonesia (Indonesian)Italiano (Italian)日本語 (Japanese)한국어 (Korean)Polski (Polish)Português (Portuguese)Русский (Russian)Español (Spanish)Українська (Ukrainian)Tiếng Việt (Vietnamese)生产级别的容器编排系统学习 Kubernetes 基础知识Kubernetes也称为 K8s，是用于自动部署、扩缩和管理容器化应用程序的开源系统。它将组成应用程序的容器组合成逻辑单元，以便于管理和服务发现。Kubernetes 源自Google 15 年生产环境的运维经验，同时凝聚了社区的最佳创意和实践。星际尺度Google 每周运行数十亿个容器，Kubernetes 基于与之相同的原则来设计，能够在不扩张运维团队的情况下进行规模扩展。永不过时无论是本地测试，还是跨国公司，Kubernetes 的灵活性都能让你在应对复杂系统时得心应手。处处适用Kubernetes 是开源系统，可以自由地部署在企业内部，私有云、混合云或公有云，让您轻松地做出合适的选择。请访问下载部分下载 Kubernetes。将 150+ 微服务迁移到 Kubernetes 上的挑战Sarah Wells, 运营和可靠性技术总监, 金融时报观看视频参加 2024 年 3 月 19-22 日的欧洲 KubeCon + CloudNativeCon参加 2024 年 11 月 12-15 日的北美 KubeCon + CloudNativeConKubernetes 特性自动化上线和回滚Kubernetes 会分步骤地将针对应用或其配置的更改上线，同时监视应用程序运行状况以确保你不会同时终止所有实例。如果出现问题，Kubernetes 会为你回滚所作更改。你应该充分利用不断成长的部署方案生态系统。服务发现与负载均衡你无需修改应用来使用陌生的服务发现机制。Kubernetes 为每个 Pod 提供了自己的 IP 地址并为一组 Pod 提供一个 DNS 名称，并且可以在它们之间实现负载均衡。自我修复重新启动失败的容器，在节点死亡时替换并重新调度容器， 杀死不响应用户定义的健康检查的容器， 并且在它们准备好服务之前不会将它们公布给客户端。存储编排自动挂载所选存储系统，包括本地存储、公有云提供商所提供的存储或者诸如 iSCSI 或 NFS 这类网络存储系统。Secret 和配置管理部署和更新 Secret 和应用程序的配置而不必重新构建容器镜像， 且不必将软件堆栈配置中的秘密信息暴露出来。自动装箱根据资源需求和其他限制自动放置容器，同时避免影响可用性。 将关键性的和尽力而为性质的工作负载进行混合放置，以提高资源利用率并节省更多资源。批量执行除了服务之外，Kubernetes 还可以管理你的批处理和 CI 工作负载，在期望时替换掉失效的容器。IPv4/IPv6 双协议栈为 Pod 和 Service 分配 IPv4 和 IPv6 地址水平扩缩使用一个简单的命令、一个 UI 或基于 CPU 使用情况自动对应用程序进行扩缩。为扩展性设计无需更改上游源码即可扩展你的 Kubernetes 集群。案例分析"Kubernetes is a great platform for machine learning because it comes with all the scheduling and …"进一步了解"Kubernetes has improved our experience using cloud infrastructure. There is currently no alternative …"进一步了解"Kubernetes is a great solution for us. It allows us to rapidly iterate on our clients' demands.
"进一步了解"We realized that we needed to learn Kubernetes better in order to fully use the potential of it. At …"进一步了解我们是CNCF毕业项目想要获取最新的 Kubernetes 新闻么？请订阅 KubeWeekly。文档博客培训合作伙伴社区案例分析© 2024 The Kubernetes 作者 | 文档发布基于CC BY 4.0授权许可Copyright © 2024 Linux 基金会®。保留所有权利。Linux 基金会已注册并使用商标。如需了解 Linux 基金会的商标列表，请访问商标使用页面ICP 许可： 京ICP备17074266号-3