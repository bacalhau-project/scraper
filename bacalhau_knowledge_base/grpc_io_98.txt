URL: https://grpc.io/docs/guides/custom-name-resolution/

gRPCAboutMeetDocsGuidesShowcaseBlogCommunitygRPConf 2024 is happening NEXT WEEK onAug. 27th!-Register nowand get 25% off with the code GOOGLE25.DocsWhat is gRPC?IntroductionCore conceptsFAQLanguagesC# / .NETAPI (legacy)Daily builds (legacy)C++Quick startBasics tutorialAsync-API tutorialAsynchronous Callback API TutorialBest Practices for gRPC C++ API and FAQALTSAPIDartQuick startBasics tutorialAPIGoQuick startBasics tutorialALTSAPIGenerated codeJavaQuick startBasics tutorialALTSAPIGenerated codeKotlinQuick startBasics tutorialAPINodeQuick startBasics tutorialAPIObjective-CQuick startBasics tutorialOAuth2APIPHPQuick startBasics tutorialAPIDaily buildsPythonQuick startBasics tutorialALTSGenerated codeAPIDaily buildsRubyQuick startBasics tutorialAPIDaily buildsPlatformsAndroidJavaQuick startBasics tutorialAPIKotlinQuick startAPIWebQuick startBasics tutorialGuidesAuthenticationBenchmarkingCancellationCompressionCustom Backend MetricsCustom Load Balancing PoliciesCustom Name ResolutionDeadlinesDebuggingError handlingFlow ControlHealth CheckingInterceptorsKeepaliveMetadataOpenTelemetry MetricsPerformance Best PracticesReflectionRequest HedgingRetryService ConfigStatus CodesWait-for-ReadyView page sourceEdit this pageCreate child pageCreate documentation issueCreate project issueOverviewCustom Name ResolversLife of a Target StringLanguage SupportDocsGuidesCustom Name ResolutionCustom Name ResolutionExplains standard name resolution, the custom name resolver interface, and how to write an implementation.ContentsOverviewCustom Name ResolversLife of a Target StringLanguage SupportCustom Name ResolutionExplains standard name resolution, the custom name resolver interface, and how to write an implementation.OverviewName resolution is fundamentally about service discovery. When sending a
gRPC request, the client must determine the IP address of the service name.
Name resolution is often thought to be the same asDNS. In practice however, DNS is usually
augmented with extensions or completely replaced to enable name resolution.When making a request with a gRPC client, by default, DNS name resolution is
used. However, various other name resolution mechanisms may be used:ResolverExampleNotesDNSgrpc.io:50051By default, DNS is assumed.DNSdns:///grpc.io:50051The extra slash is used to provide an authorityUnix Domain Socketuds:///run/containerd/containerd.sockxDSxds:///wallet.grpcwallet.ioIPv4ipv4:198.51.100.123:50051Only supported in some languagesNoteThe triple slashes above (///) may look unfamiliar if you are used to the
double slashes of HTTP, such ashttps://grpc.io. Thesetarget stringsfollow
the format forRFC-3986URIs.
The string following the first two slashes and preceding the third (if there is
a third at all) is theauthority. The authority string identifies a server
which contains the URIs of all resources. In the case of a conventional
HTTP request, the authority over the URI is the server to which the request will
be sent. In other cases, the authority will be the identity of the name
resolution server, while the resource itself lives on some other server. Some
name resolvers have no need for an authority. In this case, the authority string
is left empty, resulting in three slashes in a row.Several languages support an interface to allow the user to define their own
name resolvers, so that you may define how to resolve any given name. Once
registered, a name resolver with theschememy-resolverwill be picked up
when a target string begins withmy-resolver:. For example, requests tomy-resolver:///my-servicewould now use themy-resolvername resolver
implementation.Custom Name ResolversYou might consider using a custom name resolver whenever you would like to
augment or replace DNS for service discovery. For example, this interface has
been used in the past to useApache Zookeeperto look up service names. It has also been used to directly interface with the
Kubernetes API server for service lookup based on headless Service resources.One reason why it might be particularly useful to use a custom name resolver
rather than standard DNS is that this interface isreactive. Within standard
DNS, a client looks up the address for a particular service at the beginning of
the connection and maintains its connection to that address for the lifetime of
the connection. However, custom name resolvers may be watch-based. That is, they
can receive updates from the name server over time and therefore respond
intelligently to backend failure as well as backend scale-ups and backend
scale-downs.In addition, a custom name resolver may provide the client connection with aservice config. A service config is a JSON object that defines
arbitrary configuration specifying how traffic should be routed to and load
balanced across a particular service. At its most basic, this can be used to
specify things like that a particular service should use the round robin load
balancing policy vs. pick first. However, when a custom name resolver is used in
conjunction with arbitrary service config and acustom load balancing
policy, very complex
traffic management systems such as xDS may be constructed.Life of a Target StringWhile the exact interface for custom name resolvers differs from language to
language, the general structure is the same. The client registers an
implementation of aname resolver providerto a process-global registry close
to the start of the process. The name resolver provider will be called by the
gRPC library with a target strings intended for the custom name resolver. Given
that target string, the name resolver provider will return an instance of a name
resolver, which will interact with the client connection to direct the request
according to the target string.sequenceDiagram
  Client ->> gRPC: Request to my-resolver:///my-service
  gRPC ->> NameResolverProvider: requests NameResolver
  NameResolverProvider -->> gRPC: returns NameResolver
  gRPC ->> NameResolver: delegates resolution
  NameResolver -->> gRPC: addressesLanguage SupportLanguageExampleJavaExampleGoExampleC++Not supportedPythonNot supportedLast modified June 8, 2023:First draft of custom name resolver docs (#1139) (4f03598)View page sourceEdit this pageCreate child pageCreate documentation issueCreate project issueÂ© 2024 gRPC AuthorsTerms|Privacy|Trademarks|License|About