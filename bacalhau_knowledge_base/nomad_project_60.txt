URL: https://www.nomadproject.io/docs/schedulers

HashiDaysOne conference. Three cities.Find a city near youDismiss alertHashiCorp DeveloperHashiCorp Cloud PlatformTerraformPackerConsulVaultBoundaryNomadWaypointVagrantNomadInstallIntroTutorialsDocumentationAPIToolsPluginsIntegrationsSearchCommand or control keyK keySign inSign upThemeNomad HomeDocumentationDocumentationInstall NomadUpgradingRelease NotesIntegrationsConceptsConfigurationCommands (CLI)GlossaryJob SpecificationOther SpecificationsTask DriversDevice PluginsSchedulersRuntimeNetworkingAutoscalingOperationsNomad vs. KubernetesNomad EcosystemNomad PartnershipsWho Uses NomadNomad EnterpriseFAQResourcesTutorial LibraryCommunity Forum(opens in new tab)Support(opens in new tab)GitHub(opens in new tab)DeveloperNomadDocumentationSchedulersv1.8.x (latest)Nomadv1.7.xv1.6.xv1.5.xv1.4.xv1.3.xv1.2.xv1.1.xv1.0.xv0.12.xv0.11.xSchedulersNomad has four scheduler types that can be used when creating your job:service,batch,systemandsysbatch. Here we will describe the differences
between each of these schedulers.ServiceTheservicescheduler is designed for scheduling long lived services that
should never go down. As such, theservicescheduler ranks a large portion
of the nodes that meet the job's constraints and selects the optimal node to
place a task group on. Theservicescheduler uses a best fit scoring algorithm
influenced by Google's work onBorg. Ranking this larger set of candidate
nodes increases scheduling time but provides greater guarantees about the
optimality of a job placement, which given the service workload is highly
desirable.Service jobs are intended to run until explicitly stopped by an operator. If a
service task exits it is considered a failure and handled according to the job'srestartandrescheduleblocks.BatchBatch jobs are much less sensitive to short term performance fluctuations and
are short lived, finishing in a few minutes to a few days. Although thebatchscheduler is very similar to theservicescheduler, it makes certain
optimizations for the batch workload. The main distinction is that after finding
the set of nodes that meet the job's constraints it uses the power of two
choices described in Berkeley'sSparrowscheduler to limit the number of nodes
that are ranked.Batch jobs are intended to run until they exit successfully. Batch tasks that
exit with an error are handled according to the job'srestartandrescheduleblocks.SystemThesystemscheduler is used to register jobs that should be run on all
clients that meet the job's constraints. Thesystemscheduler is also invoked
when clients join the cluster or transition into the ready state. This means
that all registeredsystemjobs will be re-evaluated and their tasks will be
placed on the newly available nodes if the constraints are met.This scheduler type is extremely useful for deploying and managing tasks that
should be present on every node in the cluster. Since these tasks are
managed by Nomad, they can take advantage of job updating,
service discovery, and more.The system scheduler will preempt eligible lower priority tasks running on a
node if there isn't enough capacity to place a system job.  Seepreemptionfor details on how tasks that get preempted are chosen.Systems jobs are intended to run until explicitly stopped either by an operator
orpreemption. If a system task exits it is considered a failure and handled
according to the job'srestartblock; system jobs do not have rescheduling.When used with node pools, system jobs run on all nodes of the pool used by the
job. The built-in node poolallallows placing allocations on all clients in
the cluster.System BatchThesysbatchscheduler is used to register jobs that should be run to completion
on all clients that meet the job's constraints. Thesysbatchscheduler will
schedule jobs similarly to thesystemscheduler, but like abatchjob once a
task exits successfully it is not restarted on that client.This scheduler type is useful for issuing "one off" commands to be run on every
node in the cluster. Sysbatch jobs can also be created asperiodicandparameterizedjobs. Since these tasks are managed by Nomad, they can take advantage of job
updating, service discovery, monitoring, and more.Thesysbatchscheduler will preempt lower priority tasks running on a node if there
is not enough capacity to place the job. See preemption details on how tasks that
get preempted are chosen.Sysbatch jobs are intended to run until successful completion, explicitly stopped
by an operator, or evicted throughpreemption. Sysbatch tasks that exit with an
error are handled according to the job'srestartblock.Like thebatchscheduler, task groups in system batch jobs may have acountgreater than 1 to control how many instances are run. Instances that cannot be
immediately placed will be scheduled when resources become available,
potentially on a node that has already run another instance of the same job.Edit this page on GitHubOn this page:SchedulersServiceBatchSystemSystem BatchThemeCertificationsSystem StatusCookie ManagerTerms of UseSecurityPrivacyTrademark PolicyTrade ControlsAccessibilityGive Feedback(opens in new tab)