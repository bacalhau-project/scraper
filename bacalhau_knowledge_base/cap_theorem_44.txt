URL: https://en.wikipedia.org/wiki/CAP_theorem#cite_note-3

Jump to contentMain menuMain menumove to sidebarhideNavigationMain pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonateContributeHelpLearn to editCommunity portalRecent changesUpload fileSearchSearchAppearanceCreate accountLog inPersonal toolsCreate accountLog inPages for logged out editorslearn moreContributionsTalkContentsmove to sidebarhide(Top)1Explanation2History3See also4References5External linksToggle the table of contentsCAP theorem19 languagesالعربيةCatalàČeštinaDeutschEspañolفارسیFrançais한국어ItalianoעבריתMagyarNederlands日本語PortuguêsРусскийSimple EnglishУкраїнськаTiếng Việt中文Edit linksArticleTalkEnglishReadEditView historyToolsToolsmove to sidebarhideActionsReadEditView historyGeneralWhat links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageGet shortened URLDownload QR codeWikidata itemPrint/exportDownload as PDFPrintable versionIn other projectsAppearancemove to sidebarhideFrom Wikipedia, the free encyclopediaNeed to sacrifice consistency or availability in the presence of network partitionsIndatabase theory, theCAP theorem, also namedBrewer's theoremafter computer scientistEric Brewer, states that anydistributed data storecan provide onlytwo of the following threeguarantees:[1][2][3]ConsistencyEvery read receives the most recent write or an error.AvailabilityEvery request received by a non-failing node in the system must result in a response. This is the definition of availability in CAP theorem as defined by Gilbert and Lynch.[1]Note that availability as defined in CAP theorem is different fromhigh availabilityin software architecture.[4]Partition toleranceThe system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes.When anetwork partitionfailure happens, it must be decided whether to do one of the following:cancel the operation and thus decrease the availability but ensure consistencyproceed with the operation and thus provide availability but risk inconsistency.  Note this doesn't necessarily mean that system ishighly availableto its users.[5]CAP theorem Euler diagramThus, if there is a network partition, one has to choose between consistency or availability. Note that consistency as defined in the CAP theorem is quite different from the consistency guaranteed inACIDdatabase transactions.[6]Explanation[edit]No distributed system is safe from network failures, thus network partitioning generally has to be tolerated.[7][8]In the presence of a partition, one is then left with two options: consistency oravailability. When choosing consistency over availability, the system will return an error or a time out if particular information cannot be guaranteed to be up to date due to network partitioning. When choosing availability over consistency, the system will always process the query and try to return the most recent available version of the information, even if it cannot guarantee it is up to date due to network partitioning.In the absence of a partition, both availability and consistency can be satisfied.[9]Database systems designed with traditionalACIDguarantees in mind such asRDBMSchooseconsistencyover availability, whereas systems designed around theBASEphilosophy, common in theNoSQLmovement for example, choose availability over consistency.[10]History[edit]According to computer scientistEric Brewerof theUniversity of California, Berkeley, the theorem first appeared in autumn 1998.[10]It was published as the CAP principle in 1999[11]and presented as aconjectureby Brewer at the 2000Symposium on Principles of Distributed Computing(PODC).[12]In 2002,Seth GilbertandNancy LynchofMITpublished a formal proof of Brewer's conjecture, rendering it atheorem.[1]In 2012, Brewer clarified some of his positions, including why the often-used "two out of three" concept can be somewhat misleading because system designers only need to sacrifice consistency or availability in the presence of partitions; partition management and recovery techniques exist. Brewer also noted the different definition of consistency used in the CAP theorem relative to the definition used inACID.[10][13]A similar theorem stating the trade-off between consistency and availability in distributed systems was published by Birman and Friedman in 1996.[14]Birman and Friedman's result restricted this lower bound to non-commuting operations.ThePACELC theorem, introduced in 2010,[9]builds on CAP by stating that even in the absence of partitioning, there is another trade-off between latency and consistency. PACELC means, if partition (P) happens, the trade-off is between availability (A) and consistency (C); Else (E), the trade-off is between latency (L) and consistency (C).See also[edit]Fallacies of distributed computingLambda architecture(solution)PACELC theoremPaxos (computer science)Raft (computer science)Zooko's triangleInconsistent triadTrilemmaReferences[edit]^abcGilbert, Seth; Lynch, Nancy (2002). "Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services".ACM SIGACT News.33(2). Association for Computing Machinery (ACM): 51–59.doi:10.1145/564585.564601.ISSN0163-5700.S2CID15892169.^"Brewer's CAP Theorem".julianbrowne.com. 2009-01-11.^"Brewers CAP Theorem on distributed systems".royans.net. 2010-02-14.^Fowler, Adam (2015).NoSQL For Dummies. For Dummies.ISBN978-8126554904.^Fowler, Adam (2015).NoSQL For Dummies. For Dummies.ISBN978-8126554904.^Liochon, Nicolas."The confusing CAP and ACID wording".This long run. Retrieved1 February2019.^Kleppmann, Martin (2015-09-18).A Critique of the CAP Theorem(Report). Apollo - University of Cambridge Repository.arXiv:1509.05393.Bibcode:2015arXiv150905393K.doi:10.17863/CAM.13083.S2CID1991487. Retrieved24 November2019.^Martin, Kleppmann."Please stop calling databases CP or AP".Martin Kleppmann's Blog. Retrieved24 November2019.^abAbadi, Daniel (2010-04-23)."DBMS Musings: Problems with CAP, and Yahoo's little known NoSQL system".DBMS Musings. Retrieved2018-01-23.^abcBrewer, Eric (2012)."CAP twelve years later: How the "rules" have changed".Computer.45(2). Institute of Electrical and Electronics Engineers (IEEE): 23–29.doi:10.1109/mc.2012.37.ISSN0018-9162.S2CID890105.^Armando Fox; Eric Brewer (1999).Harvest, Yield and Scalable Tolerant Systems. Proc. 7th Workshop Hot Topics in Operating Systems (HotOS 99). IEEE CS. pp. 174–178.doi:10.1109/HOTOS.1999.798396.^Eric Brewer."Towards Robust Distributed Systems"(PDF).^Carpenter, Jeff; Hewitt, Eben (July 2016).Cassandra: The Definitive Guide(2nd ed.). O'Reilly Media.ISBN9781491933657.In February 2012, Eric Brewer provided an updated perspective on his CAP theorem... Brewer now describes the "2 out of 3" axiom as somewhat misleading. He notes that designers only need sacrifice consistency or availability in the presence of partitions, and that advances in partition recovery techniques have made it possible for designers to achieve high levels of both consistency and availability.^Ken Birman; Roy Friedman (April 1996)."Trading Consistency for Availability in Distributed Systems".hdl:1813/7235.External links[edit]Spanner, TrueTime and the CAP TheoremPerspectives on the CAP theorem: An update from Gilbert and Lynch in 2012vteDatabase management systemsTypesObject-orientedcomparisonRelationallistcomparisonKey–valueColumn-orientedlistDocument-orientedWide-column storeGraphNoSQLNewSQLIn-memorylistMulti-modelcomparisonCloudBlockchain-based databaseConceptsDatabaseACIDArmstrong's axiomsCodd's 12 rulesCAP theoremCRUDNullCandidate keyForeign keySuperkeySurrogate keyUnique keyObjectsRelationtablecolumnrowViewTransactionTransaction logTriggerIndexStored procedureCursorPartitionComponentsConcurrency controlData dictionaryJDBCXQJODBCQuery languageQuery optimizerQuery rewriting systemQuery planFunctionsAdministrationQuery optimizationReplicationShardingRelated topicsDatabase modelsDatabase normalizationDatabase storageDistributed databaseFederated database systemReferential integrityRelational algebraRelational calculusRelational modelObject–relational databaseTransaction processingCategoryOutlineWikiProjectRetrieved from "https://en.wikipedia.org/w/index.php?title=CAP_theorem&oldid=1232171074"Categories:Database management systemsDistributed computingHidden categories:Articles with short descriptionShort description matches WikidataThis page was last edited on 2 July 2024, at 09:54(UTC).Text is available under theCreative Commons Attribution-ShareAlike License 4.0;
additional terms may apply. By using this site, you agree to theTerms of UseandPrivacy Policy. Wikipedia® is a registered trademark of theWikimedia Foundation, Inc., a non-profit organization.Privacy policyAbout WikipediaDisclaimersContact WikipediaCode of ConductDevelopersStatisticsCookie statementMobile view