URL: https://cassandra.apache.org/doc/latest/cassandra/developing/cql/changes.html

Get StartedCassandra BasicsQuickstartEcosystemDocumentationCommunityWelcomeDiscussionsGovernanceContributeMeet the CommunityCatalyst ProgramEventsLearnCassandra 5.0Case StudiesResourcesBlogDownload NowCassandra DocumentationVersion:5.0mastertrunk5.04.14.03.11MainGlossaryHow to report bugsContact usDevelopmentGetting startedBuilding and IDE integrationTestingContributing code changesCode styleReview checklistHow to commitWorking on documentationJenkins CI environmentDependency managementRelease processCassandraFAQGetting StartedCassandra QuickstartSAI QuickstartVector Search QuickstartInstalling CassandraConfiguring CassandraInserting and queryingClient driversProduction recommendationsWhat’s newSupport for JavaArchitectureOverviewDynamoStorage EngineGuaranteesImproved Internode MessagingImproved StreamingData ModelingIntroductionConceptual data modelingRDBMS designDefining application queriesLogical data modelingPhysical data modelingEvaluating and refining data modelsDefining database schemaCassandra data modeling toolsCassandra Query Language (CQL)DefinitionsData typesData definition (DDL)Data manipulation (DML)Dynamic Data Masking (DDM)OperatorsIndexing conceptsSAI OverviewConceptsSAI QuickstartSAI FAQWorking with SAISAI operationsSecondary indexes (2i) overviewConceptsWorking with 2iRebuild 2iMaterialized viewsFunctionsJSONSecurityTriggersAppendicesChangesSASISingle file of CQL informationVector Search overviewConceptsData ModelingVector Search QuickstartWorking with Vector SearchManagingConfiguringcassandra.yamlcassandra-rackdc.propertiescassandra-env.shcassandra-topologies.propertiescommitlog-archiving.propertieslogback.xmljvm-* filesLiberating cassandra.yaml Parameters' Names from Their UnitsOperatingBackupsBloom filtersBulk loadingChange Data Capture (CDC)CompactionCompressionHardwareHintsLoggingAudit loggingAudit logging 2Full query loggingMonitoring metricsRepairRead repairSecuritySnitchesTopology changesTransient replicationVirtual tablesToolscqlsh: the CQL shellnodetoolSSTable toolscassandra-stressTroubleshootingFinding misbehaving nodesReading Cassandra logsUsing nodetoolUsing external tools to deep-diveReferenceALTER TABLECREATE INDEXCREATE CUSTOM INDEXCREATE TABLEDROP INDEXDROP TABLEPlug-insYou are viewing the documentation for a prerelease version.CassandraCassandra Query Language (CQL)ChangesEditChangesThe following describes the changes in each version of CQL.3.4.7Add vector similarity functions (18640)Remove deprecated functionsdateOfandunixTimestampOf, replaced bytoTimestampandtoUnixTimestamp(18328)Added support for attaching masking functions to table columns (18068)Add UNMASK permission (18069)Add SELECT_MASKED permission (18070)Add support for using UDFs as masking functions (18071)Adopt snake_case function names, deprecating all previous camelCase or alltogetherwithoutspaces function names (18037)Add newvectordata type (18504)3.4.6Add support for IF EXISTS and IF NOT EXISTS in ALTER statements  (16916)Allow GRANT/REVOKE multiple permissions in a single statement (17030)Pre hashed passwords in CQL (17334)Add support for type casting in WHERE clause components and in the values of INSERT/UPDATE statements (14337)Add support for CONTAINS and CONTAINS KEY in conditional UPDATE and DELETE statement (10537)Allow to grant permission for all tables in a keyspace (17027)Allow to aggregate by time intervals (11871)3.4.5Adds support for arithmetic operators (11935)Adds support for+and-operations on dates (11936)AddscurrentTimestamp,currentDate,currentTimeandcurrentTimeUUIDfunctions (13132)3.4.4ALTER TABLEALTERhas been removed; a column’s type may not be
changed after creation (12443).ALTER TYPEALTERhas been removed; a field’s type may not be
changed after creation (12443).3.4.3Adds a newdurationdata types <data-types>(11873).Support forGROUP BY(10707).Adds aDEFAULT UNSEToption forINSERT JSONto ignore omitted
columns (11424).Allowsnullas a legal value for TTL on insert and update. It will
be treated as equivalent to inserting a 0 (12216).3.4.2If a table has a non zerodefault_time_to_live, then explicitly
specifying a TTL of 0 in anINSERTorUPDATEstatement will result
in the new writes not having any expiration (that is, an explicit TTL of
0 cancels thedefault_time_to_live). This wasn’t the case before and
thedefault_time_to_livewas applied even though a TTL had been
explicitly set.ALTER TABLEADDandDROPnow allow multiple columns to be
added/removed.NewPER PARTITION LIMIToption forSELECTstatements (seeCASSANDRA-7017.User-defined functions <cql-functions>can now instantiateUDTValueandTupleValueinstances via the newUDFContextinterface
(seeCASSANDRA-10818.User-defined types <udts>may now be stored in a non-frozen form,
allowing individual fields to be updated and deleted inUPDATEstatements andDELETEstatements, respectively.
(CASSANDRA-7423).3.4.1AddsCASTfunctions.3.4.0Support formaterialized views <materialized-views>.DELETEsupport for inequality expressions andINrestrictions on
any primary key columns.UPDATEsupport forINrestrictions on any primary key columns.3.3.1The syntaxTRUNCATE TABLE Xis now accepted as an alias forTRUNCATE X.3.3.0User-defined functions and aggregates <cql-functions>are now
supported.Allows double-dollar enclosed strings literals as an alternative to
single-quote enclosed strings.Introduces Roles to supersede user based authentication and access
controlNewdate,time,tinyintandsmallintdata types <data-types>have been added.JSON support <cql-json>has been addedAdds new time conversion functions and deprecatedateOfandunixTimestampOf.3.2.0User-defined types <udts>supported.CREATE INDEXnow supports indexing collection columns, including
indexing the keys of map collections through thekeys()functionIndexes on collections may be queried using the newCONTAINSandCONTAINS KEYoperatorsTuple types <tuples>were added to hold fixed-length sets of typed
positional fields.DROP INDEXnow supports optionally specifying a keyspace.3.1.7SELECTstatements now support selecting multiple rows in a single
partition using anINclause on combinations of clustering columns.IF NOT EXISTSandIF EXISTSsyntax is now supported byCREATE USERandDROP USERstatements, respectively.3.1.6A newuuid()method has been added.Support forDELETE …​ IF EXISTSsyntax.3.1.5It is now possible to group clustering columns in a relation, seeWHERE <where-clause>clauses.Added support forstatic columns <static-columns>.3.1.4CREATE INDEXnow allows specifying options when creating CUSTOM
indexes.3.1.3Millisecond precision formats have been added to thetimestamp <timestamps>parser.3.1.2NaNandInfinityhas been added as valid float constants. They are
now reserved keywords. In the unlikely case you we using them as a
column identifier (or keyspace/table one), you will now need to double
quote them.3.1.1SELECTstatement now allows listing the partition keys (using theDISTINCTmodifier). SeeCASSANDRA-4536.The syntaxc IN ?is now supported inWHEREclauses. In that case,
the value expected for the bind variable will be a list of whatever typecis.It is now possible to use named bind variables (using:nameinstead
of?).3.1.0ALTER TABLEDROPoption added.SELECTstatement now supports aliases in select clause. Aliases in
WHERE and ORDER BY clauses are not supported.CREATEstatements forKEYSPACE,TABLEandINDEXnow supports
anIF NOT EXISTScondition. Similarly,DROPstatements support aIF EXISTScondition.INSERTstatements optionally supports aIF NOT EXISTScondition
andUPDATEsupportsIFconditions.3.0.5SELECT,UPDATE, andDELETEstatements now allow emptyINrelations (seeCASSANDRA-5626.3.0.4Updated the syntax for customsecondary indexes <secondary-indexes>.Non-equal condition on the partition key are now never supported, even
for ordering partitioner as this was not correct (the order wasnotthe one of the type of the partition key). Instead, thetokenmethod
should always be used for range queries on the partition key (seeWHERE clauses <where-clause>).3.0.3Support for customsecondary indexes <secondary-indexes>has been
added.3.0.2Type validation for theconstants <constants>has been fixed. For
instance, the implementation used to allow'2'as a valid value for anintcolumn (interpreting it has the equivalent of2), or42as a
validblobvalue (in which case42was interpreted as an hexadecimal
representation of the blob). This is no longer the case, type validation
of constants is now more strict. See thedata types <data-types>section for details on which constant is allowed for which type.The type validation fixed of the previous point has lead to the
introduction of blobs constants to allow the input of blobs. Do note
that while the input of blobs as strings constant is still supported by
this version (to allow smoother transition to blob constant), it is now
deprecated and will be removed by a future version. If you were using
strings as blobs, you should thus update your client code ASAP to switch
blob constants.A number of functions to convert native types to blobs have also been
introduced. Furthermore the token function is now also allowed in select
clauses. See thesection on functions <cql-functions>for details.3.0.1Date strings (and timestamps) are no longer accepted as validtimeuuidvalues. Doing so was a bug in the sense that date string are
not validtimeuuid, and it was thus resulting inconfusing
behaviors. However, the following new methods have been added to help
working withtimeuuid:now,minTimeuuid,maxTimeuuid,dateOfandunixTimestampOf.Float constants now support the exponent notation. In other words,4.2E10is now a valid floating point value.VersioningVersioning of the CQL language adheres to theSemantic
Versioningguidelines. Versions take the form X.Y.Z where X, Y, and Z
are integer values representing major, minor, and patch level
respectively. There is no correlation between Cassandra release versions
and the CQL language version.versiondescriptionMajorThe major versionmustbe bumped when backward incompatible changes
are introduced. This should rarely occur.MinorMinor version increments occur when new, but backward compatible,
functionality is introduced.PatchThe patch version is incremented when bugs are fixed.Get started with Cassandra, fast.Quickstart GuideApache Cassandrapowers mission-critical deployments with improved performance and unparalleled levels of scale in the cloud.HomeCassandra BasicsQuickstartEcosystemDocumentationCommunityCase StudiesResourcesBlogFoundationEventsLicenseThanksSecurityPrivacySponsorshipÂ© 2009-The Apache Software Foundationunder the terms of the Apache License 2.0.  Apache, the Apache feather logo, Apache Cassandra, Cassandra, and the Cassandra logo, are either registered trademarks or trademarks of The Apache Software Foundation.