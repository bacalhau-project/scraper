URL: https://cassandra.apache.org/_/development/gettingstarted.html

Get StartedCassandra BasicsQuickstartEcosystemDocumentationCommunityWelcomeDiscussionsGovernanceContributeMeet the CommunityCatalyst ProgramEventsLearnCassandra 5.0Case StudiesResourcesBlogDownload NowGetting StartedInitial ContributionsWriting a new feature is just one way to contribute to the Cassandra
project.
In fact, making sure that supporting tasks, such as quality testing,
documentation, and helping users are completed is just as important.
Tracking the development of new features is an ongoing challenge for this project,
like most open source projects.
We suggest learning how this project gets things done before tackling a new feature.
Here are some suggestions for ways to contribute:Update the documentationAnswer questions on the user listReview and test a submitted patchInvestigate and fix a reported bugCreate unit tests and d-testsUpdating documentationThe Cassandra documentation is maintained in the Cassandra source
repository along with the Cassandra code base.
To submit changes to the documentation, follow the standard process for
submitting apatch.Answering questions on the user listSubscribe to the user list, look for some questions you can answer and write a reply.
Simple as that! See thecommunitypage
for details on how to subscribe to the mailing list.Reviewing and testing a submitted patchReviewing patches is not the sole domain of committers.
If others review a patch, it can reduce the load on the committers.
Less time spent reviewing patches means committers can more great features
or review more complex patches.
Follow the instructions inHow to reviewor alternatively, create a build with the patch and test it with your own workload.
Add a comment to the JIRA ticket to let others know you’ve reviewed and tested,
along with the results of your work.
For example:"I tested this performance enhancement on our application’s standard production
load test and found a 3% improvement."Investigate and/or fix a reported bugOften, the hardest work in fixing a bug is reproducing it.
Even if youdon’t have the knowledge to produce a fix, figuring out a way to
reliably reproduce an issue can be a massive contribution.
Document your method of reproduction in a JIRA comment or,
better yet, produce an automated test that reproduces the issue and
attach it to the ticket.
If you go as far as producing a fix, follow the process for submitting apatch.To create a JIRA account, please request it onthe #cassandra or #cassandra-dev channels on ASF Slack, or onthe user or dev mailing list.Create unit tests and DtestsTest coverage for Cassandra will always benefit from more automated test
coverage, as with most code bases.
Before starting work on a particular area of code, consider reviewing and
enhancing the existing test coverage.
You’ll both improve your knowledge of the code before you start on an
enhancement, and reduce the chance introducing issues with your change. Seetestingandpatchesfor more detail.Get started with Cassandra, fast.Quickstart GuideApache Cassandrapowers mission-critical deployments with improved performance and unparalleled levels of scale in the cloud.HomeCassandra BasicsQuickstartEcosystemDocumentationCommunityCase StudiesResourcesBlogFoundationEventsLicenseThanksSecurityPrivacySponsorshipÂ© 2009-The Apache Software Foundationunder the terms of the Apache License 2.0.  Apache, the Apache feather logo, Apache Cassandra, Cassandra, and the Cassandra logo, are either registered trademarks or trademarks of The Apache Software Foundation.