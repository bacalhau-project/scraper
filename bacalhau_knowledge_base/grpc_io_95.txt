URL: https://grpc.io/docs/guides/compression/

gRPCAboutMeetDocsGuidesShowcaseBlogCommunitygRPConf 2024 is happening NEXT WEEK onAug. 27th!-Register nowand get 25% off with the code GOOGLE25.DocsWhat is gRPC?IntroductionCore conceptsFAQLanguagesC# / .NETAPI (legacy)Daily builds (legacy)C++Quick startBasics tutorialAsync-API tutorialAsynchronous Callback API TutorialBest Practices for gRPC C++ API and FAQALTSAPIDartQuick startBasics tutorialAPIGoQuick startBasics tutorialALTSAPIGenerated codeJavaQuick startBasics tutorialALTSAPIGenerated codeKotlinQuick startBasics tutorialAPINodeQuick startBasics tutorialAPIObjective-CQuick startBasics tutorialOAuth2APIPHPQuick startBasics tutorialAPIDaily buildsPythonQuick startBasics tutorialALTSGenerated codeAPIDaily buildsRubyQuick startBasics tutorialAPIDaily buildsPlatformsAndroidJavaQuick startBasics tutorialAPIKotlinQuick startAPIWebQuick startBasics tutorialGuidesAuthenticationBenchmarkingCancellationCompressionCustom Backend MetricsCustom Load Balancing PoliciesCustom Name ResolutionDeadlinesDebuggingError handlingFlow ControlHealth CheckingInterceptorsKeepaliveMetadataOpenTelemetry MetricsPerformance Best PracticesReflectionRequest HedgingRetryService ConfigStatus CodesWait-for-ReadyView page sourceEdit this pageCreate child pageCreate documentation issueCreate project issueOverviewCompression Method Asymmetry Between PeersSpecific Disabling of CompressionLanguage guides and examplesAdditional ResourcesDocsGuidesCompressionCompressionHow to compress the data sent over the wire while using gRPC.ContentsOverviewCompression Method Asymmetry Between PeersSpecific Disabling of CompressionLanguage guides and examplesAdditional ResourcesCompressionHow to compress the data sent over the wire while using gRPC.OverviewCompression is used to reduce the amount of bandwidth used when communicating between peers and can be enabled or disabled based on call or message level for all languages. For some languages, it is also possible to control compression settings at the channel level. Different languages also support different compression algorithms, including a customized compressor.Compression Method Asymmetry Between PeersgRPC allows asymmetrically compressed communication, whereby a response may be compressed differently with the request, or not compressed at all. A gRPC peer may choose to respond using a different compression method to that of the request, including not performing any compression, regardless of channel and RPC settings (for example, if compression would result in small or negative gains).If a client message is compressed by an algorithm that is not supported by a server, the message will result in anUNIMPLEMENTEDerror status on the server. The server will include agrpc-accept-encodingheader to the response which specifies the algorithms that the server accepts.If the client message is compressed using one of the algorithms from thegrpc-accept-encodingheader and anUNIMPLEMENTEDerror status is returned from the server, the cause of the error won’t be related to compression.Note that a peer may choose to not disclose all the encodings it supports. However, if it receives a message compressed in an undisclosed but supported encoding, it will include said encoding in the response’sgrpc-accept-encodingheader.For every message a server is requested to compress using an algorithm it knows the client doesn’t support (as indicated by the lastgrpc-accept-encodingheader received from the client), it will send the message uncompressed.Specific Disabling of CompressionIf the user requests to disable compression, the next message will be sent uncompressed. This is instrumental in preventingBEASTandCRIMEattacks. This applies to both the unary and streaming cases.Language guides and examplesLanguageExampleDocumentationC++C++ ExampleC++ DocumentationGoGo ExampleGo DocumentationJavaJava ExampleJava DocumentationPythonPython ExamplePython DocumentationAdditional ResourcesgRPC CompressiongRPC (Core) Compression CookbookgRFC for Python Compression APILast modified May 30, 2023:User guide for keepalive and compression (#1135) (1a668d2)View page sourceEdit this pageCreate child pageCreate documentation issueCreate project issue© 2024 gRPC AuthorsTerms|Privacy|Trademarks|License|About