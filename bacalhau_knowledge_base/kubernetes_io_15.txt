URL: https://kubernetes.io/id/

DokumentasiKomunitasStudi kasusVersiRelease Informationv1.31v1.30v1.29v1.28v1.27Bahasa Indonesia (Indonesian)Englishবাংলা (Bengali)中文 (Chinese)Français (French)Deutsch (German)हिन्दी (Hindi)Italiano (Italian)日本語 (Japanese)한국어 (Korean)Polski (Polish)Português (Portuguese)Русский (Russian)Español (Spanish)Українська (Ukrainian)Tiếng Việt (Vietnamese)Orkestrasi Kontainer dengan Skala ProduksiMempelajari Panduan Dasar KubernetesKubernetes (K8s)Kubernetes mengelompokkan kontainer yang membentuk suatu aplikasi dalam bentuk unit logis yang memudahkan proses manajemen dandiscovery. Kubernetes dibuat berdasarkanpengalaman operasionalworkloadsskala produksi yang dilakukan oleh Google, yang digabungkan dengan ide-ide terbaik danbest practicesyang diberikan oleh komunitas.Skala BesarDidesain berdasarkan landasan yang digunakan Google untuk menjalankan milyaran kontainer dalam waktu seminggu, Kubernetes secara dinamis dapat menyesuaikanworkloadstanpa membutuhkan peningkatan tim operasional.FleksibelBaik digunakan untuk melakukantestingdi mesin lokal maupun dijalankan sebagai sistementerprise global, fleksibilitas yang disediakan oleh Kubernetes memungkinkan kamu menghasilkan aplikasi secara konsisten dan mudah, tidak peduli seberapa kompleks kebutuhan yang kamu miliki.Dapat Dijalankan di Berbagai PlatformKubernetes sebagaiopen sourcememberikan kamu kebebasan untuk menggunakanon-premise,hybrid, atau infrastrukturcloudpublik, memberikan kamu kemudahan untuk memindahkanworkloadsyang kamu miliki.Tantangan yang Dihadapi untuk Melakukan Migrasi 150+ Microservices ke KubernetesOleh Sarah Wells, Technical Director for Operations and Reliability, Financial TimesWatch VideoHadiri KubeCon + CloudNativeCon Europe pada 19-22 Maret 2024Hadiri KubeCon + CloudNativeCon North America pada 12-15 November 2024Fitur KubernetesService discovery dan load balancingKamu tidak perlu memodifikasi aplikasi kamu untuk menggunakan mekanismeservice discoverytambahan. Kubernetes menyediakan IP untuk setiap kontainer serta sebuah DNS bagi sebuah sekumpulan kontainer, serta akan melakukan mekanismeload balancebagi sekumpulan kontainer tersebut.Topologi Service (Service Topology)Rute lalu lintas layanan berdasarkan topologi klaster.EndpointSlicePelacakanendpointjaringan yang dapat diskalakan pada klaster Kubernetes.Bin Packing OtomatisMenaruh kontainer-kontainer secara otomatis berdasarkan kebutuhan sumber daya mereka dan batasan-batasan lainnya, tanpa mengorbankan ketersediaan. Membaurkan beban-beban kerja kritis danbest-effortuntuk meningkatkan penggunaan sumber daya dan menghemat lebih banyak sumber daya.Orkestrasi penyimpananSecara otomatis memasang sistem penyimpanan pilihanmu, baik dari penyimpanan lokal, penyedia layanancloudsepertiGCPatauAWS, maupun sebuah sistem penyimpanan jaringan seperti NFS, iSCSI, Gluster, Ceph, Cinder, atau Flocker.Reparasi otomatisMengulang dan menjalankan kembali kontainer yang gagal, mengganti dan menjadwalkan ulang ketika ada Node yang mati, mematikan kontainer yang tidak memberikan respon terhadap health-check yang telah didefinisikan, dan tidak menunjukkannya ke klien sampai siap untuk digunakan.Rilis dan pengembalian terotomasiKubernetes merilis perubahan secara progresif pada aplikasimu atau konfigurasinya sambil memonitor kesehatan aplikasi untuk menjamin bahwa semua instances tidak mati bersamaan. Jika sesuatu yang buruk terjadi, Kubernetes akan melakukan rollback pada perubahanmu. Take advantage of a growing ecosystem of deployment solutions.Secret dan manajemen konfigurasiMenerapkan serta mengubah secret serta konfigurasi aplikasi tanpa melakukan perubahan pada image kamu serta mencegah tereksposnya secret yang kamu miliki pada konfigurasi.Dual-stack IPv4/IPv6Pengalokasian alamat IPv4 dan IPv6 untuk Pod dan ServiceEksekusi batchSelain Service, Kubernetes juga dapat melakukan manajemen workload batch dan CI, melakukan penggantian Container-Container yang gagal, jika diinginkan.Horizontal scalingScale up dan scale down aplikasimu dengan sebuah perintah yang serderhana, dengan UI, atau otomatis bersadarkan penggunaan CPU.Studi kasusKami merupakan proyek yang lulus dariCNCFTertarik untuk mendapatkan info terbaru tentang Kubernetes? Daftarkan dirimu ke KubeWeekly.DokumentasiKomunitasStudi kasus© 2024 Para Pencipta Kubernetes | Dokumentasi didistribusikan di bawahCC BY 4.0Copyright © 2024 Linux Foundation ®. Hak cipta dilindungi. Linux Foundation telah mendaftarkan merek dagang dan pengunaannya. Perinciannya bisa dilihat padahalaman penggunaan merek dagangICP license: 京ICP备17074266号-3