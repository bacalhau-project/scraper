URL: https://docs.bacalhau.org/setting-up/workload-onboarding/index-1

Bacalhau Docsv.1.4.0v.1.3.0v.1.3.1v.1.3.2v.1.4.0GitHubSlackContactMoreGitHubSlackContactAsk or SearchCtrl+ KWelcomeGetting StartedHow Bacalhau WorksInstallationCreate NetworkHardware SetupContainer OnboardingDocker WorkloadsWebAssembly (Wasm) WorkloadsSetting UpRunning NodesNode OnboardingGPU InstallationJob selection policyAccess ManagementNode persistenceConnect StorageConfiguration ManagementConfiguring Transport Level SecurityLimits and TimeoutsTest Network LocallyBacalhau WebUIWorkload OnboardingContainerDocker Workload OnboardingWebAssembly (Wasm) WorkloadsBacalhau Docker ImageHow To Work With Custom Containers in BacalhauPythonBuilding and Running Custom Python ContainerRunning Pandas on BacalhauRunning a Python ScriptRunning Jupyter Notebooks on BacalhauScripting Bacalhau with PythonR (language)Building and Running your Custom R Containers on BacalhauRunning a Simple R Script on BacalhauRun CUDA programs on BacalhauRunning a Prolog ScriptReading Data from Multiple S3 Buckets using BacalhauRunning Rust programs as WebAssembly (WASM)Generate Synthetic Data using Sparkov Data Generation techniqueData IngestionCopy Data from URL to Public StoragePinning DataRunning a Job over S3 dataNetworking InstructionsAccessing the Internet from JobsUtilizing NATS.io within BacalhauGPU Workloads SetupAutomatic Update CheckingMarketplace DeploymentsGoogle Cloud MarketplaceGuidesWrite a config.yamlWrite a SpecConfigExamplesData EngineeringUsing Bacalhau with DuckDBEthereum Blockchain Analysis with Ethereum-ETL and BacalhauConvert CSV To Parquet Or AvroSimple Image ProcessingOceanography - Data ConversionVideo ProcessingModel InferenceEasyOCR (Optical Character Recognition) on BacalhauRunning Inference on Dolly 2.0 Model with Hugging FaceSpeech Recognition using WhisperStable Diffusion on a GPUStable Diffusion on a CPUObject Detection with YOLOv5 on BacalhauGenerate Realistic Images using StyleGAN3 and BacalhauStable Diffusion Checkpoint InferenceRunning Inference on a Model stored on S3Model TrainingTraining Pytorch Model with BacalhauTraining Tensorflow ModelStable Diffusion Dreambooth (Finetuning)Molecular DynamicsRunning BIDS Apps on BacalhauCoresets On BacalhauGenomics Data GenerationGromacs for AnalysisMolecular Simulation with OpenMM and BacalhauReferencesJobs GuideJob SpecificationJob TypesTask SpecificationEnginesDocker Engine SpecificationWebAssembly (WASM) Engine SpecificationPublishersIPFS Publisher SpecificationLocal Publisher SpecificationS3 Publisher SpecificationSourcesIPFS Source SpecificationLocal Source SpecificationS3 Source SpecificationURL Source SpecificationNetwork SpecificationInput Source SpecificationResources SpecificationResultPath SpecificationConstraint SpecificationLabels SpecificationMeta SpecificationJob TemplatesQueuing & TimeoutsJob QueuingTimeouts SpecificationJob ResultsStateCLI GuideSingle CLI commandsAgentAgent OverviewAgent AliveAgent NodeAgent VersionConfigConfig OverviewConfig Auto-ResourcesConfig DefaultConfig ListConfig SetJobJob OverviewJob DescribeJob ExecJob ExecutionsJob HistoryJob ListJob LogsJob RunJob StopNodeNode OverviewNode ApproveNode DeleteNode ListNode DescribeNode RejectCLI Commands OverviewCommand MigrationAPI GuideBacalhau API overviewBest PracticesAgent EndpointOrchestrator EndpointMigration APINode ManagementAuthentication & AuthorizationDatabase IntegrationDebuggingDebugging Failed JobsDebugging LocallyOpen Telemetry in BacalhauRunning locally in 'devstack'Setting up Dev EnvironmentHelp & FAQBacalhau FAQsRelease NotesGlossaryIntegrationsApache Airflow Provider for BacalhauLilypadBacalhau Python SDKObservability for WebAssembly WorkloadsCommunitySocial MediaStyle GuideWays to ContributePowered by GitBookRunning a Prolog ScriptIntroductionProlog is intended primarily as a declarative programming language: the program logic is expressed in terms of relations, represented as facts and rules. A computation is initiated by running a query over these relations. Prolog is well-suited for specific tasks that benefit from rule-based logical queries such as searching databases, voice control systems, and filling templates.This tutorial is a quick guide on how to run a hello world script on Bacalhau.PrerequisitesTo get started, you need to install the Bacalhau client, see more informationhere1. Running Locally​To get started, installswiplCopysudoadd-apt-repositoryppa:swi-prolog/stablesudoapt-getupdatesudoapt-getinstallswi-prologCreate a file calledhelloworld.pl. The following script prints ‘Hello World’ to the stdout:Copy# helloworld.plhello_world:-write('Hello World'),nl,halt.Running the script to print out the output:Copyswipl-q-shelloworld.pl-ghello_worldAfter the script has run successfully locally, we can now run it on Bacalhau.Before running it on Bacalhau we need to upload it to IPFS.Using theIPFS cli:Copywgethttps://dist.ipfs.io/go-ipfs/v0.4.2/go-ipfs_v0.4.2_linux-amd64.tar.gztarxvfzgo-ipfs_v0.4.2_linux-amd64.tar.gzmvgo-ipfs/ipfs/usr/local/bin/ipfsipfsinitipfscat/ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG/readmeipfsconfigAddresses.Gateway/ip4/127.0.0.1/tcp/8082ipfsconfigAddresses.API/ip4/127.0.0.1/tcp/5002nohupipfsdaemon>startup.log&Run the command below to check if our script has been uploaded.Copyipfsaddhelloworld.plThis command outputs the CID. Copy the CID of the file, which in our case isQmYq9ipYf3vsj7iLv5C67BXZcpLHxZbvFAJbtj7aKN5qiiSince the data uploaded to IPFS isn’t pinned, we will need to do that manually. Check this information on how to pin yourdataWe recommend usingNFT.Storage.2. Running a Bacalhau JobWe will mount the script to the container using the-iflag:-i: ipfs://< CID >:/< name-of-the-script >.To submit a job, run the following Bacalhau command:CopyexportJOB_ID=$(bacalhaudockerrun\-iipfs://QmYq9ipYf3vsj7iLv5C67BXZcpLHxZbvFAJbtj7aKN5qii:/helloworld.pl\--wait\--id-only\swipl\--swipl-q-shelloworld.pl-ghello_world)Structure of the Command-i ipfs://QmYq9ipYf3vsj7iLv5C67BXZcpLHxZbvFAJbtj7aKN5qii:/helloworld.pl: Sets the input data for the container.mYq9ipYf3vsj7iLv5C67BXZcpLHxZbvFAJbtj7aKN5qiiis our CID which points to thehelloworld.plfile on the IPFS network. This file will be accessible within the container.-- swipl -q -s helloworld.pl -g hello_world: instructs SWI-Prolog to load the program from thehelloworld.plfile and execute thehello_worldfunction in quiet mode:-q: running in quiet mode-s: load file as a script. In this case we want to run thehelloworld.plscript-g: is the name of the function you want to execute. In this case itshello_worldWhen a job is submitted, Bacalhau prints out the relatedjob_id. We store that in an environment variable so that we can reuse it later on:3. Checking the State of your JobsJob status: You can check the status of the job usingbacalhau job list.Copybacalhaujoblist--id-filter${JOB_ID}--wideWhen it saysPublishedorCompleted, that means the job is done, and we can get the results.Job information: You can find out more information about your job by usingbacalhau job describe.Copybacalhaujobdescribe${JOB_ID}Job download: You can download your job results directly by usingbacalhau job get. Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory (results) and downloaded our job output to be stored in that directory.Copyrm-rfresults&&mkdir-presultsbacalhaujobget$JOB_ID--output-dirresults4. Viewing your Job OutputTo view the file, run the following command:Copycatresults/stdoutSupportIf you have questions or need support or guidance, please reach out to theBacalhau team via Slack(#generalchannel).PreviousRun CUDA programs on BacalhauNextReading Data from Multiple S3 Buckets using BacalhauLast updated2 months agoOn this pageIntroductionPrerequisites1. Running Locally​2. Running a Bacalhau JobStructure of the Command3. Checking the State of your Jobs4. Viewing your Job OutputSupportWas this helpful?Edit on GitHubExport as PDFGet SupportExpansoSupportUse CasesDistributed ETLEdge MLDistributed Data WarehousingFlett ManagementAbout UsWho we areWhat we valueNews & BlogBlogNewsExpanso (2024). All Rights Reserved.