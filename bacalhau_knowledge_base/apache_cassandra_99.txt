URL: https://cassandra.apache.org/doc/latest/cassandra/developing/cql/appendices.html

Get StartedCassandra BasicsQuickstartEcosystemDocumentationCommunityWelcomeDiscussionsGovernanceContributeMeet the CommunityCatalyst ProgramEventsLearnCassandra 5.0Case StudiesResourcesBlogDownload NowCassandra DocumentationVersion:5.0mastertrunk5.04.14.03.11MainGlossaryHow to report bugsContact usDevelopmentGetting startedBuilding and IDE integrationTestingContributing code changesCode styleReview checklistHow to commitWorking on documentationJenkins CI environmentDependency managementRelease processCassandraFAQGetting StartedCassandra QuickstartSAI QuickstartVector Search QuickstartInstalling CassandraConfiguring CassandraInserting and queryingClient driversProduction recommendationsWhat’s newSupport for JavaArchitectureOverviewDynamoStorage EngineGuaranteesImproved Internode MessagingImproved StreamingData ModelingIntroductionConceptual data modelingRDBMS designDefining application queriesLogical data modelingPhysical data modelingEvaluating and refining data modelsDefining database schemaCassandra data modeling toolsCassandra Query Language (CQL)DefinitionsData typesData definition (DDL)Data manipulation (DML)Dynamic Data Masking (DDM)OperatorsIndexing conceptsSAI OverviewConceptsSAI QuickstartSAI FAQWorking with SAISAI operationsSecondary indexes (2i) overviewConceptsWorking with 2iRebuild 2iMaterialized viewsFunctionsJSONSecurityTriggersAppendicesChangesSASISingle file of CQL informationVector Search overviewConceptsData ModelingVector Search QuickstartWorking with Vector SearchManagingConfiguringcassandra.yamlcassandra-rackdc.propertiescassandra-env.shcassandra-topologies.propertiescommitlog-archiving.propertieslogback.xmljvm-* filesLiberating cassandra.yaml Parameters' Names from Their UnitsOperatingBackupsBloom filtersBulk loadingChange Data Capture (CDC)CompactionCompressionHardwareHintsLoggingAudit loggingAudit logging 2Full query loggingMonitoring metricsRepairRead repairSecuritySnitchesTopology changesTransient replicationVirtual tablesToolscqlsh: the CQL shellnodetoolSSTable toolscassandra-stressTroubleshootingFinding misbehaving nodesReading Cassandra logsUsing nodetoolUsing external tools to deep-diveReferenceALTER TABLECREATE INDEXCREATE CUSTOM INDEXCREATE TABLEDROP INDEXDROP TABLEPlug-insYou are viewing the documentation for a prerelease version.CassandraCassandra Query Language (CQL)AppendicesEditAppendicesAppendix A: CQL KeywordsCQL distinguishes betweenreservedandnon-reservedkeywords.
Reserved keywords cannot be used as identifier, they are truly reserved
for the language (but one can enclose a reserved keyword by
double-quotes to use it as an identifier). Non-reserved keywords however
only have a specific meaning in certain context but can used as
identifier otherwise. The onlyraison d’Ãªtreof these non-reserved
keywords is convenience: some keyword are non-reserved when it was
always easy for the parser to decide whether they were used as keywords
or not.KeywordReserved?ADDyesAGGREGATEnoALLnoALLOWyesALTERyesANDyesAPPLYyesASnoASCyesASCIInoAUTHORIZEyesBATCHyesBEGINyesBIGINTnoBLOBnoBOOLEANnoBYyesCALLEDnoCLUSTERINGnoCOLUMNFAMILYyesCOMPACTnoCONTAINSnoCOUNTnoCOUNTERnoCREATEyesCUSTOMnoDATEnoDECIMALnoDELETEyesDESCyesDESCRIBEyesDISTINCTnoDOUBLEnoDROPyesENTRIESyesEXECUTEyesEXISTSnoFILTERINGnoFINALFUNCnoFLOATnoFROMyesFROZENnoFULLyesFUNCTIONnoFUNCTIONSnoGRANTyesIFyesINyesINDEXyesINETnoINFINITYyesINITCONDnoINPUTnoINSERTyesINTnoINTOyesJSONnoKEYnoKEYSnoKEYSPACEyesKEYSPACESnoLANGUAGEnoLIMITyesLISTnoLOGINnoMAPnoMASKEDnoMODIFYyesNANyesNOLOGINnoNORECURSIVEyesNOSUPERUSERnoNOTyesNULLyesOFyesONyesOPTIONSnoORyesORDERyesPASSWORDnoPERMISSIONnoPERMISSIONSnoPRIMARYyesRENAMEyesREPLACEyesRETURNSnoREVOKEyesROLEnoROLESnoSCHEMAyesSELECTyesSELECT_MASKEDnoSETyesSFUNCnoSMALLINTnoSTATICnoSTORAGEnoSTYPEnoSUPERUSERnoTABLEyesTEXTnoTIMEnoTIMESTAMPnoTIMEUUIDnoTINYINTnoTOyesTOKENyesTRIGGERnoTRUNCATEyesTTLnoTUPLEnoTYPEnoUNLOGGEDyesUNMASKnoUPDATEyesUSEyesUSERnoUSERSnoUSINGyesUUIDnoVALUESnoVARCHARnoVARINTnoWHEREyesWITHyesWRITETIMEnoMAXWRITETIMEnoAppendix B: CQL Reserved TypesThe following type names are not currently used by CQL, but are reserved
for potential future use. User-defined types may not use reserved type
names as their name.typebitstringbytecomplexenumintervalmacaddrAppendix C: Dropping Compact StorageStarting version 4.0, Thrift and COMPACT STORAGE is no longer supported.ALTER …​ DROP COMPACT STORAGEstatement makes Compact Tables
CQL-compatible, exposing internal structure of Thrift/Compact Tables:CQL-created Compact Tables that have no clustering columns, will
expose an additional clustering columncolumn1withUTF8Type.CQL-created Compact Tables that had no regular columns, will expose a
regular columnvaluewithBytesType.For CQL-Created Compact Tables, all columns originally defined asregularwill be comestaticCQL-created Compact Tables that have clustering but have no regular
columns will have an empty value column (ofEmptyType)SuperColumn Tables (can only be created through Thrift) will expose a
compact value map with an empty name.Thrift-created Compact Tables will have types corresponding to their
Thrift definition.Get started with Cassandra, fast.Quickstart GuideApache Cassandrapowers mission-critical deployments with improved performance and unparalleled levels of scale in the cloud.HomeCassandra BasicsQuickstartEcosystemDocumentationCommunityCase StudiesResourcesBlogFoundationEventsLicenseThanksSecurityPrivacySponsorshipÂ© 2009-The Apache Software Foundationunder the terms of the Apache License 2.0.  Apache, the Apache feather logo, Apache Cassandra, Cassandra, and the Cassandra logo, are either registered trademarks or trademarks of The Apache Software Foundation.