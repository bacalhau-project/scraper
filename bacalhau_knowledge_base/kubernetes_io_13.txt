URL: https://kubernetes.io/de/

DokumentationKubernetes BlogSchulungenPartnerCommunityFallstudienVersionsRelease Informationv1.31v1.30v1.29v1.28v1.27Deutsch (German)Englishবাংলা (Bengali)中文 (Chinese)Français (French)हिन्दी (Hindi)Bahasa Indonesia (Indonesian)Italiano (Italian)日本語 (Japanese)한국어 (Korean)Polski (Polish)Português (Portuguese)Русский (Russian)Español (Spanish)Українська (Ukrainian)Tiếng Việt (Vietnamese)Produktionsreife Container-OrchestrierungKubernetes Grundlagen lernenKubernetes (K8s)ist ein Open-Source-System zur Automatisierung der Bereitstellung, Skalierung und Verwaltung von containerisierten Anwendungen.Es gruppiert Container, aus denen sich eine Anwendung zusammensetzt, in logische Einheiten, um die Verwaltung und Erkennung zu erleichtern. Kubernetes baut auf15 Jahre Erfahrung in Bewältigung von Produktions-Workloads bei Google, kombiniert mit Best-of-Breed-Ideen und Praktiken aus der Community.AusgereiftKubernetes basiert auf denselben Prinzipien, die es Google ermöglichen, Milliarden von Containern pro Woche zu betreiben.MitwachsendUnabhängig davon, ob Du lokal testest oder ein globales Unternehmen betreibst: Die Flexibilität von Kubernetes wächst mit Dir, um Deine Anwendungen konsistent und einfach bereitzustellen - Unabhängig von der Komplexität Deiner Anforderungen.Überall LauffähigKubernetes ist Open Source und bietet Dir die Freiheit, die Infrastruktur vor Ort, Hybrid oder Public Cloud zu nutzen. So kannst Du Workloads mühelos dorthin verschieben, wo es Dir wichtig ist.Die Herausforderungen bei der Migration von über 150 Microservices auf KubernetesVon Sarah Wells, technische Direktorin für Betrieb und Zuverlässigkeit, Financial TimesVideo ansehenBesuche die KubeCon + CloudNativeCon Europe vom 19. bis 22. März 2024Besuche die KubeCon + CloudNativeCon North America vom 12. bis 15. November 2024Kubernetes FeaturesAutomatisierte Rollouts und RollbacksKubernetes wendet Änderungen an deinen Anwendungen oder seiner eigenen Konfiguration stufenweise an. Währenddessen achtet es darauf, dass nicht alle Instanzen der Anwendung zur gleichen Zeit beeinträchtigt werden. Falls etwas schief geht, macht Kubernetes die Änderungen rückgängig.Speicher-OrchestrierungBinde automatisch deinen gewünschten Speicher ein. Egal, ob lokaler Speicher, Speicher eines Cloud Providers (z.B. AWS oder GCP) oder ein Netzwerkspeicher (z.B. NFS, iSCSI, Ceph oder Cinder).Service-Discovery und Load BalancingAnwendungen müssen keinen komplizierten Mechanismus für Service-Discovery verwenden. Kubernetes verteilt IP-Adressen und DNS-Einträge automatisch an Pods und übernimmt auch das Load Balancing.SelbstheilungContainer werden mithilfe von Health-Checks überwacht und im Falle eines Fehlers neu gestartet. Sie werden erst wieder verwendet, wenn Sie komplett einsatzbereit sind.Verwaltung von Secrets und KonfigurationenDeploye und aktualisiere Secrets sowie Anwendungskonfigurationen, ohne ein Image neu zu bauen oder Secrets preiszugeben.Automatisches Bin PackingContainer können je nach Systemanforderungen auf spezifischen Nodes ausgeführt werden. Somit kann eine effiziente Nutzung von Ressourcen erreicht werden.Stapelweise AusführungNeben Diensten kann Kubernetes auch die stapelweise Ausführung von Workloads verwalten. Im Falle eines Fehlers können Container ausgetauscht werden.Horizontales SkalierenSkaliere deine Anwendung mit einem einfachen Befehl, über die Benutzeroberfläche oder automatisch, basierend auf der CPU-Auslastung.IPv4/IPv6 Dual-StackPods und Dienste können gleichzeitig IPv4- und IPv6-Adressen verwenden.Für Erweiterungen entworfenKubernetes kann ohne Änderungen am Upstream-Quelltext erweitert werden.FallstudienWir sind einCNCFAbschlussprojektMöchtest du die neuesten Nachrichten von Kubernetes erhalten? Melde dich für KubeWeekly an.DokumentationBlogSchulungenPartnerCommunityFallstudien© 2024 The Kubernetes Authors | Documentation Distributed underCC BY 4.0Copyright © 2024 The Linux Foundation ®. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see ourTrademark Usage pageICP license: 京ICP备17074266号-3