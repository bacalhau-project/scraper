URL: https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsSnapshots.html

Wiki|git|Apache Hadoop| Last Published: 2024-03-04
               | Version: 3.4.0GeneralOverviewSingle Node SetupCluster SetupCommands ReferenceFileSystem ShellCompatibility SpecificationDownstream Developer's GuideAdmin Compatibility GuideInterface ClassificationFileSystem SpecificationCommonCLI Mini ClusterFair Call QueueNative LibrariesProxy UserRack AwarenessSecure ModeService Level AuthorizationHTTP AuthenticationCredential Provider APIHadoop KMSTracingUnix Shell GuideRegistryAsync ProfilerHDFSArchitectureUser GuideCommands ReferenceNameNode HA With QJMNameNode HA With NFSObserver NameNodeFederationViewFsViewFsOverloadSchemeSnapshotsEdits ViewerImage ViewerPermissions and HDFSQuotas and HDFSlibhdfs (C API)WebHDFS (REST API)HttpFSShort Circuit Local ReadsCentralized Cache ManagementNFS GatewayRolling UpgradeExtended AttributesTransparent EncryptionMultihomingStorage PoliciesMemory Storage SupportSynthetic Load GeneratorErasure CodingDisk BalancerUpgrade DomainDataNode AdminRouter FederationProvided StorageMapReduceTutorialCommands ReferenceCompatibility with 1.xEncrypted ShufflePluggable Shuffle/SortDistributed Cache DeploySupport for YARN Shared CacheMapReduce REST APIsMR Application MasterMR History ServerYARNArchitectureCommands ReferenceCapacity SchedulerFair SchedulerResourceManager RestartResourceManager HAResource ModelNode LabelsNode AttributesWeb Application ProxyTimeline ServerTimeline Service V.2Writing YARN ApplicationsYARN Application SecurityNodeManagerRunning Applications in Docker ContainersRunning Applications in runC ContainersUsing CGroupsSecure ContainersReservation SystemGraceful DecommissionOpportunistic ContainersYARN FederationShared CacheUsing GPUUsing FPGAPlacement ConstraintsYARN UI2YARN REST APIsIntroductionResource ManagerNode ManagerTimeline ServerTimeline Service V.2YARN ServiceOverviewQuickStartConceptsYarn Service APIService DiscoverySystem ServicesHadoop Compatible File SystemsAliyun OSSAmazon S3Azure Blob StorageAzure Data Lake StorageTencent COSHuaweicloud OBSAuthOverviewExamplesConfigurationBuildingToolsHadoop StreamingHadoop ArchivesHadoop Archive LogsDistCpHDFS Federation BalanceGridMixRumenResource Estimator ServiceScheduler Load SimulatorHadoop BenchmarkingDynamometerReferenceChangelog and Release NotesJava API docsUnix Shell APIMetricsConfigurationcore-default.xmlhdfs-default.xmlhdfs-rbf-default.xmlmapred-default.xmlyarn-default.xmlkms-default.xmlhttpfs-default.xmlDeprecated PropertiesHDFS SnapshotsOverviewSnapshottable DirectoriesSnapshot PathsUpgrading to a version of HDFS with snapshotsSnapshot OperationsAdministrator OperationsAllow SnapshotsDisallow SnapshotsProvision SnapshotTrashUser OperationsCreate SnapshotsDelete SnapshotsRename SnapshotsGet Snapshottable Directory ListingGet Snapshot ListingGet Snapshots Difference ReportOverviewHDFS Snapshots are read-only point-in-time copies of the file system. Snapshots can be taken on a subtree of the file system or the entire file system. Some common use cases of snapshots are data backup, protection against user errors and disaster recovery.The implementation of HDFS Snapshots is efficient:Snapshot creation is instantaneous: the cost isO(1)excluding the inode lookup time.Additional memory is used only when modifications are made relative to a snapshot: memory usage isO(M), whereMis the number of modified files/directories.Blocks in datanodes are not copied: the snapshot files record the block list and the file size. There is no data copying.Snapshots do not adversely affect regular HDFS operations: modifications are recorded in reverse chronological order so that the current data can be accessed directly. The snapshot data is computed by subtracting the modifications from the current data.Snapshottable DirectoriesSnapshots can be taken on any directory once the directory has been set assnapshottable. A snapshottable directory is able to accommodate 65,536 simultaneous snapshots. There is no limit on the number of snapshottable directories. Administrators may set any directory to be snapshottable. If there are snapshots in a snapshottable directory, the directory can be neither deleted nor renamed before all the snapshots are deleted.Nested snapshottable directories are currently not allowed. In other words, a directory cannot be set to snapshottable if one of its ancestors/descendants is a snapshottable directory.Snapshot PathsFor a snapshottable directory, the path component“.snapshot”is used for accessing its snapshots. Suppose/foois a snapshottable directory,/foo/baris a file/directory in/foo, and/foohas a snapshots0. Then, the path/foo/.snapshot/s0/barrefers to the snapshot copy of/foo/bar. The usual API and CLI can work with the “.snapshot” paths. The following are some examples.Listing all the snapshots under a snapshottable directory:hdfs dfs -ls /foo/.snapshotListing the files in snapshots0:hdfs dfs -ls /foo/.snapshot/s0Copying a file from snapshots0:hdfs dfs -cp -ptopax /foo/.snapshot/s0/bar /tmpNote that this example uses the preserve option to preserve timestamps, ownership, permission, ACLs and XAttrs.Upgrading to a version of HDFS with snapshotsThe HDFS snapshot feature introduces a new reserved path name used to interact with snapshots:.snapshot. When upgrading from an older version of HDFS which does not support snapshots, existing paths named.snapshotneed to first be renamed or deleted to avoid conflicting with the reserved path. See the upgrade section inthe HDFS user guidefor more information.Snapshot OperationsAdministrator OperationsThe operations described in this section require superuser privilege.Allow SnapshotsAllowing snapshots of a directory to be created. If the operation completes successfully, the directory becomes snapshottable.Command:hdfs dfsadmin -allowSnapshot <path>Arguments:pathThe path of the snapshottable directory.See also the corresponding Java APIvoid allowSnapshot(Path path)inHdfsAdmin.Disallow SnapshotsDisallowing snapshots of a directory to be created. All snapshots of the directory must be deleted before disallowing snapshots.Command:hdfs dfsadmin -disallowSnapshot <path>Arguments:pathThe path of the snapshottable directory.See also the corresponding Java APIvoid disallowSnapshot(Path path)inHdfsAdmin.Provision SnapshotTrashProvision trash root in one or all snapshottable directories.Command:hdfs dfsadmin -provisionSnapshotTrash <path> [-all]Arguments:pathThe path of the snapshottable directory.-allWhich is an optional argument, when it is set will provision trash root in all  snapshottable directories.See also the corresponding Java APIvoid provisionSnapshotTrash(Path path)inHdfsAdmin.User OperationsThe section describes user operations. Note that HDFS superuser can perform all the operations without satisfying the permission requirement in the individual operations.Create SnapshotsCreate a snapshot of a snapshottable directory. This operation requires owner privilege of the snapshottable directory.Command:hdfs dfs -createSnapshot <path> [<snapshotName>]Arguments:pathThe path of the snapshottable directory.snapshotNameThe snapshot name, which is an optional argument. When it is omitted, a default name is generated using a timestamp with the format"'s'yyyyMMdd-HHmmss.SSS", e.g."s20130412-151029.033".See also the corresponding Java APIPath createSnapshot(Path path)andPath createSnapshot(Path path, String snapshotName)inFileSystemThe snapshot path is returned in these methods.Delete SnapshotsDelete a snapshot from a snapshottable directory. This operation requires owner privilege of the snapshottable directory.Command:hdfs dfs -deleteSnapshot <path> <snapshotName>Arguments:pathThe path of the snapshottable directory.snapshotNameThe snapshot name.See also the corresponding Java APIvoid deleteSnapshot(Path path, String snapshotName)inFileSystem.Rename SnapshotsRename a snapshot. This operation requires owner privilege of the snapshottable directory.Command:hdfs dfs -renameSnapshot <path> <oldName> <newName>Arguments:pathThe path of the snapshottable directory.oldNameThe old snapshot name.newNameThe new snapshot name.See also the corresponding Java APIvoid renameSnapshot(Path path, String oldName, String newName)inFileSystem.Get Snapshottable Directory ListingGet all the snapshottable directories where the current user has permission to take snapshtos.Command:hdfs lsSnapshottableDirArguments: noneSee also the corresponding Java APISnapshottableDirectoryStatus[] getSnapshottableDirectoryListing()inDistributedFileSystem.Get Snapshot ListingGet all the snapshots for a snapshottable directory.Command:hdfs lsSnapshot <snapshotRoot>Arguments:pathThe path of the snapshottable directory.See also the corresponding Java APISnapshotStatus[] getSnapshotListing()inDistributedFileSystem.Get Snapshots Difference ReportGet the differences between two snapshots. This operation requires read access privilege for all files/directories in both snapshots.Command:hdfs snapshotDiff <path> <fromSnapshot> <toSnapshot>Arguments:pathThe path of the snapshottable directory.fromSnapshotThe name of the starting snapshot.toSnapshotThe name of the ending snapshot.Note that snapshotDiff can be used to get the difference report between two snapshots, or between a snapshot and the current status of a directory. Users can use “.” to represent the current status.Results:+The file/directory has been created.-The file/directory has been deleted.MThe file/directory has been modified.RThe file/directory has been renamed.ARENAMEentry indicates a file/directory has been renamed but is still under the same snapshottable directory. A file/directory is reported as deleted if it was renamed to outside of the snapshottble directory. A file/directory renamed from outside of the snapshottble directory is reported as newly created.The snapshot difference report does not guarantee the same operation sequence. For example, if we rename the directory“/foo”to“/foo2”, and then append new data to the file“/foo2/bar”, the difference report will be:R. /foo -> /foo2
M. /foo/barI.e., the changes on the files/directories under a renamed directory is reported using the original path before the rename (“/foo/bar”in the above example).See also the corresponding Java APISnapshotDiffReport getSnapshotDiffReport(Path path, String fromSnapshot, String toSnapshot)inDistributedFileSystem.©            2008-2024
              Apache Software Foundation
            
                          -Privacy Policy.
        Apache Maven, Maven, Apache, the Apache feather logo, and the Apache Maven project logos are trademarks of The Apache Software Foundation.