Source: grpc_io
URL: https://grpc.io/docs/guides/

[Authentication](/docs/guides/auth/)
An overview of gRPC authentication, including built-in auth mechanisms, and how to plug in your own authentication systems.
The documentation covers the following techniques:
An overview of gRPC authentication, including built-in auth mechanisms, and how to plug in your own authentication systems.
gRPC is designed to support high-performance open-source RPCs in many languages. This page describes performance benchmarking tools, scenarios considered by tests, and the testing infrastructure.
Explains how and when to cancel RPCs.
How to compress the data sent over the wire while using gRPC.
A mechanism in the gRPC library that allows users to inject custom metrics at the gRPC server and consume at gRPC clients to make your custom load balancing algorithms.
Explains how custom load balancing policies can help optimize load balancing under unique circumstances.
Explains standard name resolution, the custom name resolver interface, and how to write an implementation.
Explains how deadlines can be used to effectively deal with unreliable backends.
Explains the debugging process of gRPC applications using grpcdebug
How gRPC deals with errors, and gRPC error codes.
Explains what flow control is and how you can manually control it.
Explains how gRPC servers expose a health checking service and how client can be configured to automatically check the health of the server it is connecting to.
Explains how interceptors can be used for implementing generic behavior that applies to many RPC methods.
How to use HTTP/2 PING-based keepalives in gRPC.
Explains what metadata is, how it is transmitted, and what it is used for.
OpenTelemetry Metrics available in gRPC
A user guide of both general and language-specific best practices to improve performance.
Explains how reflection can be used to improve the transparency and interpretability of RPCs.
Explains what request hedging is and how you can configure it.
gRPC takes the stress out of failures! Get fine-grained retry control and detailed insights with OpenCensus and OpenTelemetry support.
How the service config can be used by service owners to control client behavior.
Explains the status codes used in gRPC.
Explains how to configure RPCs to wait for the server to be ready before sending the request.