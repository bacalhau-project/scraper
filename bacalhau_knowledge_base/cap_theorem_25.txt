URL: https://en.wikipedia.org/w/index.php?title=CAP_theorem&action=edit

Jump to contentMain menuMain menumove to sidebarhideNavigationMain pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonateContributeHelpLearn to editCommunity portalRecent changesUpload fileSearchSearchAppearanceCreate accountLog inPersonal toolsCreate accountLog inPages for logged out editorslearn moreContributionsTalkEditingCAP theoremAdd languagesArticleTalkEnglishReadEditView historyToolsToolsmove to sidebarhideActionsReadEditView historyGeneralWhat links hereRelated changesUpload fileSpecial pagesPage informationGet shortened URLDownload QR codeWikidata itemIn other projectsAppearancemove to sidebarhidePage noticeYou are not logged in.YourIP addresswill be publicly visible if you make any edits. If youlog inorcreate an account, your edits will be attributed to a username, amongother benefits.Content thatviolates any copyrightswill be deleted. Encyclopedic content must be verifiable throughcitations to reliable sources.Anti-spam check.
Donotfill this in!{{short description|Need to sacrifice consistency or availability in the presence of network partitions}}
In [[database theory]], the '''CAP theorem''', also named '''Brewer's theorem''' after computer scientist [[Eric Brewer (scientist)|Eric Brewer]], states that any [[distributed data store]] can provide only [[Trilemma|two of the following three]] guarantees:<ref name="Gilbert Lynch">{{cite journal | last1=Gilbert | first1=Seth | last2=Lynch | first2=Nancy | title=Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services | journal=ACM SIGACT News | publisher=Association for Computing Machinery (ACM) | volume=33 | issue=2 | year=2002 | issn=0163-5700 | doi=10.1145/564585.564601 | pages=51–59| s2cid=15892169 }}</ref><ref>{{cite web | title=Brewer's CAP Theorem | website=julianbrowne.com | date=2009-01-11 | url=https://www.julianbrowne.com/article/brewers-cap-theorem/}}</ref><ref>{{cite web | title=Brewers CAP Theorem on distributed systems | website=royans.net  | date=2010-02-14 | url=https://www.royans.net/2010/02/brewers-cap-theorem-on-distributed.html}}</ref>
; [[Consistency model|Consistency]]: Every read receives the most recent write or an error.
; [[Availability]]: Every request received by a non-failing node in the system must result in a response. This is the definition of availability in CAP theorem as defined by Gilbert and Lynch.<ref name="Gilbert Lynch"/>  Note that availability as defined in CAP theorem is different from [[high availability]] in software architecture.<ref>{{Cite book |last=Fowler |first=Adam |title=NoSQL For Dummies |publisher=For Dummies |year=2015 |isbn=978-8126554904}}</ref>
; [[Network partitioning|Partition tolerance]]: The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes.

When a [[network partition]] failure happens, it must be decided whether to do one of the following:
* cancel the operation and thus decrease the availability but ensure consistency
* proceed with the operation and thus provide availability but risk inconsistency.  Note this doesn't necessarily mean that system is [[High availability|highly available]] to its users. <ref>{{Cite book |last=Fowler |first=Adam |title=NoSQL For Dummies |publisher=For Dummies |year=2015 |isbn=978-8126554904}}</ref>

[[File:CAP Theorem Venn Diagram.png|thumb|CAP theorem Euler diagram]]

Thus, if there is a network partition, one has to choose between consistency or availability. Note that consistency as defined in the CAP theorem is quite different from the consistency guaranteed in [[ACID]] [[database transaction]]s.<ref>{{cite web |last1=Liochon |first1=Nicolas |title=The confusing CAP and ACID wording |url=http://blog.thislongrun.com/2015/03/the-confusing-cap-and-acid-wording.html |website=This long run |access-date=1 February 2019}}</ref>

== Explanation ==
No distributed system is safe from network failures, thus network partitioning generally has to be tolerated.<ref>{{cite report|last1=Kleppmann |first1=Martin |title=A Critique of the CAP Theorem |date=2015-09-18 |publisher=Apollo - University of Cambridge Repository |doi=10.17863/CAM.13083 |url=https://www.repository.cam.ac.uk/handle/1810/267054 |access-date=24 November 2019|bibcode=2015arXiv150905393K |arxiv=1509.05393 |s2cid=1991487 }}</ref><ref>{{cite web |last1=Martin |first1=Kleppmann |title=Please stop calling databases CP or AP |url=https://martin.kleppmann.com/2015/05/11/please-stop-calling-databases-cp-or-ap.html |website=Martin Kleppmann's Blog |access-date=24 November 2019}}</ref> In the presence of a partition, one is then left with two options: consistency or [[availability]]. When choosing consistency over availability, the system will return an error or a time out if particular information cannot be guaranteed to be up to date due to network partitioning. When choosing availability over consistency, the system will always process the query and try to return the most recent available version of the information, even if it cannot guarantee it is up to date due to network partitioning.

In the absence of a partition, both availability and consistency can be satisfied.<ref name="paclec">{{Cite web|url=http://dbmsmusings.blogspot.com/2010/04/problems-with-cap-and-yahoos-little.html|title=DBMS Musings: Problems with CAP, and Yahoo's little known NoSQL system|last=Abadi|first=Daniel|date=2010-04-23|website=DBMS Musings|access-date=2018-01-23}}</ref>

Database systems designed with traditional [[ACID]] guarantees in mind such as [[Relational database management system|RDBMS]] choose [[Consistency (database systems)|consistency]] over availability, whereas systems designed around the [[Eventual consistency|BASE]] philosophy, common in the [[NoSQL]] movement for example, choose availability over consistency.<ref name="Brewer2012" />

== History ==

According to computer scientist [[Eric Brewer (scientist)|Eric Brewer]] of the [[University of California, Berkeley]], the theorem first appeared in autumn 1998.<ref name="Brewer2012">{{cite journal | last=Brewer | first=Eric | title=CAP twelve years later: How the "rules" have changed | journal=Computer | publisher=Institute of Electrical and Electronics Engineers (IEEE) | volume=45 | issue=2 | year=2012 | issn=0018-9162 | doi=10.1109/mc.2012.37 | pages=23–29 | s2cid=890105 |url=http://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed}}</ref> It was published as the CAP principle in 1999<ref name="Brewer1999">{{cite conference |author1=Armando Fox |author2=Eric Brewer |title=Harvest, Yield and Scalable Tolerant Systems |conference=Proc. 7th Workshop Hot Topics in Operating Systems (HotOS 99) |publisher=IEEE CS |year=1999 |pages=174–178 |doi=10.1109/HOTOS.1999.798396}}</ref> and presented as a [[conjecture]] by Brewer at the 2000 [[Symposium on Principles of Distributed Computing]] (PODC).<ref name="Brewer2000">{{cite web |author=Eric Brewer |url=http://www.cs.berkeley.edu/~brewer/cs262b-2004/PODC-keynote.pdf |title=Towards Robust Distributed Systems}}</ref> In 2002, [[Seth Gilbert]] and [[Nancy Lynch]] of [[MIT]] published a formal proof of Brewer's conjecture, rendering it a [[theorem]].<ref name="Gilbert Lynch"/>

In 2012, Brewer clarified some of his positions, including why the often-used "two out of three" concept can be somewhat misleading because system designers only need to sacrifice consistency or availability in the presence of partitions; partition management and recovery techniques exist. Brewer also noted the different definition of consistency used in the CAP theorem relative to the definition used in [[ACID]].<ref name="Brewer2012" /><ref name=":0">{{Cite book |last1=Carpenter |first1=Jeff |url=https://www.oreilly.com/library/view/cassandra-the-definitive/9781491933657/ |title=Cassandra: The Definitive Guide |last2=Hewitt |first2=Eben |date=July 2016 |publisher=O'Reilly Media |isbn=9781491933657 |edition=2nd |quote=In February 2012, Eric Brewer provided an updated perspective on his CAP theorem{{nbsp}}... Brewer now describes the “2 out of 3” axiom as somewhat misleading. He notes that designers only need sacrifice consistency or availability in the presence of partitions, and that advances in partition recovery techniques have made it possible for designers to achieve high levels of both consistency and availability.}}</ref>

A similar theorem stating the trade-off between consistency and availability in distributed systems was published by Birman and Friedman in 1996.<ref>{{cite web |author1=Ken Birman |author2=Roy Friedman |url=https://ecommons.cornell.edu/handle/1813/7235 |title=Trading Consistency for Availability in Distributed Systems |date=April 1996 |hdl=1813/7235}}</ref> Birman and Friedman's result restricted this lower bound to non-commuting operations.

The [[PACELC theorem]], introduced in 2010,<ref name="paclec" /> builds on CAP by stating that even in the absence of partitioning, there is another trade-off between latency and consistency. PACELC means, if partition (P) happens, the trade-off is between availability (A) and consistency (C); Else (E), the trade-off is between latency (L) and consistency (C).

== See also ==
* [[Fallacies of distributed computing]]
* [[Lambda architecture]] (solution)
* [[PACELC theorem]]
* [[Paxos (computer science)]]
* [[Raft (computer science)]]
* [[Zooko's triangle]]
* [[Inconsistent triad]]
* [[Trilemma]]

== References ==
{{reflist}}

== External links ==
* [https://research.google.com/pubs/pub45855.html Spanner, TrueTime and the CAP Theorem]
* [http://groups.csail.mit.edu/tds/papers/Gilbert/Brewer2.pdf Perspectives on the CAP theorem]: An update from Gilbert and Lynch in 2012
{{Databases}}
{{DEFAULTSORT:Cap Theorem}}
[[Category:Distributed computing]]Edit summary(Briefly describe your changes)By publishing changes, you agree to theTerms of Use, and you irrevocably agree to release your contribution under theCC BY-SA 4.0 Licenseand theGFDL. You agree that a hyperlink or URL is sufficient attribution under the Creative Commons license.CancelEditing help(opens in new window)Copy and paste:– — ° ′ ″ ≈ ≠ ≤ ≥ ± − × ÷ ← → · §Cite your sources:<ref></ref>{{}}   {{{}}}   |   []   [[]]   [[Category:]]   #REDIRECT [[]]   &nbsp;   <s></s>   <sup></sup>   <sub></sub>   <code></code>   <pre></pre>   <blockquote></blockquote>   <ref></ref> <ref name="" />   {{Reflist}}   <references />   <includeonly></includeonly>   <noinclude></noinclude>   {{DEFAULTSORT:}}   <nowiki></nowiki>   <!-- -->   <span class="plainlinks"></span>Symbols:~ | ¡ ¿ † ‡ ↔ ↑ ↓ • ¶   # ∞   ‹› «»   ¤ ₳ ฿ ₵ ¢ ₡ ₢ $ ₫ ₯ € ₠ ₣ ƒ ₴ ₭ ₤ ℳ ₥ ₦ № ₧ ₰ £ ៛ ₨ ₪ ৳ ₮ ₩ ¥   ♠ ♣ ♥ ♦   𝄫 ♭ ♮ ♯ 𝄪   © ® ™Latin:A a Á á À à Â â Ä ä Ǎ ǎ Ă ă Ā ā Ã ã Å å Ą ą Æ æ Ǣ ǣ   B b   C c Ć ć Ċ ċ Ĉ ĉ Č č Ç ç   D d Ď ď Đ đ Ḍ ḍ Ð ð   E e É é È è Ė ė Ê ê Ë ë Ě ě Ĕ ĕ Ē ē Ẽ ẽ Ę ę Ẹ ẹ Ɛ ɛ Ǝ ǝ Ə ə   F f   G g Ġ ġ Ĝ ĝ Ğ ğ Ģ ģ   H h Ĥ ĥ Ħ ħ Ḥ ḥ   I i İ ı Í í Ì ì Î î Ï ï Ǐ ǐ Ĭ ĭ Ī ī Ĩ ĩ Į į Ị ị   J j Ĵ ĵ   K k Ķ ķ   L l Ĺ ĺ Ŀ ŀ Ľ ľ Ļ ļ Ł ł Ḷ ḷ Ḹ ḹ   M m Ṃ ṃ   N n Ń ń Ň ň Ñ ñ Ņ ņ Ṇ ṇ Ŋ ŋ   O o Ó ó Ò ò Ô ô Ö ö Ǒ ǒ Ŏ ŏ Ō ō Õ õ Ǫ ǫ Ọ ọ Ő ő Ø ø Œ œ   Ɔ ɔ   P p   Q q   R r Ŕ ŕ Ř ř Ŗ ŗ Ṛ ṛ Ṝ ṝ   S s Ś ś Ŝ ŝ Š š Ş ş Ș ș Ṣ ṣ ß   T t Ť ť Ţ ţ Ț ț Ṭ ṭ Þ þ   U u Ú ú Ù ù Û û Ü ü Ǔ ǔ Ŭ ŭ Ū ū Ũ ũ Ů ů Ų ų Ụ ụ Ű ű Ǘ ǘ Ǜ ǜ Ǚ ǚ Ǖ ǖ   V v   W w Ŵ ŵ   X x   Y y Ý ý Ŷ ŷ Ÿ ÿ Ỹ ỹ Ȳ ȳ   Z z Ź ź Ż ż Ž ž   ß Ð ð Þ þ Ŋ ŋ Ə əGreek:Ά ά Έ έ Ή ή Ί ί Ό ό Ύ ύ Ώ ώ   Α α Β β Γ γ Δ δ   Ε ε Ζ ζ Η η Θ θ   Ι ι Κ κ Λ λ Μ μ   Ν ν Ξ ξ Ο ο Π π   Ρ ρ Σ σ ς Τ τ Υ υ   Φ φ Χ χ Ψ ψ Ω ω   {{Polytonic|}}Cyrillic:А а Б б В в Г г   Ґ ґ Ѓ ѓ Д д Ђ ђ   Е е Ё ё Є є Ж ж   З з Ѕ ѕ И и І і   Ї ї Й й Ј ј К к   Ќ ќ Л л Љ љ М м   Н н Њ њ О о П п   Р р С с Т т Ћ ћ   У у Ў ў Ф ф Х х   Ц ц Ч ч Џ џ Ш ш   Щ щ Ъ ъ Ы ы Ь ь   Э э Ю ю Я я   ́IPA:t̪ d̪ ʈ ɖ ɟ ɡ ɢ ʡ ʔ   ɸ β θ ð ʃ ʒ ɕ ʑ ʂ ʐ ç ʝ ɣ χ ʁ ħ ʕ ʜ ʢ ɦ   ɱ ɳ ɲ ŋ ɴ   ʋ ɹ ɻ ɰ   ʙ ⱱ ʀ ɾ ɽ   ɫ ɬ ɮ ɺ ɭ ʎ ʟ   ɥ ʍ ɧ   ʼ   ɓ ɗ ʄ ɠ ʛ   ʘ ǀ ǃ ǂ ǁ   ɨ ʉ ɯ   ɪ ʏ ʊ   ø ɘ ɵ ɤ   ə ɚ   ɛ œ ɜ ɝ ɞ ʌ ɔ   æ   ɐ ɶ ɑ ɒ   ʰ ʱ ʷ ʲ ˠ ˤ ⁿ ˡ   ˈ ˌ ː ˑ ̪   {{IPA|}}Wikidata entities used in this pageCAP theorem: Sitelink, Title, Description: enPages transcluded onto the current version of this page(help):CAP theorem(edit)Template:Cite book(view source) (protected)Template:Cite conference(view source) (protected)Template:Cite journal(view source) (protected)Template:Cite report(view source) (template editor protected)Template:Cite web(view source) (protected)Template:Databases(edit)Template:Hlist/styles.css(view source) (protected)Template:Icon(view source) (template editor protected)Template:Main other(view source) (protected)Template:Navbox(view source) (template editor protected)Template:Nbsp(view source) (protected)Template:Pagetype(view source) (protected)Template:Reflist(view source) (protected)Template:Reflist/styles.css(view source) (protected)Template:SDcat(view source) (protected)Template:Short description(view source) (protected)Template:Short description/lowercasecheck(view source) (protected)Template:Spaces(view source) (protected)Module:Arguments(view source) (protected)Module:Check for unknown parameters(view source) (protected)Module:Citation/CS1(view source) (protected)Module:Citation/CS1/COinS(view source) (protected)Module:Citation/CS1/Configuration(view source) (protected)Module:Citation/CS1/Date validation(view source) (protected)Module:Citation/CS1/Identifiers(view source) (protected)Module:Citation/CS1/Utilities(view source) (protected)Module:Citation/CS1/Whitelist(view source) (protected)Module:Citation/CS1/styles.css(view source) (protected)Module:Disambiguation/templates(view source) (protected)Module:Icon(view source) (template editor protected)Module:Icon/data(view source) (template editor protected)Module:Navbar(view source) (protected)Module:Navbar/configuration(view source) (protected)Module:Navbar/styles.css(view source) (protected)Module:Navbox(view source) (template editor protected)Module:Navbox/configuration(view source) (template editor protected)Module:Navbox/styles.css(view source) (template editor protected)Module:Pagetype(view source) (protected)Module:Pagetype/config(view source) (protected)Module:Pagetype/disambiguation(view source) (protected)Module:Pagetype/rfd(view source) (protected)Module:Pagetype/setindex(view source) (protected)Module:Pagetype/softredirect(view source) (protected)Module:SDcat(view source) (protected)Module:String(view source) (protected)Module:TableTools(view source) (protected)Module:Wikitext Parsing(view source) (protected)Module:Yesno(view source) (protected)This page is a member of 2 hidden categories(help):Category:Articles with short descriptionCategory:Short description matches WikidataRetrieved from "https://en.wikipedia.org/wiki/CAP_theorem"Privacy policyAbout WikipediaDisclaimersContact WikipediaCode of ConductDevelopersStatisticsCookie statementMobile view