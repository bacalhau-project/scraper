URL: https://docs.bacalhau.org/v/v.1.3.2-1?fallback=true

Bacalhau Docsv.1.3.2v.1.3.0v.1.3.1v.1.3.2v.1.4.0GithubSlackBlogEnterpriseMoreGithubSlackBlogEnterpriseAsk or SearchCtrl+‚ÄÜKWelcome to Bacalhau DocsGetting StartedHow Bacalhau WorksInstallationCreate Private NetworkDocker Workload OnboardingWebAssembly (WASM) WorkloadsHardware SetupSetting UpRunning NodesJob selection policyAccess ManagementConfiguration ManagementConfiguring Transport Level SecurityGPU InstallationObservabilityNode persistenceNode OnboardingLimits and TimeoutsConnect StorageTest Network LocallyBacalhau WebUIWorkload OnboardingContainerDocker Workload OnboardingWebAssembly (WASM) WorkloadsBacalhau Docker ImageHow To Work With Custom Containers in BacalhauPythonBuilding and Running Custom Python ContainerRunning Pandas on BacalhauRunning a Python ScriptRunning Jupyter Notebooks on BacalhauScripting Bacalhau with PythonR (language)Building and Running your Custom R Containers on BacalhauRunning a Simple R Script on BacalhauRun CUDA programs on BacalhauRunning a Prolog ScriptReading Data from Multiple S3 Buckets using BacalhauRunning Rust programs as WebAssembly (WASM)Generate Synthetic Data using Sparkov Data Generation techniqueData IngestionCopy Data from URL to Public StoragePinning DataRunning a Job over S3 dataJobsJob selection policyJob TemplatesJob TypesConstraint SpecificationInputSource SpecificationJob SpecificationLabels SpecificationMeta SpecificationNetwork SpecificationResources SpecificationResultPath SpecificationSpecConfig SpecificationStateTask SpecificationTimeouts SpecificationNetworking InstructionsAccessing the Internet from JobsGPU Workloads SetupAutomatic Update CheckingExamplesData EngineeringUsing Bacalhau with DuckDBEthereum Blockchain Analysis with Ethereum-ETL and BacalhauConvert CSV To Parquet Or AvroSimple Image ProcessingOceanography - Data ConversionVideo ProcessingModel InferenceEasyOCR (Optical Character Recognition) on BacalhauRunning Inference on Dolly 2.0 Model with Hugging FaceSpeech Recognition using WhisperStable Diffusion on a GPUStable Diffusion on a CPUObject Detection with YOLOv5 on BacalhauGenerate Realistic Images using StyleGAN3 and BacalhauStable Diffusion Checkpoint InferenceRunning Inference on a Model stored on S3Model TrainingTraining Pytorch Model with BacalhauTraining Tensorflow ModelStable Diffusion Dreambooth (Finetuning)Molecular DynamicsRunning BIDS Apps on BacalhauCoresets On BacalhauGenomics Data GenerationGromacs for AnalysisMolecular Simulation with OpenMM and BacalhauReferencesAuthentication & authorizationDatabase IntegrationNode ManagementOpen Telemetry in BacalhauRunning locally with 'devstack'Setting up Dev EnvironmentOther SpecificationsEnginesDocker Engine SpecificationWebAssembly (WASM) Engine SpecificationPublishersIPFS Publisher SpecificationLocal Publisher SpecificationS3 Publisher SpecificationSourcesIPFS Source SpecificationLocal Source SpecificationS3 Source SpecificationURL Source SpecificationAPIAgent APIBacalhau APIJobs APINodes APICLISingle CLI commandsAgentAgent OverviewAgent AliveAgent NodeAgent VersionConfigConfig OverviewConfig Auto-ResourcesConfig DefaultConfig ListConfig SetJobJob OverviewJob DescribeJob ExecJob ExecutionsJob HistoryJob ListJob LogsJob RunJob StopNodeNode OverviewNode ApproveNode DeleteNode ListNode DescribeNode RejectCLI Commands OverviewDebuggingDebugging Failed JobsDebugging LocallyHelp & FAQBacalhau FAQsIntegrationsApache Airflow Provider for BacalhauLilypadBacalhau Python SDKObservability for WebAssembly Workloads in BacalhauCommunityCompute Over Data - Landscape AnalysisSocial MediaStyle GuideWays to ContributePowered by GitBookUse CasesDistributed ETLEdge MLDistributed Data WarehousingFleet ManagementAbout UsWho we areWhat we valueNews & BlogBlogGet SupportRequest Enterprise SolutionsExpanso (2024). All Rights Reserved.Welcome to Bacalhau DocsThis is an older version of Bacalhau. For the latest version, go tothis link.What is Bacalhau?Bacalhau is a platform for fast, cost efficient, and secure computation by running jobs where the data is generated and stored. With Bacalhau, you can streamline your existing workflows without the need of extensive rewriting by running arbitrary Docker containers and WebAssembly (wasm) images as tasks. This architecture is also referred to asCompute Over Data(or CoD).Bacalhauwas coined from the Portuguese word for salted Cod fish.Bacalhau seeks to transform data processing for large-scale datasets to improve cost and efficiency, and to open up data processing to larger audiences. Our goals is to create an open, collaborative compute ecosystem that enables unparalleled collaboration. We (Expanso.io) offer a demo network so you can try out jobs without even installing. Give it a shot!Why Bacalhau?‚ö°Ô∏è Bacalhau simplifies the process of managing compute jobs by providing aunified platformfor managing jobs across different regions, clouds, and edge devices.ü§ù Bacalhau providesreliable and network-partitionresistant orchestration, ensuring that your jobs will complete even if there are network disruptions.üö® Bacalhau provides acomplete and permanent audit logof exactly what happened, so you can be confident that your jobs are being executed securely.üîê You can runprivate workloadstoreduce the chance of leaking private informationor inadvertently sharing your data outside of your organization.üí∏ Bacalhaureduces ingress/egress costssince jobs are processed closer to the source.ü§ì You canmount your data anywhereon your machine, and Bacalhau will be able to run against that data.üí• You can integrate with services running on nodes to run a jobs, such as onDuckDB.üìö Bacalhau operates at scale over parallel jobs. You can batch process petabytes (quadrillion bytes) of data.How it worksBacalhau concists of a peer-to-peer network of nodes that enables decentralized communication between computers. The network consists of two types of nodes:Requester Node:responsible for handling user requests, discovering and ranking compute nodes, forwarding jobs to compute nodes, and monitoring the job lifecycle.Compute Node:responsible for executing jobs and producing results. Different compute nodes can be used for different types of jobs, depending on their capabilities and resources.For a more detailed tutorial, check out ourGetting Started Tutorial.The goal of the Bacalhau project is to make it easy to perform distributed computation next to where the data resides. In order to do this, first you need to ingest some data.Data ingestionData is identified by its content identifier (CID) and can be accessed by anyone who knows the CID. Here are some options that can help you mount your data:Copy data from a URL to public storagePin Data to public storageCopy Data from S3 Bucket to public storageThe options are not limited to the above mentioned. You can mount your data anywhere on your machine, and Bacalhau will be able to run against that dataSecurity in BacalhauAll workloads run under restricted Docker or WASM permissions on the node. Additionally, you can use existing (locked down) binaries that are pre-installed through Pluggable Executors.Best practices in12-factor appsis to use environment variables to store sensitive data such as access tokens, API keys, or passwords. These variables can be accessed by Bacalhau at runtime and are not visible to anyone who has access to the code or the server.Alternatively, you can pre-provision credentials to the nodes and access those on a node by node basis.Finally, endpoints (such as vaults) can also be used to provide secure access to Bacalhau. This way, the client can authenticate with Bacalhau using the token without exposing their credentials.Workloads Bacalhau is best suited forBacalhau can be used for a variety of data processing workloads, including machine learning, data analytics, and scientific computing. It is well-suited for workloads that require processing large amounts of data in a distributed and parallelized manner.Use CasesOnce you have more than 10 devices generating or storing around 100GB of data, you're likely to face challenges with processing that data efficiently. Traditional computing approaches may struggle to handle such large volumes, and that's where distributed computing solutions like Bacalhau can be extremely useful. Bacalhau can be used in various industries, including security, web serving, financial services, IoT, Edge, Fog, and multi-cloud. Bacalhau shines when it comes to data-intensive applications likedata engineering,model training,model inference,molecular dynamics, etc.Here are some example tutorials on how you can process your data with Bacalhau:Stable Diffusion AIGenerate Realistic Images using StyleGAN3 and BacalhauObject Detection with YOLOv5 on BacalhauRunning Genomics on BacalhauTraining Pytorch Model with BacalhauFor more tutorials, visit ourexample pageCommunityBacalhau has a very friendly community and we are always happy to help you get started:GitHub Discussions‚Äì ask anything about the project, give feedback or answer questions that will help other users.Join the Slack Communityand go to#bacalhauchannel ‚Äì it is the easiest way engage with other members in the community and get help.Contributing‚Äì learn how to contribute to the Bacalhau project.Next Stepsüëâ Continue with BacalhauGetting Started guideto learn how to install and run a job with the Bacalhau client.üëâ Or jump directly to try out the differentExamplesthat showcases Bacalhau abilities.NextHow Bacalhau WorksLast updated2 months agoOn this pageWhat is Bacalhau?Why Bacalhau?How it worksCommunityNext StepsWas this helpful?Edit on GitHubExport as PDF