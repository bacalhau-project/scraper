URL: https://zookeeper.apache.org/doc/r3.9.2/zookeeperJMX.html

Apache>ZooKeeperProjectWikiZooKeeper 3.9 DocumentationOverviewWelcomeOverviewGetting StartedRelease NotesDeveloperAPI DocsProgrammer's GuideUse CasesJava ExampleBarrier and Queue TutorialRecipesAdmin & OpsAdministrator's GuideQuota GuideSnapshot and Restore GuideJMXHierarchical QuorumsOracle QuorumObservers GuideDynamic ReconfigurationZooKeeper CLIZooKeeper ToolsZooKeeper MonitorAudit LogsContributorZooKeeper InternalsMiscellaneousWikiFAQMailing ListsZooKeeper JMXJMXStarting ZooKeeper with JMX enabledRun a JMX consoleZooKeeper MBean ReferenceJMXApache ZooKeeper has extensive support for JMX, allowing you to view and manage a ZooKeeper serving ensemble.This document assumes that you have basic knowledge of JMX. SeeSun JMX Technologypage to get started with JMX.See theJMX Management Guidefor details on setting up local and remote management of VM instances. By default the includedzkServer.shsupports only local management - review the linked document to enable support for remote management (beyond the scope of this document).Starting ZooKeeper with JMX enabledThe classorg.apache.zookeeper.server.quorum.QuorumPeerMainwill start a JMX manageable ZooKeeper server. This class registers the proper MBeans during initialization to support JMX monitoring and management of the instance. Seebin/zkServer.shfor one example of starting ZooKeeper using QuorumPeerMain.Run a JMX consoleThere are a number of JMX consoles available which can connect to the running server. For this example we will use Sun'sjconsole.The Java JDK ships with a simple JMX console namedjconsolewhich can be used to connect to ZooKeeper and inspect a running server. Once you've started ZooKeeper using QuorumPeerMain startjconsole, which typically resides inJDK_HOME/bin/jconsoleWhen the "new connection" window is displayed either connect to local process (if jconsole started on the same host as Server) or use the remote process connection.By default the "overview" tab for the VM is displayed (this is a great way to get insight into the VM btw). Select the "MBeans" tab.You should now seeorg.apache.ZooKeeperServiceon the left hand side. Expand this item and depending on how you've started the server you will be able to monitor and manage various service related features.Logback MBeans registration(new in 3.8.0)Logback is the default logging backend of ZooKeeper since version 3.8.0. It can be configured to register JMX MBeans by adding<jmxConfigurator />tologback.xml. More information can be found on Logback'swebsite.Log4j MBeans(deprecated)Also note that ZooKeeper will register log4j MBeans as well if log4j1 is configured as the logging backend of SLF4j. In the same section along the left hand side you will see "log4j". Expand that to manage log4j through JMX. Of particular interest is the ability to dynamically change the logging levels used by editing the appender and root thresholds. Log4j MBean registration can be disabled by passing-Dzookeeper.jmx.log4j.disable=trueto the JVM when starting ZooKeeper. In addition, we can specify the name of the MBean with the-Dzookeeper.jmx.log4j.mbean=log4j:hierarchy=defaultoption, in case we need to upgrade an integrated system using the old MBean name (log4j:hierarchy = default).ZooKeeper MBean ReferenceThis table details JMX for a server participating in a replicated ZooKeeper ensemble (ie not standalone). This is the typical case for a production environment.MBeans, their names and descriptionMBeanMBean Object NameDescriptionQuorumReplicatedServer_id<#>Represents the Quorum, or Ensemble - parent of all cluster members. Note that the object name includes the "myid" of the server (name suffix) that your JMX agent has connected to.LocalPeer/RemotePeerreplica.<#>Represents a local or remote peer (ie server participating in the ensemble). Note that the object name includes the "myid" of the server (name suffix).LeaderElectionLeaderElectionRepresents a ZooKeeper cluster leader election which is in progress. Provides information about the election, such as when it started.LeaderLeaderIndicates that the parent replica is the leader and provides attributes/operations for that server. Note that Leader is a subclass of ZooKeeperServer, so it provides all of the information normally associated with a ZooKeeperServer node.FollowerFollowerIndicates that the parent replica is a follower and provides attributes/operations for that server. Note that Follower is a subclass of ZooKeeperServer, so it provides all of the information normally associated with a ZooKeeperServer node.DataTreeInMemoryDataTreeStatistics on the in memory znode database, also operations to access finer (and more computationally intensive) statistics on the data (such as ephemeral count). InMemoryDataTrees are children of ZooKeeperServer nodes.ServerCnxn<session_id>Statistics on each client connection, also operations on those connections (such as termination). Note the object name is the session id of the connection in hex form.This table details JMX for a standalone server. Typically standalone is only used in development situations.MBeans, their names and descriptionMBeanMBean Object NameDescriptionZooKeeperServerStandaloneServer_port<#>Statistics on the running server, also operations to reset these attributes. Note that the object name includes the client port of the server (name suffix).DataTreeInMemoryDataTreeStatistics on the in memory znode database, also operations to access finer (and more computationally intensive) statistics on the data (such as ephemeral count).ServerCnxn< session_id >Statistics on each client connection, also operations on those connections (such as termination). Note the object name is the session id of the connection in hex form.Copyright Â©The Apache Software Foundation.