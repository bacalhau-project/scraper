URL: https://en.wikipedia.org/wiki/Clock_synchronization

Jump to contentMain menuMain menumove to sidebarhideNavigationMain pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonateContributeHelpLearn to editCommunity portalRecent changesUpload fileSearchSearchAppearanceCreate accountLog inPersonal toolsCreate accountLog inPages for logged out editorslearn moreContributionsTalkContentsmove to sidebarhide(Top)1Terminology2Problems3SolutionsToggle Solutions subsection3.1Berkeley algorithm3.2Clock-sampling mutual network synchronization3.3Cristian's algorithm3.4Satellite navigation systems3.5Inter-range Instrumentation Group time codes3.6Network Time Protocol3.7Precision Time Protocol3.8Reference broadcast synchronization3.9Reference Broadcast Infrastructure Synchronization3.10Synchronous Ethernet3.11Wireless ad hoc networks3.12Huygens4See also5References6Further readingToggle the table of contentsClock synchronization6 languagesفارسیFrançais日本語PolskiSicilianu中文Edit linksArticleTalkEnglishReadEditView historyToolsToolsmove to sidebarhideActionsReadEditView historyGeneralWhat links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageGet shortened URLDownload QR codeWikidata itemPrint/exportDownload as PDFPrintable versionAppearancemove to sidebarhideFrom Wikipedia, the free encyclopediaCoordination of otherwise independent clocksFor broader coverage of this topic, seeClock network.Clock synchronizationis a topic incomputer scienceandengineeringthat aims to coordinate otherwise independentclocks. Even when initially set accurately, real clocks will differ after some amount of time due toclock drift, caused by clocks counting time at slightly different rates. There are several problems that occur as a result of clock rate differences and several solutions, some being more acceptable than others in certain contexts.[1]Terminology[edit]Inserial communication, clock synchronization can refer toclock recoverywhich achieves frequency synchronization, as opposed to fullphase synchronization. Such clock synchronization is used insynchronization in telecommunicationsandautomatic baud rate detection.[2]Plesiochronousorisochronousoperation refers to a system with frequency synchronization and loose constraints on phase synchronization.Synchronousoperation implies a tighter synchronization based on time perhaps in addition to frequency.Problems[edit]As a result of the difficulties managing time at smaller scales, there are problems associated withclock skewthat take on more complexity indistributed computingin which several computers will need to realize the same global time. For instance, inUnixsystems themakecommand is used tocompilenew or modified code and seeks to avoid recompiling unchanged code. Themakecommand uses the clock of the machine it runs on to determine which source files need to be recompiled. If the sources reside on a separatefile serverand the two machines have unsynchronized clocks, themakeprogram might not produce the correct results.[3]Synchronization is required for accurate reproduction ofstreaming media. Clock synchronization is a significant component ofaudio over Ethernetsystems.Solutions[edit]In a system with a central server, the synchronization solution is trivial; the server will dictate the system time.Cristian's algorithmand theBerkeley algorithmare potential solutions to the clock synchronization problem in this environment.In distributed computing, the problem takes on more complexity because a global time is not easily known. The most used clock synchronization solution on the Internet is theNetwork Time Protocol(NTP) which is a layered client-server architecture based onUser Datagram Protocol(UDP) message passing.Lamport timestampsandvector clocksare concepts of thelogical clockin distributed computing.In awireless network, the problem becomes even more challenging due to the possibility of collision of the synchronizationpacketson the wireless medium and the higher drift rate of clocks on low-cost wireless devices.[4][5]Berkeley algorithm[edit]Main article:Berkeley algorithmThe Berkeley algorithm is suitable for systems where aradio clockis not present. This system has no way of making sure of the actual time other than by maintaining a global average time as the global time. Atime serverwill periodically fetch the time from all the time clients, average the results, and then report back to the clients the adjustment that needs be made to their local clocks to achieve the average.  This algorithm highlights the fact that internal clocks may vary not only in the time they contain but also in theclock rate.Clock-sampling mutual network synchronization[edit]Clock-sampling mutual network synchronization (CS-MNS) is suitable for distributed and mobile applications. It has been shown to be scalable over mesh networks that include indirectly-linked non-adjacent nodes, and is compatible withIEEE 802.11and similar standards. It can be accurate to the order of few microseconds, but requires direct physical wireless connectivity with negligible link delay (less than 1 microsecond) on links between adjacent nodes, limiting the distance between neighboring nodes to a few hundred meters.[6]Cristian's algorithm[edit]Main article:Cristian's algorithmCristian's algorithm relies on the existence of a time server.[7]The time server maintains its clock by using a radio clock or other accurate time source, then all other computers in the system stay synchronized with it.  A time client will maintain its clock by making aprocedure callto the time server.  Variations of this algorithm make more precise time calculations by factoring in networkradio propagationtime.Satellite navigation systems[edit]In addition to its use in navigation, theGlobal Positioning System(GPS) can also be used for clock synchronization. The accuracy of GPS time signals is ±10 nanoseconds.[8]Using GPS (or othersatellite navigationsystems) for synchronization requires a receiver connected to an antenna with unobstructed view of the sky.Inter-range Instrumentation Group time codes[edit]IRIG timecodesare standard formats for transferring timing information. Atomic frequency standards and GPS receivers designed for precision timing are often equipped with an IRIG output. The standards were created by the Telecommunications Working Group of the United States military'sInter-Range Instrumentation Group(IRIG), the standards body of the Range Commanders Council. Work on these standards started in October 1956, and the original standards were accepted in 1960.[9]Network Time Protocol[edit]Network Time Protocol(NTP) is a highly robust protocol, widely deployed throughout the Internet. Well tested over the years, it is generally regarded as the state of the art in distributed time synchronization protocols forunreliable networks. It can reduce synchronization offsets to times of the order of a few milliseconds over the public Internet, and to sub-millisecond levels overlocal area networks.A simplified version of the NTP protocol,Simple Network Time Protocol(SNTP), can also be used as a pure single-shot statelessprimary/secondarysynchronization protocol, but lacks the sophisticated features of NTP, and thus has much lower performance and reliability levels.Precision Time Protocol[edit]Precision Time Protocol(PTP) is a master/slave protocol for delivery of highly accurate time over local area networks.Reference broadcast synchronization[edit]TheReference Broadcast Time Synchronization(RBS) algorithm is often used in wireless networks and sensor networks. In this scheme, an initiator broadcasts a reference message to urge the receivers to adjust their clocks.Reference Broadcast Infrastructure Synchronization[edit]TheReference Broadcast Infrastructure Synchronization(RBIS)[10]protocol is a master/slave synchronization protocol, like RBS, based on a receiver/receiver synchronization paradigm. It is specifically tailored to be used in IEEE 802.11 wireless networks configured in infrastructure mode (i.e., coordinated by an access point). The protocol does not require any modification to the access point.Synchronous Ethernet[edit]Synchronous Ethernetuses Ethernet in asynchronous mannersuch that when combined with synchronization protocols such as PTP in the case of theWhite Rabbit Project, sub-nanosecond synchronization accuracy is achieved.Wireless ad hoc networks[edit]Synchronization is achieved inwireless ad hoc networksthrough sending synchronization messages in amulti-hopmanner and each node progressively synchronizing with the node that is the immediate sender of a synchronization message. Examples include Flooding Time Synchronization Protocol (FTSP),[4]and Harmonia,[5]both able to achieve synchronization with accuracy on the order of microseconds.Huygens[edit]Researchers from Stanford and Google introduced Huygens, a probe-based, end-to-end clock synchronization algorithm. Huygens is implemented in software and thus can be deployed indata centersor inpublic cloudenvironments. By leveraging some key aspects of modern data centers, and applying novel estimation algorithms and signal processing techniques, the Huygens algorithm achieved an accuracy of tens of nanoseconds even at high network load.[11]The findings of this research are being tested in financial market applications.[12]See also[edit]Einstein synchronisationInternational Atomic TimeNetwork Identity and Time ZoneSynchronization (computer science)Time and frequency transferTime signalTime standardReference Broadcast Infrastructure SynchronizationReferences[edit]^Tanenbaum, Andrew S.; van Steen, Maarten (2002),Distributed Systems : Principles and Paradigms,Prentice Hall,ISBN0-13-088893-1^Norman Matloff (September 3, 2001),Transmission on a Serial Line(PDF), retrieved2018-04-17^Marco Platania (2018-06-03)."Clock Synchronization"(PDF). p. 11.^abMaróti, Miklós; Kusy, Branislav; Simon, Gyula; Lédeczi, Ákos (2004). "The flooding time synchronization protocol".Proceedings of the 2nd international conference on Embedded networked sensor systems. SenSys '04. New York, NY, USA: ACM. pp. 39–49.doi:10.1145/1031495.1031501.ISBN1581138792.S2CID9897231.^abKoo, Jinkyu; Panta, Rajesh K.; Bagchi, Saurabh; Montestruque, Luis (2009). "A tale of two synchronizing clocks".Proceedings of the 7th ACM Conference on Embedded Networked Sensor Systems. SenSys '09. New York, NY, USA: ACM. pp. 239–252.doi:10.1145/1644038.1644062.ISBN9781605585192.S2CID8242938.^Rentel, Carlos H.; Kunz, Thomas (March 2005), "A clock-sampling mutual network synchronization algorithm for wireless ad hoc networks",IEEE Wireless Communications and Networking Conference,1, IEEE Press: 638–644,doi:10.1109/WCNC.2005.1424575,S2CID1340072^Cristian, F. (1989), "Probabilistic clock synchronization",Distributed Computing,3(3), Springer: 146–158,doi:10.1007/BF01784024,S2CID3170166^"Common View GPS Time Transfer".National Institute of Standards and Technology. Archived fromthe originalon 2012-10-28.^Josh Matson (May 2013)."Choosing the correct Time Synchronization Protocol and incorporating the 1756-TIME module into your Application"(PDF). Rockwell Automation. Retrieved2019-08-13.^Cena, G.; Scanzio, S.; Valenzano, A.; Zunino, C. (June 2015), "Implementation and Evaluation of the Reference Broadcast Infrastructure Synchronization Protocol",IEEE Transactions on Industrial Informatics,11(3), IEEE Press: 801–811,doi:10.1109/TII.2015.2396003,S2CID17867070^Exploiting a Natural Network Effect for Scalable, Fine-grained Clock Synchronization. 2018. pp. 81–94.ISBN9781939133014.^John Markoff (June 29, 2018)."Time Split to the Nanosecond Is Precisely What Wall Street Wants".New York Times.Further reading[edit]Govindan Kannan, Pravein.; Joshi, Raj.; Chan, Mun Choon. (Apr 2019), "Precise Time-synchronization in the Data-Plane using Programmable Switching ASICs",Proceedings of the 2019 ACM Symposium on SDN Research, ACM, pp. 8–20,doi:10.1145/3314148.3314353,ISBN9781450367103,S2CID85518997Exploiting a Natural Network Effect for Scalable, Fine-grained Clock Synchronization,ISBN9781939133014, retrieved2021-10-19Retrieved from "https://en.wikipedia.org/w/index.php?title=Clock_synchronization&oldid=1241417293"Categories:SynchronizationClocksDistributed computing problemsHidden categories:Articles with short descriptionShort description matches WikidataThis page was last edited on 21 August 2024, at 01:37(UTC).Text is available under theCreative Commons Attribution-ShareAlike License 4.0;
additional terms may apply. By using this site, you agree to theTerms of UseandPrivacy Policy. Wikipedia® is a registered trademark of theWikimedia Foundation, Inc., a non-profit organization.Privacy policyAbout WikipediaDisclaimersContact WikipediaCode of ConductDevelopersStatisticsCookie statementMobile view