URL: https://etcd.io/docs/v3.6/upgrades/upgrade_3_4/

etcdDocsBlogCommunityInstallPlayVersionsv3.6v3.5v3.4v3.3v3.2v3.1v2.3Versionsv3.6-DRAFTQuickstartDemoTutorialsHow to Set Up a Demo etcd ClusterReading from etcdWriting to etcdHow to get keys by prefixHow to delete keysHow to make multiple writes in a transactionHow to watch keysHow to create leaseHow to create locksHow to conduct leader election in etcd clusterHow to check Cluster statusHow to save the databaseHow to migrate etcd from v2 to v3How to Add and Remove MembersInstallFAQLibraries and toolsMetricsReporting bugsTuningDiscovery service protocolLogging conventionsGolang modulesLearningData modeletcd client designetcd learner designetcd v3 authentication designetcd APIetcd persistent storage filesetcd API guaranteesetcd versus other key-value storesGlossaryDeveloper guideDiscovery service protocolSet up a local clusterInteracting with etcdWhy gRPC gatewaygRPC naming and discoverySystem limitsetcd featuresAPI referenceAPI reference: concurrencyOperations guideAuthentication GuidesRole-based access controlAuthenticationConfiguration optionsTransport security modelClustering GuideRun etcd clusters as a Kubernetes StatefulSetRun etcd clusters inside containersFailure modesDisaster recoveryetcd gatewaygRPC proxyHardware recommendationsMaintenanceMonitoring etcdPerformanceDesign of runtime reconfigurationRuntime reconfigurationSupported platformsVersioningData CorruptionBenchmarksStorage Memory Usage BenchmarkWatch Memory Usage BenchmarkBenchmarking etcd v3Benchmarking etcd v2.2.0-rc-memoryBenchmarking etcd v2.2.0-rcBenchmarking etcd v2.2.0Benchmarking etcd v2.1.0UpgradingUpgrading etcd clusters and applicationsUpgrade etcd from 3.4 to 3.5Upgrade etcd from 3.3 to 3.4Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.0 to 3.1Upgrade etcd from 2.3 to 3.0TriageIssue triage guidelinesPR managementv3.5QuickstartDemoTutorialsHow to Set Up a Demo etcd ClusterReading from etcdWriting to etcdHow to get keys by prefixHow to delete keysHow to make multiple writes in a transactionHow to watch keysHow to create leaseHow to create locksHow to conduct leader election in etcd clusterHow to check Cluster statusHow to save the databaseHow to migrate etcd from v2 to v3How to Add and Remove MembersInstallFAQLibraries and toolsMetricsReporting bugsTuningDiscovery service protocolLogging conventionsGolang modulesLearningData modeletcd client designetcd learner designetcd v3 authentication designetcd APIetcd persistent storage filesetcd API guaranteesetcd versus other key-value storesGlossaryDeveloper guideDiscovery service protocolSet up a local clusterInteracting with etcdWhy gRPC gatewaygRPC naming and discoverySystem limitsetcd featuresAPI referenceAPI reference: concurrencyOperations guideAuthentication GuidesRole-based access controlAuthenticationConfiguration optionsTransport security modelClustering GuideRun etcd clusters as a Kubernetes StatefulSetRun etcd clusters inside containersFailure modesDisaster recoveryetcd gatewaygRPC proxyHardware recommendationsMaintenanceMonitoring etcdPerformanceDesign of runtime reconfigurationRuntime reconfigurationSupported platformsVersioningData CorruptionBenchmarksStorage Memory Usage BenchmarkWatch Memory Usage BenchmarkBenchmarking etcd v3Benchmarking etcd v2.2.0-rc-memoryBenchmarking etcd v2.2.0-rcBenchmarking etcd v2.2.0Benchmarking etcd v2.1.0DowngradingDowngrading etcd clusters and applicationsDowngrade etcd from 3.5 to 3.4UpgradingUpgrading etcd clusters and applicationsUpgrade etcd from 3.4 to 3.5Upgrade etcd from 3.3 to 3.4Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.0 to 3.1Upgrade etcd from 2.3 to 3.0TriageIssue triage guidelinesPR managementv3.4QuickstartOverviewDemoInstallFAQLibraries and toolsMetricsReporting bugsTuningDiscovery service protocolLogging conventionsLearningData modeletcd client designetcd learner designetcd v3 authentication designetcd3 APIetcd API guaranteesetcd versus other key-value storesGlossaryDeveloper guideDiscovery service protocolSet up a local clusterInteracting with etcdWhy gRPC gatewaygRPC naming and discoverySystem limitsetcd featuresAPI referenceAPI reference: concurrencyOperations guideConfiguration optionsRole-based access controlTransport security modelClustering GuideRun etcd clusters inside containersFailure modesDisaster recoveryetcd gatewaygRPC proxyHardware recommendationsMaintenancePerformanceDesign of runtime reconfigurationRuntime reconfigurationSupported platformsMigrate applications from using API v2 to API v3VersioningData CorruptionMonitoring etcdBenchmarksStorage Memory Usage BenchmarkWatch Memory Usage BenchmarkBenchmarking etcd v3Benchmarking etcd v2.2.0-rc-memoryBenchmarking etcd v2.2.0-rcBenchmarking etcd v2.2.0Benchmarking etcd v2.1.0UpgradingUpgrading etcd clusters and applicationsUpgrade etcd from 3.4 to 3.5Upgrade etcd from 3.3 to 3.4Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.0 to 3.1Upgrade etcd from 2.3 to 3.0PlatformsAmazon Web ServicesContainer Linux with systemdFreeBSDTriageIssue Triage Guidelinesv3.3InstallLibraries and toolsMetricsBenchmarksBenchmarking etcd v2.1.0Benchmarking etcd v2.2.0Benchmarking etcd v2.2.0-rcBenchmarking etcd v2.2.0-rc-memoryBenchmarking etcd v3Storage Memory Usage BenchmarkWatch Memory Usage BenchmarkDemoDeveloper guideDiscovery service protocoletcd API Referenceetcd concurrency API ReferenceExperimental APIs and featuresgRPC naming and discoveryInteracting with etcdSet up a local clusterSystem limitsWhy gRPC gatewayDiscovery service protocoletcd v3 APIFrequently Asked Questions (FAQ)Learningetcd client architectureClient feature matrixData modeletcd v3 authentication designetcd versus other key-value storesetcd3 APIGlossaryKV API guaranteesLearnerLogging conventionsOperations guideMonitoring etcdVersioningClustering GuideConfiguration flagsDesign of runtime reconfigurationDisaster recoveryetcd gatewayFailure modesgRPC proxyHardware recommendationsMaintenanceMigrate applications from using API v2 to API v3PerformanceRole-based access controlRun etcd clusters inside containersRuntime reconfigurationSupported systemsTransport security modelPlatformsAmazon Web ServicesContainer Linux with systemdFreeBSDProduction usersReporting bugsTuningUpgradingUpgrade etcd from 2.3 to 3.0Upgrade etcd from 3.0 to 3.1Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.3 to 3.4Upgrade etcd from 3.4 to 3.5Upgrading etcd clusters and applicationsv3.2BenchmarksBenchmarking etcd v2.1.0Benchmarking etcd v2.2.0Benchmarking etcd v2.2.0-rcBenchmarking etcd v2.2.0-rc-memoryBenchmarking etcd v3-demoStorage Memory Usage BenchmarkWatch Memory Usage BenchmarkData modelDemoDeveloper guideDiscovery service protocoletcd API referenceetcd concurrency API ReferenceExperimental APIs and featuresgRPC gatewaygRPC naming and discoveryInteracting with etcdSet up a local clusterSystem limitsetcd dev internalDiscovery service protocolLogging conventionsetcd operations guideAuthentication GuideClustering GuideConfiguration flagsDesign of runtime reconfigurationDisaster recoveryetcd gatewaygRPC proxyHardware recommendationsMaintenanceMigrate applications from using API v2 to API v3Monitoring etcdPerformanceRun etcd clusters inside containersRuntime reconfigurationSecurity modelSupported platformsUnderstand failuresVersioningetcd upgradesUpgrade etcd from 2.3 to 3.0Upgrade etcd from 3.0 to 3.1Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.3 to 3.4Upgrading etcd clusters and applicationsetcd v3 authentication designetcd versus other key-value storesetcd3 APIFrequently Asked Questions (FAQ)GlossaryInstallKV API guaranteesLibraries and toolsMetricsPlatformsAmazon Web ServicesFreeBSDRun etcd on Container Linux with systemdProduction usersReporting bugsRFCetcd v3 APITuningv3.1Data modelDemoetcd benchmarksetcd v2.1.0-alpha benchmarksetcd v2.2.0 benchmarksetcd v2.2.0-rc benchmarksetcd v2.2.0-rc-memory benchmarksetcd v3-demo benchmarksStorage Memory Usage BenchmarkWatch Memory Usage Benchmarketcd developer guideDiscovery service protocoletcd API ReferenceExperimental APIs and featuresgRPC GatewaygRPC naming and discoveryInteracting with etcdSetup a local clusterSystem limitsetcd internal devDiscovery service protocolLogging conventionsetcd operations guideClustering GuideConfiguration flagsDesign of runtime reconfigurationDisaster recoveryetcd gatewaygRPC proxyHardware recommendationsMaintenanceMigrate applications from using API v2 to API v3Monitoring etcdPerformanceRun etcd clusters inside containersRuntime reconfigurationSecurity modelSupported platformsUnderstand failuresVersioningetcd3 APIFrequently Asked Questions (FAQ)GlossaryInstallKV API guaranteesLibraries and toolsMetricsPlatformsFreeBSDProduction usersReporting bugsRFCetcd v3 APITuningUpgrading etcd clusters and applicationsUpgrade etcd from 2.3 to 3.0Upgrade etcd from 3.0 to 3.1Upgrade etcd from 3.1 to 3.2Upgrade etcd from 3.2 to 3.3Upgrade etcd from 3.3 to 3.4Why etcdv2.3AdministrationAuthentication GuideBackward CompatibilityBenchmarksBenchmarking etcd v2.2.0etcd 2.1.0-alpha benchmarksetcd 2.2.0-rc benchmarksetcd 2.2.0-rc memory benchmarksetcd 3 demo benchmarksStorage Memory Usage BenchmarkWatch Memory Usage BenchmarkClustering GuideConfiguration FlagsDesign of Runtime ReconfigurationDevelopmentDiscovery Service ProtocolError Codeetcd APIetcd v3 APIFAQGlossaryLibraries and ToolsMembers APIMetricsMiscellaneous APIsPlatformsFreeBSProduction UsersProxyReporting BugsRunning etcd under DockerRuntime ReconfigurationSecurity ModelSnapshot MigrationTuningUpgrade etcd from 2.1 to 2.2Upgrade etcd from 2.1 to 2.2Upgrade etcd from 2.2 to 2.3v2 Auth and SecurityVersioningView page sourceEdit this pageCreate child pageCreate documentation issueCreate project issueUpgrade checklistsServer upgrade checklistsUpgrade procedureVersionsv3.6-DRAFTUpgradingUpgrade etcd from 3.3 to 3.4Upgrade etcd from 3.3 to 3.4Processes, checklists, and notes on upgrading etcd from 3.3 to 3.4In the general case, upgrading from etcd 3.3 to 3.4 can be a zero-downtime, rolling upgrade:one by one, stop the etcd v3.3 processes and replace them with etcd v3.4 processesafter running all v3.4 processes, new features in v3.4 are available to the clusterBeforestarting an upgrade, read through the rest of this guide to prepare.Upgrade checklistsNOTE:Whenmigrating from v2 with no v3 data, etcd server v3.2+ panics when etcd restores from existing snapshots but no v3ETCD_DATA_DIR/member/snap/dbfile. This happens when the server had migrated from v2 with no previous v3 data. This also prevents accidental v3 data loss (e.g.dbfile might have been moved). etcd requires that post v3 migration can only happen with v3 data. Do not upgrade to newer v3 versions until v3.0 server contains v3 data.Highlighted breaking changes in 3.4.MakeETCDCTL_API=3 etcdctldefaultETCDCTL_API=3is now the default.etcdctl set foo barError: unknown command "set" for "etcdctl"-etcdctl set foo bar+ETCDCTL_API=2 etcdctl set foo barbarETCDCTL_API=3 etcdctl put foo barOK-ETCDCTL_API=3 etcdctl put foo bar+etcdctl put foo barMakeetcd --enable-v2=falsedefaultetcd --enable-v2=falseis now the default.This means, unlessetcd --enable-v2=trueis specified, etcd v3.4 server would not serve v2 API requests.If v2 API were used, make sure to enable v2 API in v3.4:-etcd+etcd --enable-v2=trueOther HTTP APIs will still work (e.g.[CLIENT-URL]/metrics,[CLIENT-URL]/health, v3 gRPC gateway).Deprecatedetcd --ca-fileandetcd --peer-ca-fileflags--ca-fileand--peer-ca-fileflags are deprecated; they have been deprecated since v2.1.Note setting this parameter will also automatically enable client cert authentication no matter what value is set for--client-cert-auth.-etcd --ca-file ca-client.crt+etcd --trusted-ca-file ca-client.crt-etcd --peer-ca-file ca-peer.crt+etcd --peer-trusted-ca-file ca-peer.crtDeprecatedgrpc.ErrClientConnClosingerrorgrpc.ErrClientConnClosinghas beendeprecated in gRPC >= 1.10.import (+	"go.etcd.io/etcd/clientv3""google.golang.org/grpc"+	"google.golang.org/grpc/codes"+	"google.golang.org/grpc/status")_, err := kvc.Get(ctx, "a")-if err == grpc.ErrClientConnClosing {+if clientv3.IsConnCanceled(err) {// or+s, ok := status.FromError(err)+if ok {+  if s.Code() == codes.CanceledRequiregrpc.WithBlockfor client dialThe new client balanceruses an asynchronous resolver to pass endpoints to the gRPC dial function. As a result, v3.4 client requiresgrpc.WithBlockdial option to wait until the underlying connection is up.import ("time""go.etcd.io/etcd/clientv3"+	"google.golang.org/grpc")+// "grpc.WithBlock()" to block until the underlying connection is upccfg := clientv3.Config{Endpoints:            []string{"localhost:2379"},DialTimeout:          time.Second,+ DialOptions:          []grpc.DialOption{grpc.WithBlock()},DialKeepAliveTime:    time.Second,DialKeepAliveTimeout: 500 * time.Millisecond,}Deprecatingetcd_debugging_mvcc_db_total_size_in_bytesPrometheus metricsv3.4 promotesetcd_debugging_mvcc_db_total_size_in_bytesPrometheus metrics toetcd_mvcc_db_total_size_in_bytes, in order to encourage etcd storage monitoring.etcd_debugging_mvcc_db_total_size_in_bytesis still served in v3.4 for backward compatibilities. It will be completely deprecated in v3.5.-etcd_debugging_mvcc_db_total_size_in_bytes+etcd_mvcc_db_total_size_in_bytesNote thatetcd_debugging_*namespace metrics have been marked as experimental. As we improve monitoring guide, we may promote more metrics.Deprecatingetcd_debugging_mvcc_put_totalPrometheus metricsv3.4 promotesetcd_debugging_mvcc_put_totalPrometheus metrics toetcd_mvcc_put_total, in order to encourage etcd storage monitoring.etcd_debugging_mvcc_put_totalis still served in v3.4 for backward compatibilities. It will be completely deprecated in v3.5.-etcd_debugging_mvcc_put_total+etcd_mvcc_put_totalNote thatetcd_debugging_*namespace metrics have been marked as experimental. As we improve monitoring guide, we may promote more metrics.Deprecatingetcd_debugging_mvcc_delete_totalPrometheus metricsv3.4 promotesetcd_debugging_mvcc_delete_totalPrometheus metrics toetcd_mvcc_delete_total, in order to encourage etcd storage monitoring.etcd_debugging_mvcc_delete_totalis still served in v3.4 for backward compatibilities. It will be completely deprecated in v3.5.-etcd_debugging_mvcc_delete_total+etcd_mvcc_delete_totalNote thatetcd_debugging_*namespace metrics have been marked as experimental. As we improve monitoring guide, we may promote more metrics.Deprecatingetcd_debugging_mvcc_txn_totalPrometheus metricsv3.4 promotesetcd_debugging_mvcc_txn_totalPrometheus metrics toetcd_mvcc_txn_total, in order to encourage etcd storage monitoring.etcd_debugging_mvcc_txn_totalis still served in v3.4 for backward compatibilities. It will be completely deprecated in v3.5.-etcd_debugging_mvcc_txn_total+etcd_mvcc_txn_totalNote thatetcd_debugging_*namespace metrics have been marked as experimental. As we improve monitoring guide, we may promote more metrics.Deprecatingetcd_debugging_mvcc_range_totalPrometheus metricsv3.4 promotesetcd_debugging_mvcc_range_totalPrometheus metrics toetcd_mvcc_range_total, in order to encourage etcd storage monitoring.etcd_debugging_mvcc_range_totalis still served in v3.4 for backward compatibilities. It will be completely deprecated in v3.5.-etcd_debugging_mvcc_range_total+etcd_mvcc_range_totalNote thatetcd_debugging_*namespace metrics have been marked as experimental. As we improve monitoring guide, we may promote more metrics.Deprecatingetcd --log-outputflag (now--log-outputs)Renameetcd --log-outputto--log-outputsto support multiple log outputs.etcd --logger=capnslogdoes not support multiple log outputs.etcd --log-outputwill be deprecated in v3.5.etcd --logger=capnslogwill be deprecated in v3.5.-etcd --log-output=stderr+etcd --log-outputs=stderr+# to write logs to stderr and a.log file at the same time+# only "--logger=zap" supports multiple writers+etcd --logger=zap --log-outputs=stderr,a.logv3.4 addsetcd --logger=zap --log-outputs=stderrsupport for structured logging and multiple log outputs. Main motivation is to promote automated etcd monitoring, rather than looking back server logs when it starts breaking. Future development will make etcd log as few as possible, and make etcd easier to monitor with metrics and alerts.etcd --logger=capnslogwill be deprecated in v3.5.Changedlog-outputsfield type inetcd --config-fileto[]stringNow thatlog-outputs(old field namelog-output) accepts multiple writers, etcd configuration YAML filelog-outputsfield must be changed to[]stringtype as below:# Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd.-log-output: default+log-outputs: [default]Renamedembed.Config.LogOutputtoembed.Config.LogOutputsRenamedembed.Config.LogOutputtoembed.Config.LogOutputsto support multiple log outputs. And changedembed.Config.LogOutputtype fromstringto[]stringto support multiple log outputs.import "github.com/coreos/etcd/embed"cfg := &embed.Config{Debug: false}-cfg.LogOutput = "stderr"+cfg.LogOutputs = []string{"stderr"}v3.5 deprecatescapnslogv3.5 will deprecateetcd --log-package-levelsflag forcapnslog;etcd --logger=zap --log-outputs=stderrwill the default.v3.5 will deprecate[CLIENT-URL]/config/local/logendpoint.-etcd+etcd --logger zapDeprecatingetcd --debugflag (now--log-level=debug)v3.4 deprecatesetcd --debugflag. Instead, useetcd --log-level=debugflag.-etcd --debug+etcd --logger zap --log-level debugDeprecatedpkg/transport.TLSInfo.CAFilefieldDeprecatedpkg/transport.TLSInfo.CAFilefield.import "github.com/coreos/etcd/pkg/transport"tlsInfo := transport.TLSInfo{CertFile: "/tmp/test-certs/test.pem",KeyFile: "/tmp/test-certs/test-key.pem",-   CAFile: "/tmp/test-certs/trusted-ca.pem",+   TrustedCAFile: "/tmp/test-certs/trusted-ca.pem",}tlsConfig, err := tlsInfo.ClientConfig()if err != nil {panic(err)}Changedembed.Config.SnapCounttoembed.Config.SnapshotCountTo be consistent with the flag nameetcd --snapshot-count,embed.Config.SnapCountfield has been renamed toembed.Config.SnapshotCount:import "github.com/coreos/etcd/embed"cfg := embed.NewConfig()-cfg.SnapCount = 100000+cfg.SnapshotCount = 100000Changedetcdserver.ServerConfig.SnapCounttoetcdserver.ServerConfig.SnapshotCountTo be consistent with the flag nameetcd --snapshot-count,etcdserver.ServerConfig.SnapCountfield has been renamed toetcdserver.ServerConfig.SnapshotCount:import "github.com/coreos/etcd/etcdserver"srvcfg := etcdserver.ServerConfig{-  SnapCount: 100000,+  SnapshotCount: 100000,Changed function signature in packagewalChangedwalfunction signatures to support structured logger.import "github.com/coreos/etcd/wal"+import "go.uber.org/zap"+lg, _ = zap.NewProduction()-wal.Open(dirpath, snap)+wal.Open(lg, dirpath, snap)-wal.OpenForRead(dirpath, snap)+wal.OpenForRead(lg, dirpath, snap)-wal.Repair(dirpath)+wal.Repair(lg, dirpath)-wal.Create(dirpath, metadata)+wal.Create(lg, dirpath, metadata)ChangedIntervalTreetype in packagepkg/adtpkg/adt.IntervalTreeis now defined as aninterface.import ("fmt""go.etcd.io/etcd/pkg/adt")func main() {-    ivt := &adt.IntervalTree{}+    ivt := adt.NewIntervalTree()Deprecatedembed.Config.SetupLoggingembed.Config.SetupLogginghas been removed in order to prevent wrong logging configuration, and now set up automatically.import "github.com/coreos/etcd/embed"cfg := &embed.Config{Debug: false}-cfg.SetupLogging()Changed gRPC gateway HTTP endpoints (replaced/v3betawith/v3)Beforecurl -L http://localhost:2379/v3beta/kv/put\-X POST -d'{"key": "Zm9v", "value": "YmFy"}'Aftercurl -L http://localhost:2379/v3/kv/put\-X POST -d'{"key": "Zm9v", "value": "YmFy"}'Requests to/v3betaendpoints will redirect to/v3, and/v3betawill be removed in 3.5 release.Deprecated container image tagslatestand minor version images tags are deprecated:-docker pull gcr.io/etcd-development/etcd:latest+docker pull gcr.io/etcd-development/etcd:v3.4.0-docker pull gcr.io/etcd-development/etcd:v3.4+docker pull gcr.io/etcd-development/etcd:v3.4.0-docker pull gcr.io/etcd-development/etcd:v3.4+docker pull gcr.io/etcd-development/etcd:v3.4.1-docker pull gcr.io/etcd-development/etcd:v3.4+docker pull gcr.io/etcd-development/etcd:v3.4.2Server upgrade checklistsUpgrade requirementsTo upgrade an existing etcd deployment to 3.4, the running cluster must be 3.3 or greater. If it’s before 3.3, pleaseupgrade to 3.3before upgrading to 3.4.Also, to ensure a smooth rolling upgrade, the running cluster must be healthy. Check the health of the cluster by using theetcdctl endpoint healthcommand before proceeding.PreparationBefore upgrading etcd, always test the services relying on etcd in a staging environment before deploying the upgrade to the production environment.Before beginning,download the snapshot backup. Should something go wrong with the upgrade, it is possible to use this backup todowngradeback to existing etcd version. Please note that thesnapshotcommand only backs up the v3 data. For v2 data, seebacking up v2 datastore.Mixed versionsWhile upgrading, an etcd cluster supports mixed versions of etcd members, and operates with the protocol of the lowest common version. The cluster is only considered upgraded once all of its members are upgraded to version 3.4. Internally, etcd members negotiate with each other to determine the overall cluster version, which controls the reported version and the supported features.LimitationsNote: If the cluster only has v3 data and no v2 data, it is not subject to this limitation.If the cluster is serving a v2 data set larger than 50MB, each newly upgraded member may take up to two minutes to catch up with the existing cluster. Check the size of a recent snapshot to estimate the total data size. In other words, it is safest to wait for 2 minutes between upgrading each member.For a much larger total data size, 100MB or more , this one-time process might take even more time. Administrators of very large etcd clusters of this magnitude can feel free to contact theetcd teambefore upgrading, and we’ll be happy to provide advice on the procedure.DowngradeIf all members have been upgraded to v3.4, the cluster will be upgraded to v3.4, and downgrade from this completed state isnot possible. If any single member is still v3.3, however, the cluster and its operations remains “v3.3”, and it is possible from this mixed cluster state to return to using a v3.3 etcd binary on all members.Pleasedownload the snapshot backupto make downgrading the cluster possible even after it has been completely upgraded.Upgrade procedureThis example shows how to upgrade a 3-member v3.3 etcd cluster running on a local machine.Step 1: check upgrade requirementsIs the cluster healthy and running v3.3.x?etcdctl --endpoints=localhost:2379,localhost:22379,localhost:32379 endpoint health<<COMMENTlocalhost:2379 is healthy: successfully committed proposal: took = 2.118638mslocalhost:22379 is healthy: successfully committed proposal: took = 3.631388mslocalhost:32379 is healthy: successfully committed proposal: took = 2.157051msCOMMENTcurl http://localhost:2379/version<<COMMENT{"etcdserver":"3.3.5","etcdcluster":"3.3.0"}COMMENTcurl http://localhost:22379/version<<COMMENT{"etcdserver":"3.3.5","etcdcluster":"3.3.0"}COMMENTcurl http://localhost:32379/version<<COMMENT{"etcdserver":"3.3.5","etcdcluster":"3.3.0"}COMMENTStep 2: download snapshot backup from leaderDownload the snapshot backupto provide a downgrade path should any problems occur.etcd leader is guaranteed to have the latest application data, thus fetch snapshot from leader:curl -sL http://localhost:2379/metrics|grep etcd_server_is_leader<<COMMENT# HELP etcd_server_is_leader Whether or not this member is a leader. 1 if is, 0 otherwise.# TYPE etcd_server_is_leader gaugeetcd_server_is_leader 1COMMENTcurl -sL http://localhost:22379/metrics|grep etcd_server_is_leader<<COMMENTetcd_server_is_leader 0COMMENTcurl -sL http://localhost:32379/metrics|grep etcd_server_is_leader<<COMMENTetcd_server_is_leader 0COMMENTetcdctl --endpoints=localhost:2379 snapshot save backup.db<<COMMENT{"level":"info","ts":1526585787.148433,"caller":"snapshot/v3_snapshot.go:109","msg":"created temporary db file","path":"backup.db.part"}{"level":"info","ts":1526585787.1485257,"caller":"snapshot/v3_snapshot.go:120","msg":"fetching snapshot","endpoint":"localhost:2379"}{"level":"info","ts":1526585787.1519694,"caller":"snapshot/v3_snapshot.go:133","msg":"fetched snapshot","endpoint":"localhost:2379","took":0.003502721}{"level":"info","ts":1526585787.1520295,"caller":"snapshot/v3_snapshot.go:142","msg":"saved","path":"backup.db"}Snapshot saved at backup.dbCOMMENTStep 3: stop one existing etcd serverWhen each etcd process is stopped, expected errors will be logged by other cluster members. This is normal since a cluster member connection has been (temporarily) broken:10.237579 I|etcdserver: updating the cluster version from 3.0 to 3.310.238315 N|etcdserver/membership: updated the cluster version from 3.0 to 3.310.238451 I|etcdserver/api: enabled capabilitiesforversion 3.3^C21.192174 N|pkg/osutil: received interrupt signal, shutting down...21.192459 I|etcdserver: 7339c4e5e833c029 starts leadership transfer from 7339c4e5e833c029 to 729934363faa4a2421.192569 I|raft: 7339c4e5e833c029[term 8]starts to transfer leadership to 729934363faa4a2421.192619 I|raft: 7339c4e5e833c029 sends MsgTimeoutNow to 729934363faa4a24 immediately as 729934363faa4a24 already has up-to-date logWARNING: 2018/05/17 12:45:21 grpc: addrConn.resetTransport failed to create client transport: connection error:desc="transport: Error while dialing dial tcp: operation was canceled";Reconnecting to{localhost:23790<nil>}WARNING: 2018/05/17 12:45:21 grpc: addrConn.transportMonitor exits due to: grpc: the connection is closing21.193589 I|raft: 7339c4e5e833c029[term: 8]received a MsgVote message with higher term from 729934363faa4a24[term: 9]21.193626 I|raft: 7339c4e5e833c029 became follower at term921.193651 I|raft: 7339c4e5e833c029[logterm: 8, index: 9, vote: 0]cast MsgVotefor729934363faa4a24[logterm: 8, index: 9]at term921.193675 I|raft: raft.node: 7339c4e5e833c029 lost leader 7339c4e5e833c029 at term921.194424 I|raft: raft.node: 7339c4e5e833c029 elected leader 729934363faa4a24 at term921.292898 I|etcdserver: 7339c4e5e833c029 finished leadership transfer from 7339c4e5e833c029 to 729934363faa4a24(took 100.436391ms)21.292975 I|rafthttp: stopping peer 729934363faa4a24...21.293206 I|rafthttp: closed the TCP streaming connection with peer 729934363faa4a24(stream MsgApp v2 writer)21.293225 I|rafthttp: stopped streaming with peer 729934363faa4a24(writer)21.293437 I|rafthttp: closed the TCP streaming connection with peer 729934363faa4a24(stream Message writer)21.293459 I|rafthttp: stopped streaming with peer 729934363faa4a24(writer)21.293514 I|rafthttp: stopped HTTP pipelining with peer 729934363faa4a2421.293590 W|rafthttp: lost the TCP streaming connection with peer 729934363faa4a24(stream MsgApp v2 reader)21.293610 I|rafthttp: stopped streaming with peer 729934363faa4a24(stream MsgApp v2 reader)21.293680 W|rafthttp: lost the TCP streaming connection with peer 729934363faa4a24(stream Message reader)21.293700 I|rafthttp: stopped streaming with peer 729934363faa4a24(stream Message reader)21.293711 I|rafthttp: stopped peer 729934363faa4a2421.293720 I|rafthttp: stopping peer b548c2511513015...21.293987 I|rafthttp: closed the TCP streaming connection with peer b548c2511513015(stream MsgApp v2 writer)21.294063 I|rafthttp: stopped streaming with peer b548c2511513015(writer)21.294467 I|rafthttp: closed the TCP streaming connection with peer b548c2511513015(stream Message writer)21.294561 I|rafthttp: stopped streaming with peer b548c2511513015(writer)21.294742 I|rafthttp: stopped HTTP pipelining with peer b548c251151301521.294867 W|rafthttp: lost the TCP streaming connection with peer b548c2511513015(stream MsgApp v2 reader)21.294892 I|rafthttp: stopped streaming with peer b548c2511513015(stream MsgApp v2 reader)21.294990 W|rafthttp: lost the TCP streaming connection with peer b548c2511513015(stream Message reader)21.295004 E|rafthttp: failed toreadb548c2511513015 on stream Message(context canceled)21.295013 I|rafthttp: peer b548c2511513015 became inactive21.295024 I|rafthttp: stopped streaming with peer b548c2511513015(stream Message reader)21.295035 I|rafthttp: stopped peer b548c2511513015Step 4: restart the etcd server with same configurationRestart the etcd server with same configuration but with the new etcd binary.-etcd-old --name s1 \+etcd-new --name s1 \--data-dir /tmp/etcd/s1 \--listen-client-urls http://localhost:2379 \--advertise-client-urls http://localhost:2379 \--listen-peer-urls http://localhost:2380 \--initial-advertise-peer-urls http://localhost:2380 \--initial-cluster s1=http://localhost:2380,s2=http://localhost:22380,s3=http://localhost:32380 \--initial-cluster-token tkn \+ --initial-cluster-state new \+ --logger zap \+ --log-outputs stderrThe new v3.4 etcd will publish its information to the cluster. At this point, cluster still operates as v3.3 protocol, which is the lowest common version.{"level":"info","ts":1526586617.1647713,"caller":"membership/cluster.go:485","msg":"set initial cluster version","cluster-id":"7dee9ba76d59ed53","local-member-id":"7339c4e5e833c029","cluster-version":"3.0"}{"level":"info","ts":1526586617.1648536,"caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.0"}{"level":"info","ts":1526586617.1649303,"caller":"membership/cluster.go:473","msg":"updated cluster version","cluster-id":"7dee9ba76d59ed53","local-member-id":"7339c4e5e833c029","from":"3.0","from":"3.3"}{"level":"info","ts":1526586617.1649797,"caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.3"}{"level":"info","ts":1526586617.2107732,"caller":"etcdserver/server.go:1770","msg":"published local member to cluster through raft","local-member-id":"7339c4e5e833c029","local-member-attributes":"{Name:s1 ClientURLs:[http://localhost:2379]}","request-path":"/0/members/7339c4e5e833c029/attributes","cluster-id":"7dee9ba76d59ed53","publish-timeout":7}Verify that each member, and then the entire cluster, becomes healthy with the new v3.4 etcd binary:etcdctl endpoint health --endpoints=localhost:2379,localhost:22379,localhost:32379<<COMMENTlocalhost:32379 is healthy: successfully committed proposal: took = 2.337471mslocalhost:22379 is healthy: successfully committed proposal: took = 1.130717mslocalhost:2379 is healthy: successfully committed proposal: took = 2.124843msCOMMENTUn-upgraded members will log warnings like the following until the entire cluster is upgraded.This is expected and will cease after all etcd cluster members are upgraded to v3.4::41.942121 W | etcdserver: member 7339c4e5e833c029 has a higher version 3.4.0
:45.945154 W | etcdserver: the local etcd version 3.3.5 is not up-to-dateStep 5: repeatstep 3andstep 4for rest of the membersWhen all members are upgraded, the cluster will report upgrading to 3.4 successfully:Member 1:{"level":"info","ts":1526586949.0920913,"caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.4"}{"level":"info","ts":1526586949.0921566,"caller":"etcdserver/server.go:2272","msg":"cluster version is updated","cluster-version":"3.4"}Member 2:{"level":"info","ts":1526586949.092117,"caller":"membership/cluster.go:473","msg":"updated cluster version","cluster-id":"7dee9ba76d59ed53","local-member-id":"729934363faa4a24","from":"3.3","from":"3.4"}{"level":"info","ts":1526586949.0923078,"caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.4"}Member 3:{"level":"info","ts":1526586949.0921423,"caller":"membership/cluster.go:473","msg":"updated cluster version","cluster-id":"7dee9ba76d59ed53","local-member-id":"b548c2511513015","from":"3.3","from":"3.4"}{"level":"info","ts":1526586949.0922918,"caller":"api/capability.go:76","msg":"enabled capabilities for version","cluster-version":"3.4"}endpoint health --endpoints=localhost:2379,localhost:22379,localhost:32379<<COMMENTlocalhost:2379 is healthy: successfully committed proposal: took = 492.834µslocalhost:22379 is healthy: successfully committed proposal: took = 1.015025mslocalhost:32379 is healthy: successfully committed proposal: took = 1.853077msCOMMENTcurl http://localhost:2379/version<<COMMENT{"etcdserver":"3.4.0","etcdcluster":"3.4.0"}COMMENTcurl http://localhost:22379/version<<COMMENT{"etcdserver":"3.4.0","etcdcluster":"3.4.0"}COMMENTcurl http://localhost:32379/version<<COMMENT{"etcdserver":"3.4.0","etcdcluster":"3.4.0"}COMMENTFeedbackWas this page helpful?YesNoGlad to hear it! Pleasetell us how we can improve.Sorry to hear that. Pleasetell us how we can improve.Last modified September 29, 2023:Added note that --trusted-ca-file also enables client cert authentication Co-authored-by: James Blair <mail@jamesblair.net> (a412dd6)©
2013–2024etcd AuthorsTerms|Privacy|Trademarks|LicenseAll Rights Reserved