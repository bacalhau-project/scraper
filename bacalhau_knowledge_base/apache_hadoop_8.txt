URL: https://hadoop.apache.org/bylaws.html

Toggle navigationApache HadoopDownloadDocumentationCurrent (trunk)LatestStable3.4.03.3.62.10.2WikiCommunityBylawsCriteria for CommittershipMailing listsPublished CVEsWho We areDevelopmentHow to ContributeIssue TrackingVersion ControlVersioningHelpBuy StuffSponsorshipThanksApache Software FoundationBylawsThis document defines the bylaws under which the Apache Hadoop project
operates. It defines the roles and responsibilities of the project, who
may vote, how voting works, how conflicts are resolved, etc.Hadoop is a project of theApache Software
Foundation. The foundation holds the
trademark on the name “Hadoop” and copyright on Apache code including
the code in the Hadoop codebase. Thefoundation
FAQexplains the operation
and background of the foundation.Hadoop is typical of Apache projects in that it operates under a set of
principles, known collectively as the “Apache Way”. If you are new to
Apache development, please refer to theIncubator
projectfor more information on how Apache
projects operate.Roles and ResponsibilitiesApache projects define a set of roles with associated rights and
responsibilities. These roles govern what tasks an individual may
perform within the project. The roles are defined in the following
sectionsUsersThe most important participants in the project are people who use
our software. The majority of our developers start out as users and
guide their development efforts from the user’s perspective.Users contribute to the Apache projects by providing feedback to
developers in the form of bug reports and feature suggestions. As
well, users participate in the Apache community by helping other
users on mailing lists and user support forums.ContributorsAll of the volunteers who are contributing time, code,
documentation, or resources to the Hadoop Project. A contributor
that makes sustained, welcome contributions to the project may be
invited to become a Committer, though the exact timing of such
invitations depends on many factors.CommittersThe project’s Committers are responsible for the project’s technical
management. Committers have access to all subproject subversion
repositories. Committers may cast binding votes on any technical
discussion regarding any subproject.Committer access is by invitation only and must be approved by
consensus approval of the active PMC members. A Committer is
considered emeritus by their own declaration or by not contributing
in any form to the project for over six months. An emeritus
committer may request reinstatement of commit access from the PMC.
Such reinstatement is subject to consensus approval of active PMC
members.Significant, pervasive features are often developed in a speculative
branch of the repository. The PMC may grant commit rights on the
branch to its consistent contributors, while the initiative is
active. Branch committers are responsible for shepherding their
feature into an active release and do not cast binding votes or
vetoes in the project.All Apache committers are required to have a signed Contributor
License Agreement (CLA) on file with the Apache Software Foundation.
There is aCommitter
FAQwhich provides more
details on the requirements for CommittersA committer who makes a sustained contribution to the project may be
invited to become a member of the PMC. The form of contribution is
not limited to code. It can also include code review, helping out
users on the mailing lists, documentation, testing, etc.Release ManagerA Release Manager (RM) is a committer who volunteers to produce a
Release Candidate according toHowToRelease. The RM
shall publish a Release Plan on thecommon-dev@list stating the
branch from which they intend to make a Release Candidate, at least
one week before they do so. The RM is responsible for building
consensus around the content of the Release Candidate, in order to
achieve a successful Product Release vote.Project Management CommitteeThe Project Management Committee (PMC) for Apache Hadoop was created
by the Apache Board in January 2008 when Hadoop moved out of Lucene
and became a top level project at Apache. The PMC is responsible to
the board and the ASF for the management and oversight of the Apache
Hadoop codebase. The responsibilities of the PMC includeDeciding what is distributed as products of the Apache Hadoop
project. In particular all releases must be approved by the PMCMaintaining the project’s shared resources, including the
codebase repository, mailing lists, websites.Speaking on behalf of the project.Resolving license disputes regarding products of the projectNominating new PMC members and committersMaintaining these bylaws and other guidelines of the projectMembership of the PMC is by invitation only and must be approved by
a consensus approval of active PMC members. A PMC member is
considered “emeritus” by their own declaration or by not
contributing in any form to the project for over six months. An
emeritus member may request reinstatement to the PMC. Such
reinstatement is subject to consensus approval of the active PMC
members.The chair of the PMC is appointed by the ASF board. The chair is an
office holder of the Apache Software Foundation (Vice President,
Apache Hadoop) and has primary responsibility to the board for the
management of the projects within the scope of the Hadoop PMC. The
chair reports to the board quarterly on developments within the
Hadoop project.The chair of the PMC is rotated annually. When the chair is rotated
or if the current chair of the PMC resigns, the PMC votes to
recommend a new chair using Single Transferable Vote (STV) voting.
Seehttps://wiki.apache.org/general/BoardVotingfor specifics. The
decision must be ratified by the Apache board.Decision MakingWithin the Hadoop project, different types of decisions require
different forms of approval. For example, theprevious
sectiondescribes several decisions which
require “consensus approval” approval. This section defines how voting
is performed, the types of approvals, and which types of decision
require which type of approval.VotingDecisions regarding the project are made by votes on the primary
project development mailing list (general@hadoop.apache.org). Where
necessary, PMC voting may take place on the private Hadoop PMC
mailing list. Votes are clearly indicated by subject line starting
with [VOTE]. Votes may contain multiple items for approval and
these should be clearly separated. Voting is carried out by replying
to the vote mail. Voting may take four flavors+1“Yes,” “Agree,” or “the action should be performed.” In
general, this vote also indicates a willingness on the behalf of
the voter in “making it happen”+0This vote indicates a willingness for the action under
consideration to go ahead. The voter, however will not be able
to help.-0This vote indicates that the voter does not, in general,
agree with the proposed action but is not concerned enough to
prevent the action going ahead.-1This is a negative vote. On issues where consensus is
required, this vote counts as aveto. All vetoes must
contain an explanation of why the veto is appropriate. Vetoes
with no explanation are void. It may also be appropriate for a
-1 vote to include an alternative course of action.All participants in the Hadoop project are encouraged to show their
agreement with or against a particular action by voting. For
technical decisions, only the votes of active committers are
binding. Non binding votes are still useful for those with binding
votes to understand the perception of an action in the wider Hadoop
community. For PMC decisions, only the votes of PMC members are
binding.Voting can also be applied to changes made to the Hadoop codebase.
These typically take the form of a veto (-1) in reply to the commit
message sent when the commit is made.ApprovalsThese are the types of approvals that can be sought. Different
actions require different types of approvalsConsensus Approval -Consensus approval requires 3 binding
+1 votes and no binding vetoes.Lazy Consensus -Lazy consensus requires no -1 votes
(‘silence gives assent’).Lazy Majority -A lazy majority vote requires 3 binding +1
votes and more binding +1 votes than -1 votes.Lazy 2/3 Majority -Lazy 2/3 majority votes requires at
least 3 votes and twice as many +1 votes as -1 votes.VetoesA valid, binding veto cannot be overruled. If a veto is cast, it
must be accompanied by a valid reason explaining the reasons for the
veto. The validity of a veto, if challenged, can be confirmed by
anyone who has a binding vote. This does not necessarily signify
agreement with the veto - merely that the veto is valid.If you disagree with a valid veto, you must lobby the person casting
the veto to withdraw their veto. If a veto is not withdrawn, any
action that has been vetoed must be reversed in a timely manner.ActionsThis section describes the various actions which are undertaken
within the project, the corresponding approval required for that
action and those who have binding votes over the action.Code ChangeA change made to a codebase of the project and committed by a
committer. This includes source code, documentation, website
content, etc.Consensus approval of active committers, but with a minimum of
one +1. The code can be committed after the first +1, unless the
code change represents a merge from a branch, in which case
three +1s are required.Product ReleaseWhen a release of one of the project’s products is ready, a vote
is required to accept the release as an official release of the
project.Lazy Majority of active PMC membersAdoption of New CodebaseWhen the codebase for an existing, released product is to be
replaced with an alternative codebase. If such a vote fails to
gain approval, the existing code base will continue.This also covers the creation of new sub-projects within the
projectLazy 2/3 majority of PMC membersNew Branch CommitterWhen a branch committer is proposed for the PMCLazy consensus of active PMC membersNew CommitterWhen a new committer is proposed for the projectConsensus approval of active PMC membersNew PMC MemberWhen a committer is proposed for the PMCConsensus approval of active PMC membersBranch Committer RemovalWhen removal of commit privileges is soughtorwhen the
branch is merged to the mainlineLazy 2/3 majority of active PMC membersCommitter RemovalWhen removal of commit privileges is sought. Note: Such actions
will also be referred to the ASF board by the PMC chairLazy 2/3 majority of active PMC members (excluding the committer
in question if a member of the PMC).PMC Member RemovalWhen removal of a PMC member is sought. Note: Such actions will
also be referred to the ASF board by the PMC chair.Lazy 2/3 majority of active PMC members (excluding the member in
question)Modifying BylawsModifying this document.Lazy majority of active PMC membersVoting TimeframesVotes are open for a period of 7 days to allow all active voters
time to consider the vote. Votes relating to code changes are not
subject to a strict timetable but should be made as timely as
possible.Product Release - Vote TimeframeRelease votes, alone, run for a period of 5 days. All other
votes are subject to the above timeframe of 7 days.Apache Hadoop, Hadoop, Apache, the Apache feather logo,
    and the Apache Hadoop project logo are either registered trademarks or trademarks of the Apache Software Foundation
     in the United States and other countriesCopyright Â© 2006-2024 The Apache Software FoundationPrivacy policy