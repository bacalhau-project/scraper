URL: https://en.wikipedia.org/wiki/Computer_system

Jump to contentMain menuMain menumove to sidebarhideNavigationMain pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonateContributeHelpLearn to editCommunity portalRecent changesUpload fileSearchSearchAppearanceCreate accountLog inPersonal toolsCreate accountLog inPages for logged out editorslearn moreContributionsTalkContentsmove to sidebarhide(Top)1Etymology2HistoryToggle History subsection2.1Pre-20th century2.2First computer2.3Electromechanical calculating machine2.4Analog computers2.5Digital computers2.5.1Electromechanical2.5.2Vacuum tubes and digital electronic circuits2.6Modern computers2.6.1Concept of modern computer2.6.2Stored programs2.6.3Transistors2.6.4Integrated circuits2.7Mobile computers3TypesToggle Types subsection3.1By architecture3.2By size, form-factor and purpose4HardwareToggle Hardware subsection4.1History of computing hardware4.2Other hardware topics4.3Input devices4.4Output devices4.5Control unit4.6Central processing unit (CPU)4.7Arithmetic logic unit (ALU)4.8Memory4.9Input/output (I/O)4.10Multitasking4.11Multiprocessing5SoftwareToggle Software subsection5.1Languages5.2Programs5.2.1Stored program architecture5.2.2Machine code5.2.3Programming language5.2.3.1Low-level languages5.2.3.2High-level languages5.2.4Program design5.2.5Bugs6Networking and the Internet7Unconventional computers8FutureToggle Future subsection8.1Computer architecture paradigms8.2Artificial intelligence9Professions and organizations10See also11Notes12References13Sources14External linksToggle the table of contentsComputer234 languagesAcèhAfrikaansAlemannischአማርኛअंगिकाÆngliscАԥсшәаالعربيةAragonésܐܪܡܝܐԱրեւմտահայերէնঅসমীয়াAsturianuअवधीAvañe'ẽAymar aruAzərbaycancaتۆرکجهবাংলা閩南語 / Bân-lâm-gúBasa BanyumasanБашҡортсаБеларускаяБеларуская (тарашкевіца)भोजपुरीBikol CentralBislamaБългарскиBoarischབོད་ཡིགBosanskiBrezhonegБуряадCatalàЧӑвашлаCebuanoČeštinaChiShonaCymraegDanskالدارجةDeutschडोटेलीEestiΕλληνικάEmiliàn e rumagnòlЭрзяньEspañolEsperantoEstremeñuEuskaraفارسیFiji HindiFøroysktFrançaisFurlanGaeilgeGaelgGàidhligGalego贛語Gĩkũyũگیلکیગુજરાતી𐌲𐌿𐍄𐌹𐍃𐌺客家語 / Hak-kâ-ngî한국어HausaՀայերենहिन्दीHrvatskiIdoIgboIlokanoবিষ্ণুপ্রিয়া মণিপুরীBahasa IndonesiaInterlinguaInterlingueᐃᓄᒃᑎᑐᑦ / inuktitutIñupiatunИронIsiXhosaIsiZuluÍslenskaItalianoעבריתJawaKabɩyɛಕನ್ನಡKapampanganКъарачай-малкъарქართულიकॉशुर / کٲشُرKaszëbscziҚазақшаKernowekKiswahiliКомиKongoKreyòl ayisyenKriyòl gwiyannenKurdîКыргызчаLadinoລາວLatinaLatviešuLëtzebuergeschЛезгиLietuviųLigureLimburgsLingálaLingua Franca NovaLivvinkarjalaLa .lojban.LombardMagyarमैथिलीМакедонскиMalagasyമലയാളംMaltiमराठीმარგალურიمصرىဘာသာမန်مازِرونیBahasa MelayuMinangkabau閩東語 / Mìng-dĕ̤ng-ngṳ̄MirandésМонголမြန်မာဘာသာNa Vosa VakavitiNederlandsNedersaksiesनेपालीनेपाल भाषा日本語NapulitanoߒߞߏНохчийнNordfriiskNorsk bokmålNorsk nynorskOccitanОлык марийଓଡ଼ିଆOromooOʻzbekcha / ўзбекчаਪੰਜਾਬੀپنجابیပအိုဝ်ႏဘာႏသာႏپښتوPatoisភាសាខ្មែរPiemontèisPlattdüütschPolskiΠοντιακάPortuguêsQaraqalpaqshaQırımtatarcaRomânăRomani čhibRuna SimiРусиньскыйРусскийСаха тылаSakizayaGagana Samoaसंस्कृतम्ᱥᱟᱱᱛᱟᱲᱤسرائیکیSarduScotsSeelterskSesothoShqipSicilianuසිංහලSimple EnglishسنڌيSlovenčinaSlovenščinaСловѣньскъ / ⰔⰎⰑⰂⰡⰐⰠⰔⰍⰟŚlůnskiSoomaaligaکوردیСрпски / srpskiSrpskohrvatski / српскохрватскиSundaSuomiSvenskaTagalogதமிழ்TaclḥitТатарча / tatarçaTayalతెలుగుไทยThuɔŋjäŋТоҷикӣTsetsêhestâheseತುಳುTürkçeTürkmençeBasa UgiУкраїнськаاردوئۇيغۇرچە / UyghurcheVènetoVepsän kel’Tiếng ViệtVolapükVõroWalonWayuunaiki文言West-VlamsWinarayWolof吴语Xitsongaייִדיש粵語ZazakiŽemaitėška中文BetawiDusun Bundu-liwanTolışiⵜⴰⵎⴰⵣⵉⵖⵜ ⵜⴰⵏⴰⵡⴰⵢⵜEdit linksArticleTalkEnglishReadView sourceView historyToolsToolsmove to sidebarhideActionsReadView sourceView historyGeneralWhat links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageGet shortened URLDownload QR codeWikidata itemPrint/exportDownload as PDFPrintable versionIn other projectsWikimedia CommonsWikiquoteWikivoyageAppearancemove to sidebarhideFrom Wikipedia, the free encyclopedia(Redirected fromComputer system)Automatic general-purpose device for performing arithmetic or logical operationsFor other uses, seeComputer (disambiguation).Computers and computing devices from different eras—left to right, top to bottom:Early vacuum tube computer (ENIAC)Mainframecomputer (IBM System 360)Smartphone(LYFWater 2)Desktop computer(IBMThinkCentre S50with monitor)Video game console(NintendoGameCube)Supercomputer(IBMSummit)Acomputeris amachinethat can beprogrammedto automaticallycarry outsequences ofarithmeticorlogical operations(computation). Moderndigital electroniccomputers can perform generic sets of operations known asprograms. These programs enable computers to perform a wide range of tasks. The termcomputer systemmay refer to a nominally complete computer that includes thehardware,operating system,software, andperipheralequipment needed and used for full operation; or to a group of computers that are linked and function together, such as acomputer networkorcomputer cluster.A broad range ofindustrialandconsumer productsuse computers ascontrol systems, including simple special-purpose devices likemicrowave ovensandremote controls, and factory devices likeindustrial robots. Computers are at the core of general-purpose devices such aspersonal computersandmobile devicessuch assmartphones. Computers power theInternet, which links billions of computers and users.Early computers were meant to be used only for calculations. Simple manual instruments like theabacushave aided people in doing calculations since ancient times. Early in theIndustrial Revolution, some mechanical devices were built to automate long, tedious tasks, such as guiding patterns forlooms. More sophisticated electrical machines did specializedanalogcalculations in the early 20th century. The firstdigitalelectronic calculating machines were developed duringWorld War II, bothelectromechanicaland usingthermionic valves. The firstsemiconductortransistorsin the late 1940s were followed by thesilicon-basedMOSFET(MOS transistor) andmonolithic integrated circuitchip technologies in the late 1950s, leading to themicroprocessorand themicrocomputer revolutionin the 1970s. The speed, power, and versatility of computers have been increasing dramatically ever since then, withtransistor countsincreasing at a rapid pace (Moore's lawnoted that counts doubled every two years), leading to theDigital Revolutionduring the late 20th and early 21st centuries.Conventionally, a modern computer consists of at least oneprocessing element, typically acentral processing unit(CPU) in the form of amicroprocessor, together with some type ofcomputer memory, typicallysemiconductor memorychips. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to storedinformation. Peripheral devices include input devices (keyboards, mice,joystick, etc.), output devices (monitor screens,printers, etc.), andinput/output devicesthat perform both functions (e.g., the 2000s-eratouchscreen). Peripheral devices allow information to be retrieved from an external source, and they enable the results of operations to be saved and retrieved.EtymologyAhuman computer, with microscope and calculator, 1952It was not until the mid-20th century that the word acquired its modern definition; according to theOxford English Dictionary, the first known use of the wordcomputerwas in a different sense, in a 1613 book calledThe Yong Mans Gleaningsby the English writerRichard Brathwait: "I haue  [sic] read the truest computer of Times, and the best Arithmetician that euer  [sic] breathed, and he reduceth thy dayes into a short number." This usage of the term referred to ahuman computer, a person who carried out calculations orcomputations. The word continued to have the same meaning until the middle of the 20th century. During the latter part of this period, women were often hired as computers because they could be paid less than their male counterparts.[1]By 1943, most human computers were women.[2]TheOnline Etymology Dictionarygives the first attested use ofcomputerin the 1640s, meaning 'one who calculates'; this is an "agent noun from compute (v.)". TheOnline Etymology Dictionarystates that the use of the term to mean"'calculating machine' (of any type) is from 1897." TheOnline Etymology Dictionaryindicates that the "modern use" of the term, to mean 'programmable digital electronic computer' dates from "1945 under this name; [in a] theoretical [sense] from 1937, asTuring machine".[3]The name has remained, although modern computers are capable of many higher-level functions.HistoryMain articles:History of computingandHistory of computing hardwareFor a chronological guide, seeTimeline of computing.Pre-20th centuryTheIshango bone, abone tooldating back toprehistoric AfricaDevices have been used to aid computation for thousands of years, mostly usingone-to-one correspondencewithfingers. The earliest counting device was most likely a form oftally stick. Later record keeping aids throughout theFertile Crescentincluded calculi (clay spheres, cones, etc.) which represented counts of items, likely livestock or grains, sealed in hollow unbaked clay containers.[a][4]The use ofcounting rodsis one example.The Chinesesuanpan(算盘). The number represented on thisabacusis 6,302,715,408.Theabacuswas initially used for arithmetic tasks. TheRoman abacuswas developed from devices used inBabyloniaas early as 2400 BCE. Since then, many other forms of reckoning boards or tables have been invented. In a medieval Europeancounting house, a checkered cloth would be placed on a table, and markers moved around on it according to certain rules, as an aid to calculating sums of money.[5]TheAntikythera mechanism, dating back toancient Greececirca 150–100 BCE, is an earlyanalog computingdevice.TheAntikythera mechanismis believed to be the earliest known mechanicalanalog computer, according toDerek J. de Solla Price.[6]It was designed to calculate astronomical positions. It was discovered in 1901 in theAntikythera wreckoff the Greek island ofAntikythera, betweenKytheraandCrete, and has been dated to approximatelyc.100 BCE. Devices of comparable complexity to the Antikythera mechanism would not reappear until the fourteenth century.[7]Many mechanical aids to calculation and measurement were constructed for astronomical and navigation use. Theplanispherewas astar chartinvented byAbū Rayhān al-Bīrūnīin the early 11th century.[8]Theastrolabewas invented in theHellenistic worldin either the 1st or 2nd centuries BCE and is often attributed toHipparchus. A combination of the planisphere anddioptra, the astrolabe was effectively an analog computer capable of working out several different kinds of problems inspherical astronomy. An astrolabe incorporating a mechanicalcalendarcomputer[9][10]andgear-wheels was invented by Abi Bakr ofIsfahan,Persiain 1235.[11]Abū Rayhān al-Bīrūnī invented the first mechanical gearedlunisolar calendarastrolabe,[12]an early fixed-wiredknowledge processing machine[13]with agear trainand gear-wheels,[14]c.1000 AD.Thesector, a calculating instrument used for solving problems in proportion,trigonometry, multiplication and division, and for various functions, such as squares and cube roots, was developed in the late 16th century and found application in gunnery, surveying and navigation.Theplanimeterwas a manual instrument to calculate the area of a closed figure by tracing over it with a mechanical linkage.Aslide ruleTheslide rulewas invented around 1620–1630, by the English clergymanWilliam Oughtred, shortly after the publication of the concept of thelogarithm. It is a hand-operated analog computer for doing multiplication and division. As slide rule development progressed, added scales provided reciprocals, squares and square roots, cubes and cube roots, as well astranscendental functionssuch as logarithms and exponentials, circular andhyperbolictrigonometry and otherfunctions. Slide rules with special scales are still used for quick performance of routine calculations, such as theE6Bcircular slide rule used for time and distance calculations on light aircraft.In the 1770s,Pierre Jaquet-Droz, a Swisswatchmaker, built a mechanical doll (automaton) that could write holding a quill pen. By switching the number and order of its internal wheels different letters, and hence different messages, could be produced. In effect, it could be mechanically "programmed" to read instructions. Along with two other complex machines, the doll is at the Musée d'Art et d'Histoire ofNeuchâtel,Switzerland, and still operates.[15]In 1831–1835, mathematician and engineerGiovanni Planadevised aPerpetual Calendar machine, which, through a system of pulleys and cylinders and over, could predict theperpetual calendarfor every year from 0 CE (that is, 1 BCE) to 4000 CE, keeping track of leap years and varying day length. Thetide-predicting machineinvented by the Scottish scientistSir William Thomsonin 1872 was of great utility to navigation in shallow waters. It used a system of pulleys and wires to automatically calculate predicted tide levels for a set period at a particular location.Thedifferential analyser, a mechanical analog computer designed to solvedifferential equationsbyintegration, used wheel-and-disc mechanisms to perform the integration. In 1876, Sir William Thomson had already discussed the possible construction of such calculators, but he had been stymied by the limited output torque of theball-and-disk integrators.[16]In a differential analyzer, the output of one integrator drove the input of the next integrator, or a graphing output. Thetorque amplifierwas the advance that allowed these machines to work. Starting in the 1920s,Vannevar Bushand others developed mechanical differential analyzers.In the 1890s, the Spanish engineerLeonardo Torres Quevedobegan to develop a series of advancedanalog machinesthat could solve real and complex roots ofpolynomials,[17][18][19][20]which were published in 1901 by theParis Academy of Sciences.[21]First computerCharles BabbageA diagram of a portion of Babbage'sDifference engineThe Difference Engine Number 2 at theIntellectual Ventureslaboratory in SeattleCharles Babbage, an English mechanical engineer andpolymath, originated the concept of a programmable computer. Considered the "father of the computer",[22]he conceptualized and invented the firstmechanical computerin the early 19th century.After working on hisdifference enginehe announced his invention in 1822, in a paper to theRoyal Astronomical Society, titled "Note on the application of machinery to the computation of astronomical and mathematical tables",[23]he also designed to aid in navigational calculations, in 1833 he realized that a much more general design, ananalytical engine, was possible. The input of programs and data was to be provided to the machine viapunched cards, a method being used at the time to direct mechanicalloomssuch as theJacquard loom. For output, the machine would have a printer, a curve plotter and a bell. The machine would also be able to punch numbers onto cards to be read in later. The engine would incorporate anarithmetic logic unit,control flowin the form ofconditional branchingandloops, and integratedmemory, making it the first design for a general-purpose computer that could be described in modern terms asTuring-complete.[24][25]The machine was about a century ahead of its time. All the parts for his machine had to be made by hand – this was a major problem for a device with thousands of parts. Eventually, the project was dissolved with the decision of theBritish Governmentto cease funding. Babbage's failure to complete the analytical engine can be chiefly attributed to political and financial difficulties as well as his desire to develop an increasingly sophisticated computer and to move ahead faster than anyone else could follow. Nevertheless, his son,Henry Babbage, completed a simplified version of the analytical engine's computing unit (themill) in 1888. He gave a successful demonstration of its use in computing tables in 1906.Electromechanical calculating machineElectro-mechanical calculator (1920) byLeonardo Torres Quevedo.In his workEssays on Automaticspublished in 1914,Leonardo Torres Quevedowrote a brief history of Babbage's efforts at constructing a mechanical Difference Engine and Analytical Engine. The paper contains a design of a machine capable to calculate formulas likeax(y−z)2{\displaystyle a^{x}(y-z)^{2}}, for a sequence of sets of values. The whole machine was to be controlled by aread-onlyprogram, which was complete with provisions forconditional branching. He also introduced the idea offloating-point arithmetic.[26][27][28]In 1920, to celebrate the 100th anniversary of the invention of thearithmometer, Torres presented in Paris the Electromechanical Arithmometer, which allowed a user to input arithmetic problems through akeyboard, and computed and printed the results,[29][30][31][32]demonstrating the feasibility of an electromechanical analytical engine.[33]Analog computersMain article:Analog computerSir William Thomson's third tide-predicting machine design, 1879–81During the first half of the 20th century, many scientificcomputingneeds were met by increasingly sophisticated analog computers, which used a direct mechanical or electrical model of the problem as a basis forcomputation. However, these were not programmable and generally lacked the versatility and accuracy of modern digital computers.[34]The first modern analog computer was atide-predicting machine, invented bySir William Thomson(later to become Lord Kelvin) in 1872. Thedifferential analyser, a mechanical analog computer designed to solve differential equations by integration using wheel-and-disc mechanisms, was conceptualized in 1876 byJames Thomson, the elder brother of the more famous Sir William Thomson.[16]The art of mechanical analog computing reached its zenith with thedifferential analyzer, built by H. L. Hazen andVannevar BushatMITstarting in 1927. This built on the mechanical integrators ofJames Thomsonand the torque amplifiers invented by H. W. Nieman. A dozen of these devices were built before their obsolescence became obvious. By the 1950s, the success of digital electronic computers had spelled the end for most analog computing machines, but analog computers remained in use during the 1950s in some specialized applications such as education (slide rule) and aircraft (control systems).Digital computersElectromechanicalBy 1938, theUnited States Navyhad developed an electromechanical analog computer small enough to use aboard asubmarine. This was theTorpedo Data Computer, which used trigonometry to solve the problem of firing a torpedo at a moving target. DuringWorld War IIsimilar devices were developed in other countries as well.Replica ofKonrad Zuse'sZ3, the first fully automatic, digital (electromechanical) computerEarly digital computers wereelectromechanical; electric switches drove mechanical relays to perform the calculation. These devices had a low operating speed and were eventually superseded by much faster all-electric computers, originally usingvacuum tubes. TheZ2, created by German engineerKonrad Zusein 1939 inBerlin, was one of the earliest examples of an electromechanical relay computer.[35]Konrad Zuse, inventor of the modern computer[36][37]In 1941, Zuse followed his earlier machine up with theZ3, the world's first working electromechanicalprogrammable, fully automatic digital computer.[38][39]The Z3 was built with 2000relays, implementing a 22bitword lengththat operated at aclock frequencyof about 5–10Hz.[40]Program code was supplied on punchedfilmwhile data could be stored in 64 words of memory or supplied from the keyboard. It was quite similar to modern machines in some respects, pioneering numerous advances such asfloating-point numbers. Rather than the harder-to-implement decimal system (used inCharles Babbage's earlier design), using abinarysystem meant that Zuse's machines were easier to build and potentially more reliable, given the technologies available at that time.[41]The Z3 was not itself a universal computer but could be extended to beTuring complete.[42][43]Zuse's next computer, theZ4, became the world's first commercial computer; after initial delay due to the Second World War, it was completed in 1950 and delivered to theETH Zurich.[44]The computer was manufactured by Zuse's own company,Zuse KG, which was founded in 1941 as the first company with the sole purpose of developing computers in Berlin.[44]Vacuum tubes and digital electronic circuitsPurelyelectronic circuitelements soon replaced their mechanical and electromechanical equivalents, at the same time that digital calculation replaced analog. The engineerTommy Flowers, working at thePost Office Research Stationin London in the 1930s, began to explore the possible use of electronics for thetelephone exchange. Experimental equipment that he built in 1934 went into operation five years later, converting a portion of thetelephone exchangenetwork into an electronic data processing system, using thousands ofvacuum tubes.[34]In the US,John Vincent AtanasoffandClifford E. BerryofIowa State Universitydeveloped and tested theAtanasoff–Berry Computer(ABC) in 1942,[45]the first "automatic electronic digital computer".[46]This design was also all-electronic and used about 300 vacuum tubes, with capacitors fixed in a mechanically rotating drum for memory.[47]Colossus, the firstelectronic digitalprogrammable computing device, was used to break German ciphers during World War II. It is seen here in use atBletchley Parkin 1943.During World War II, the British code-breakers atBletchley Parkachieved a number of successes at breaking encrypted German military communications. The German encryption machine,Enigma, was first attacked with the help of the electro-mechanicalbombeswhich were often run by women.[48][49]To crack the more sophisticated GermanLorenz SZ 40/42machine, used for high-level Army communications,Max Newmanand his colleagues commissioned Flowers to build theColossus.[47]He spent eleven months from early February 1943 designing and building the first Colossus.[50]After a functional test in December 1943, Colossus was shipped to Bletchley Park, where it was delivered on 18 January 1944[51]and attacked its first message on 5 February.[47]Colossus was the world's firstelectronic digitalprogrammable computer.[34]It used a large number of valves (vacuum tubes). It had paper-tape input and was capable of being configured to perform a variety ofboolean logicaloperations on its data, but it was not Turing-complete. Nine Mk II Colossi were built (The Mk I was converted to a Mk II making ten machines in total). Colossus Mark I contained 1,500 thermionic valves (tubes), but Mark II with 2,400 valves, was both five times faster and simpler to operate than Mark I, greatly speeding the decoding process.[52][53]ENIACwas the firstelectronic, Turing-complete device, and performed ballistics trajectory calculations for theUnited States Army.TheENIAC[54](Electronic Numerical Integrator and Computer) was the first electronicprogrammablecomputer built in the U.S. Although the ENIAC was similar to the Colossus, it was much faster, more flexible, and it was Turing-complete. Like the Colossus, a "program" on the ENIAC was defined by thestatesof its patch cables and switches, a far cry from thestored programelectronic machines that came later. Once a program was written, it had to be mechanically set into the machine with manual resetting of plugs and switches. The programmers of the ENIAC were six women, often known collectively as the "ENIAC girls".[55][56]It combined the high speed of electronics with the ability to be programmed for many complex problems. It could add or subtract 5000 times a second, a thousand times faster than any other machine. It also had modules to multiply, divide, and square root. High speed memory was limited to 20 words (about 80 bytes). Built under the direction ofJohn MauchlyandJ. Presper Eckertat the University of Pennsylvania, ENIAC's development and construction lasted from 1943 to full operation at the end of 1945. The machine was huge, weighing 30 tons, using 200 kilowatts of electric power and contained over 18,000 vacuum tubes, 1,500 relays, and hundreds of thousands of resistors, capacitors, and inductors.[57]Modern computersConcept of modern computerThe principle of the modern computer was proposed byAlan Turingin his seminal 1936 paper,[58]On Computable Numbers. Turing proposed a simple device that he called "Universal Computing machine" and that is now known as auniversal Turing machine. He proved that such a machine is capable of computing anything that is computable by executing instructions (program) stored on tape, allowing the machine to be programmable. The fundamental concept of Turing's design is thestored program, where all the instructions for computing are stored in memory.Von Neumannacknowledged that the central concept of the modern computer was due to this paper.[59]Turing machines are to this day a central object of study intheory of computation. Except for the limitations imposed by their finite memory stores, modern computers are said to beTuring-complete, which is to say, they havealgorithmexecution capability equivalent to a universal Turing machine.Stored programsMain article:Stored-program computerA section of the reconstructedManchester Baby, the first electronicstored-program computerEarly computing machines had fixed programs. Changing its function required the re-wiring and re-structuring of the machine.[47]With the proposal of the stored-program computer this changed. A stored-program computer includes by design aninstruction setand can store in memory a set of instructions (aprogram) that details thecomputation. The theoretical basis for the stored-program computer was laid out byAlan Turingin his 1936 paper. In 1945, Turing joined theNational Physical Laboratoryand began work on developing an electronic stored-program digital computer. His 1945 report "Proposed Electronic Calculator" was the first specification for such a device. John von Neumann at theUniversity of Pennsylvaniaalso circulated hisFirst Draft of a Report on the EDVACin 1945.[34]TheManchester Babywas the world's firststored-program computer. It was built at theUniversity of Manchesterin England byFrederic C. Williams,Tom KilburnandGeoff Tootill, and ran its first program on 21 June 1948.[60]It was designed as atestbedfor theWilliams tube, the firstrandom-accessdigital storage device.[61]Although the computer was described as "small and primitive" by a 1998 retrospective, it was the first working machine to contain all of the elements essential to a modern electronic computer.[62]As soon as the Baby had demonstrated the feasibility of its design, a project began at the university to develop it into a practically useful computer, theManchester Mark 1.The Mark 1 in turn quickly became the prototype for theFerranti Mark 1, the world's first commercially available general-purpose computer.[63]Built byFerranti, it was delivered to the University of Manchester in February 1951. At least seven of these later machines were delivered between 1953 and 1957, one of them toShelllabs inAmsterdam.[64]In October 1947 the directors of British catering companyJ. Lyons & Companydecided to take an active role in promoting the commercial development of computers. Lyons'sLEO Icomputer, modelled closely on the CambridgeEDSACof 1949, became operational in April 1951[65]and ran the world's first routine office computerjob.TransistorsMain articles:TransistorandHistory of the transistorFurther information:Transistor computerandMOSFETBipolar junction transistor(BJT)The concept of afield-effect transistorwas proposed byJulius Edgar Lilienfeldin 1925.John BardeenandWalter Brattain, while working underWilliam ShockleyatBell Labs, built the first workingtransistor, thepoint-contact transistor, in 1947, which was followed by Shockley'sbipolar junction transistorin 1948.[66][67]From 1955 onwards, transistors replacedvacuum tubesin computer designs, giving rise to the "second generation" of computers. Compared to vacuum tubes, transistors have many advantages: they are smaller, and require less power than vacuum tubes, so give off less heat.Junction transistorswere much more reliable than vacuum tubes and had longer, indefinite, service life. Transistorized computers could contain tens of thousands of binary logic circuits in a relatively compact space. However, early junction transistors were relatively bulky devices that were difficult to manufacture on amass-productionbasis, which limited them to a number of specialized applications.[68]At theUniversity of Manchester, a team under the leadership ofTom Kilburndesigned and built a machine using the newly developed transistors instead of valves.[69]Their firsttransistorized computerand the first in the world, wasoperational by 1953, and a second version was completed there in April 1955. However, the machine did make use of valves to generate its 125 kHz clock waveforms and in the circuitry to read and write on its magneticdrum memory, so it was not the first completely transistorized computer. That distinction goes to theHarwell CADETof 1955,[70]built by the electronics division of theAtomic Energy Research EstablishmentatHarwell.[70][71]MOSFET(MOS transistor), showinggate(G), body (B), source (S) and drain (D) terminals. The gate is separated from the body by an insulating layer (pink).Themetal–oxide–silicon field-effect transistor(MOSFET), also known as the MOS transistor, was invented byMohamed M. AtallaandDawon Kahngat Bell Labs in 1959.[72]It was the first truly compact transistor that could be miniaturized and mass-produced for a wide range of uses.[68]With itshigh scalability,[73]and much lower power consumption and higher density than bipolar junction transistors,[74]the MOSFET made it possible to buildhigh-density integrated circuits.[75][76]In addition to data processing, it also enabled the practical use of MOS transistors asmemory cellstorage elements, leading to the development of MOSsemiconductor memory, which replaced earliermagnetic-core memoryin computers. The MOSFET led to themicrocomputer revolution,[77]and became the driving force behind thecomputer revolution.[78][79]The MOSFET is the most widely used transistor in computers,[80][81]and is the fundamental building block ofdigital electronics.[82]Integrated circuitsMain articles:Integrated circuitandInvention of the integrated circuitFurther information:Planar processandMicroprocessorIntegrated circuits are typically packaged in plastic, metal, or ceramic cases to protect the IC from damage and for ease of assembly.The next great advance in computing power came with the advent of theintegrated circuit(IC).
The idea of the integrated circuit was first conceived by a radar scientist working for theRoyal Radar Establishmentof theMinistry of Defence,Geoffrey W.A. Dummer. Dummer presented the first public description of an integrated circuit at the Symposium on Progress in Quality Electronic Components inWashington, D.C., on 7 May 1952.[83]The first working ICs were invented byJack KilbyatTexas InstrumentsandRobert NoyceatFairchild Semiconductor.[84]Kilby recorded his initial ideas concerning the integrated circuit in July 1958, successfully demonstrating the first working integrated example on 12 September 1958.[85]In his patent application of 6 February 1959, Kilby described his new device as "a body of semiconductor material ... wherein all the components of the electronic circuit are completely integrated".[86][87]However, Kilby's invention was ahybrid integrated circuit(hybrid IC), rather than amonolithic integrated circuit(IC) chip.[88]Kilby's IC had external wire connections, which made it difficult to mass-produce.[89]Noyce also came up with his own idea of an integrated circuit half a year later than Kilby.[90]Noyce's invention was the first true monolithic IC chip.[91][89]His chip solved many practical problems that Kilby's had not. Produced at Fairchild Semiconductor, it was made ofsilicon, whereas Kilby's chip was made ofgermanium. Noyce's monolithic IC wasfabricatedusing theplanar process, developed by his colleagueJean Hoerniin early 1959. In turn, the planar process was based on Mohamed M. Atalla's work on semiconductor surface passivation by silicon dioxide in the late 1950s.[92][93][94]Modern monolithic ICs are predominantly MOS (metal–oxide–semiconductor) integrated circuits, built fromMOSFETs(MOS transistors).[95]The earliest experimental MOS IC to be fabricated was a 16-transistor chip built by Fred Heiman and Steven Hofstein atRCAin 1962.[96]General Microelectronicslater introduced the first commercial MOS IC in 1964,[97]developed by Robert Norman.[96]Following the development of theself-aligned gate(silicon-gate) MOS transistor by Robert Kerwin,Donald Kleinand John Sarace at Bell Labs in 1967, the firstsilicon-gateMOS IC withself-aligned gateswas developed byFederico Fagginat Fairchild Semiconductor in 1968.[98]The MOSFET has since become the most critical device component in modern ICs.[95]Diephotograph of aMOS 6502, an early 1970s microprocessor integrating 3500 transistors on a single chipThe development of the MOS integrated circuit led to the invention of themicroprocessor,[99][100]and heralded an explosion in the commercial and personal use of computers. While the subject of exactly which device was the first microprocessor is contentious, partly due to lack of agreement on the exact definition of the term "microprocessor", it is largely undisputed that the first single-chip microprocessor was theIntel 4004,[101]designed and realized by Federico Faggin with his silicon-gate MOS IC technology,[99]along withTed Hoff,Masatoshi ShimaandStanley MazoratIntel.[b][103]In the early 1970s, MOS IC technology enabled theintegrationof more than 10,000 transistors on a single chip.[76]System on a Chip(SoCs) are complete computers on amicrochip(or chip) the size of a coin.[104]They may or may not have integratedRAMandflash memory. If not integrated, the RAM is usually placed directly above (known asPackage on package) or below (on the opposite side of thecircuit board) the SoC, and the flash memory is usually placed right next to the SoC, this all done to improve data transfer speeds, as the data signals do not have to travel long distances. Since ENIAC in 1945, computers have advanced enormously, with modern SoCs (Such as the Snapdragon 865) being the size of a coin while also being hundreds of thousands of times more powerful than ENIAC, integrating billions of transistors, and consuming only a few watts of power.Mobile computersThe firstmobile computerswere heavy and ran from mains power. The 50 lb (23 kg)IBM 5100was an early example. Later portables such as theOsborne 1andCompaq Portablewere considerably lighter but still needed to be plugged in. The first laptops, such as theGrid Compass, removed this requirement by incorporating batteries – and with the continued miniaturization of computing resources and advancements in portable battery life, portable computers grew in popularity in the 2000s.[105]The same developments allowed manufacturers to integrate computing resources into cellular mobile phones by the early 2000s.Thesesmartphonesandtabletsrun on a variety of operating systems and recently became the dominant computing device on the market.[106]These are powered bySystem on a Chip(SoCs), which are complete computers on a microchip the size of a coin.[104]TypesSee also:Classes of computersComputers can be classified in a number of different ways, including:By architectureAnalog computerDigital computerHybrid computerHarvard architectureVon Neumann architectureComplex instruction set computerReduced instruction set computerBy size, form-factor and purposeSee also:List of computer size categoriesSupercomputerMainframe computerMinicomputer(term no longer used),[107]Midrange computerServerRackmount serverBlade serverTower serverPersonal computerWorkstationMicrocomputer(term no longer used)[108]Home computer(term fallen into disuse)[109]Desktop computerTower desktopSlimline desktopMultimedia computer(non-linear editing systemcomputers, video editing PCs and the like, this term is no longer used)[110]Gaming computerAll-in-one PCNettop(Small form factor PCs, Mini PCs)Home theater PCKeyboard computerPortable computerThin clientInternet applianceLaptopDesktop replacement computerGaming laptopRugged laptop2-in-1 PCUltrabookChromebookSubnotebookSmartbookNetbookMobile computers:Tablet computerSmartphoneUltra-mobile PCPocket PCPalmtop PCHandheld PCPocket computerWearable computerSmartwatchSmartglassesSingle-board computerPlug computerStick PCProgrammable logic controllerComputer-on-moduleSystem on moduleSystem in a packageSystem-on-chip(Also known as an Application Processor or AP if it lacks circuitry such as radio circuitry)MicrocontrollerHardwareMain articles:Computer hardware,Personal computer hardware,Central processing unit, andMicroprocessorVideo demonstrating the standard components of a "slimline" computerThe termhardwarecovers all of those parts of a computer that are tangible physical objects.Circuits, computer chips, graphic cards, sound cards, memory (RAM), motherboard, displays, power supplies, cables, keyboards, printers and "mice" input devices are all hardware.History of computing hardwareMain article:History of computing hardwareFirst generation(mechanical/electromechanical)CalculatorsPascal's calculator,Arithmometer,Difference engine,Quevedo's analytical machinesProgrammable devicesJacquard loom,Analytical engine,IBM ASCC/Harvard Mark I,Harvard Mark II,IBM SSEC,Z1,Z2,Z3Second generation(vacuum tubes)CalculatorsAtanasoff–Berry Computer,IBM 604,UNIVAC 60,UNIVAC 120Programmable devicesColossus,ENIAC,Manchester Baby,EDSAC,Manchester Mark 1,Ferranti Pegasus,Ferranti Mercury,CSIRAC,EDVAC,UNIVAC I,IBM 701,IBM 702,IBM 650,Z22Third generation(discretetransistorsand SSI, MSI, LSIintegrated circuits)MainframesIBM 7090,IBM 7080,IBM System/360,BUNCHMinicomputerHP 2116A,IBM System/32,IBM System/36,LINC,PDP-8,PDP-11Desktop ComputerHP 9100Fourth generation(VLSIintegrated circuits)MinicomputerVAX,IBM AS/4004-bitmicrocomputerIntel 4004,Intel 40408-bitmicrocomputerIntel 8008,Intel 8080,Motorola 6800,Motorola 6809,MOS Technology 6502,Zilog Z8016-bitmicrocomputerIntel 8088,Zilog Z8000,WDC 65816/6580232-bitmicrocomputerIntel 80386,Pentium,Motorola 68000,ARM64-bitmicrocomputer[c]Alpha,MIPS,PA-RISC,PowerPC,SPARC,x86-64,ARMv8-AEmbedded computerIntel 8048,Intel 8051Personal computerDesktop computer,Home computer, Laptop computer,Personal digital assistant(PDA),Portable computer,Tablet PC,Wearable computerTheoretical/experimentalQuantum computerIBM Q System OneChemical computerDNA computingOptical computerSpintronics-based computerWetware/Organic computerOther hardware topicsPeripheraldevice (input/output)InputMouse,keyboard,joystick,image scanner,webcam,graphics tablet,microphoneOutputMonitor,printer,loudspeakerBothFloppy diskdrive,hard disk drive,optical discdrive,teleprinterComputer busesShort rangeRS-232,SCSI,PCI,USBLong range (computer networking)Ethernet,ATM,FDDIA general-purpose computer has four main components: thearithmetic logic unit(ALU), thecontrol unit, thememory, and theinput and output devices(collectively termed I/O). These parts are interconnected bybuses, often made of groups ofwires. Inside each of these parts are thousands to trillions of smallelectrical circuitswhich can be turned off or on by means of anelectronic switch. Each circuit represents abit(binary digit) of information so that when the circuit is on it represents a "1", and when off it represents a "0" (in positive logic representation). The circuits are arranged inlogic gatesso that one or more of the circuits may control the state of one or more of the other circuits.Input devicesWhen unprocessed data is sent to the computer with the help of input devices, the data is processed and sent to output devices. The input devices may be hand-operated or automated. The act of processing is mainly regulated by the CPU. Some examples of input devices are:Computer keyboardDigital cameraGraphics tabletImage scannerJoystickMicrophoneMouseOverlay keyboardReal-time clockTrackballTouchscreenLight penOutput devicesThe means through which computer gives output are known as output devices. Some examples of output devices are:Computer monitorPrinterPC speakerProjectorSound cardVideo cardControl unitMain articles:CPU designandControl unitDiagram showing how a particularMIPS architectureinstruction would be decoded by the control systemThecontrol unit(often called a control system or central controller) manages the computer's various components; it reads and interprets (decodes) the program instructions, transforming them into control signals that activate other parts of the computer.[d]Control systems in advanced computers may change the order of execution of some instructions to improve performance.A key component common to all CPUs is theprogram counter, a special memory cell (aregister) that keeps track of which location in memory the next instruction is to be read from.[e]The control system's function is as follows— this is a simplified description, and some of these steps may be performed concurrently or in a different order depending on the type of CPU:Read the code for the next instruction from the cell indicated by the program counter.Decode the numerical code for the instruction into a set of commands or signals for each of the other systems.Increment the program counter so it points to the next instruction.Read whatever data the instruction requires from cells in memory (or perhaps from an input device). The location of this required data is typically stored within the instruction code.Provide the necessary data to an ALU or register.If the instruction requires an ALU or specialized hardware to complete, instruct the hardware to perform the requested operation.Write the result from the ALU back to a memory location or to a register or perhaps an output device.Jump back to step (1).Since the program counter is (conceptually) just another set of memory cells, it can be changed by calculations done in the ALU. Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program. Instructions that modify the program counter are often known as "jumps" and allow for loops (instructions that are repeated by the computer) and often conditional instruction execution (both examples ofcontrol flow).The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program, and indeed, in some more complex CPU designs, there is another yet smaller computer called amicrosequencer, which runs amicrocodeprogram that causes all of these events to happen.Central processing unit (CPU)Main articles:Central processing unitandMicroprocessorThe control unit, ALU, and registers are collectively known as acentral processing unit(CPU). Early CPUs were composed of many separate components. Since the 1970s, CPUs have typically been constructed on a singleMOS integrated circuitchip called amicroprocessor.Arithmetic logic unit (ALU)Main article:Arithmetic logic unitThe ALU is capable of performing two classes of operations: arithmetic and logic.[111]The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction, or might include multiplication, division,trigonometryfunctions such as sine, cosine, etc., andsquare roots. Some can operate only on whole numbers (integers) while others usefloating pointto representreal numbers, albeit with limited precision. However, any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform. Therefore, any computer can be programmed to perform any arithmetic operation—although it will take more time to do so if its ALU does not directly support the operation. An ALU may also compare numbers and returnBoolean truth values(true or false) depending on whether one is equal to, greater than or less than the other ("is 64 greater than 65?"). Logic operations involveBoolean logic:AND,OR,XOR, andNOT. These can be useful for creating complicatedconditional statementsand processingBoolean logic.Superscalarcomputers may contain multiple ALUs, allowing them to process several instructions simultaneously.[112]Graphics processorsand computers withSIMDandMIMDfeatures often contain ALUs that can perform arithmetic onvectorsandmatrices.MemoryMain articles:Computer memoryandComputer data storageMagnetic-core memory(usingmagnetic cores) was thecomputer memoryof choice in the 1960s, until it was replaced bysemiconductor memory(usingMOSmemory cells).A computer's memory can be viewed as a list of cells into which numbers can be placed or read. Each cell has a numbered "address" and can store a single number. The computer can be instructed to "put the number 123 into the cell numbered 1357" or to "add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595." The information stored in memory may represent practically anything. Letters, numbers, even computer instructions can be placed into memory with equal ease. Since the CPU does not differentiate between different types of information, it is the software's responsibility to give significance to what the memory sees as nothing but a series of numbers.In almost all modern computers, eachmemory cellis set up to storebinary numbersin groups of eight bits (called abyte). Each byte is able to represent 256 different numbers (28= 256); either from 0 to 255 or −128 to +127. To store larger numbers, several consecutive bytes may be used (typically, two, four or eight). When negative numbers are required, they are usually stored intwo's complementnotation. Other arrangements are possible, but are usually not seen outside of specialized applications or historical contexts. A computer can store any kind of information in memory if it can be represented numerically. Modern computers have billions or even trillions of bytes of memory.The CPU contains a special set of memory cells calledregistersthat can be read and written to much more rapidly than the main memory area. There are typically between two and one hundred registers depending on the type of CPU. Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed. As data is constantly being worked on, reducing the need to access main memory (which is often slow compared to the ALU and control units) greatly increases the computer's speed.Computer main memory comes in two principal varieties:random-access memoryor RAMread-only memoryor ROMRAM can be read and written to anytime the CPU commands it, but ROM is preloaded with data and software that never changes, therefore the CPU can only read from it. ROM is typically used to store the computer's initial start-up instructions. In general, the contents of RAM are erased when the power to the computer is turned off, but ROM retains its data indefinitely. In a PC, the ROM contains a specialized program called theBIOSthat orchestrates loading the computer'soperating systemfrom the hard disk drive into RAM whenever the computer is turned on or reset. Inembedded computers, which frequently do not have disk drives, all of the required software may be stored in ROM. Software stored in ROM is often calledfirmware, because it is notionally more like hardware than software.Flash memoryblurs the distinction between ROM and RAM, as it retains its data when turned off but is also rewritable. It is typically much slower than conventional ROM and RAM however, so its use is restricted to applications where high speed is unnecessary.[f]In more sophisticated computers there may be one or more RAMcache memories, which are slower than registers but faster than main memory. Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically, often without the need for any intervention on the programmer's part.Input/output (I/O)Main article:Input/outputHard disk drivesare common storage devices used with computers.I/O is the means by which a computer exchanges information with the outside world.[114]Devices that provide input or output to the computer are calledperipherals.[115]On a typical personal computer, peripherals include input devices like the keyboard andmouse, and output devices such as thedisplayandprinter.Hard disk drives,floppy diskdrives andoptical disc drivesserve as both input and output devices.Computer networkingis another form of I/O.
I/O devices are often complex computers in their own right, with their own CPU and memory. Agraphics processing unitmight contain fifty or more tiny computers that perform the calculations necessary to display3D graphics.[citation needed]Moderndesktop computerscontain many smaller computers that assist the main CPU in performing I/O. A 2016-era flat screen display contains its own computer circuitry.MultitaskingMain article:Computer multitaskingWhile a computer may be viewed as running one gigantic program stored in its main memory, in some systems it is necessary to give the appearance of running several programs simultaneously. This is achieved by multitasking i.e. having the computer switch rapidly between running each program in turn.[116]One means by which this is done is with a special signal called aninterrupt, which can periodically cause the computer to stop executing instructions where it was and do something else instead. By remembering where it was executing prior to the interrupt, the computer can return to that task later. If several programs are running "at the same time". then the interrupt generator might be causing several hundred interrupts per second, causing a program switch each time. Since modern computers typically execute instructions several orders of magnitude faster than human perception, it may appear that many programs are running at the same time even though only one is ever executing in any given instant. This method of multitasking is sometimes termed "time-sharing" since each program is allocated a "slice" of time in turn.[117]Before the era of inexpensive computers, the principal use for multitasking was to allow many people to share the same computer. Seemingly, multitasking would cause a computer that is switching between several programs to run more slowly, in direct proportion to the number of programs it is running, but most programs spend much of their time waiting for slow input/output devices to complete their tasks. If a program is waiting for the user to click on the mouse or press a key on the keyboard, then it will not take a "time slice" until theeventit is waiting for has occurred. This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss.MultiprocessingMain article:MultiprocessingCraydesigned many supercomputers that used multiprocessing heavily.Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration, a technique once employed in only large and powerful machines such assupercomputers,mainframe computersandservers. Multiprocessor andmulti-core(multiple CPUs on a single integrated circuit) personal and laptop computers are now widely available, and are being increasingly used in lower-end markets as a result.Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored-program architecture and from general-purpose computers.[g]They often feature thousands of CPUs, customized high-speed interconnects, and specialized computing hardware. Such designs tend to be useful for only specialized tasks due to the large scale of program organization required to use most of the available resources at once. Supercomputers usually see usage in large-scalesimulation,graphics rendering, andcryptographyapplications, as well as with other so-called "embarrassingly parallel" tasks.SoftwareMain article:SoftwareSoftwarerefers to parts of the computer which do not have a material form, such as programs, data, protocols, etc. Software is that part of a computer system that consists of encoded information or computer instructions, in contrast to the physicalhardwarefrom which the system is built. Computer software includes computer programs,librariesand related non-executabledata, such asonline documentationordigital media. It is often divided intosystem softwareandapplication software. Computer hardware and software require each other and neither can be realistically used on its own. When software is stored in hardware that cannot easily be modified, such as withBIOSROMin anIBM PC compatiblecomputer, it is sometimes called "firmware".Operating system/System SoftwareUnixandBSDUNIX System V,IBM AIX,HP-UX,Solaris(SunOS),IRIX,List of BSD operating systemsLinuxList of Linux distributions,Comparison of Linux distributionsMicrosoft WindowsWindows 95,Windows 98,Windows NT,Windows 2000,Windows ME,Windows XP,Windows Vista,Windows 7,Windows 8,Windows 8.1,Windows 10,Windows 11DOS86-DOS(QDOS),IBM PC DOS,MS-DOS,DR-DOS,FreeDOSMacintosh operating systemsClassic Mac OS,macOS(previously OS X and Mac OS X)Embeddedandreal-timeList of embedded operating systemsExperimentalAmoeba,Oberon–AOS, Bluebottle, A2,Plan 9 from Bell LabsLibraryMultimediaDirectX,OpenGL,OpenAL,Vulkan (API)Programming libraryC standard library,Standard Template LibraryDataProtocolTCP/IP,Kermit,FTP,HTTP,SMTPFile formatHTML,XML,JPEG,MPEG,PNGUser interfaceGraphical user interface(WIMP)Microsoft Windows,GNOME,KDE,QNXPhoton,CDE,GEM,AquaText-based user interfaceCommand-line interface,Text user interfaceApplicationSoftwareOffice suiteWord processing,Desktop publishing,Presentation program,Database management system, Scheduling & Time management,Spreadsheet,Accounting softwareInternet AccessBrowser,Email client,Web server,Mail transfer agent,Instant messagingDesign and manufacturingComputer-aided design,Computer-aided manufacturing, Plant management, Robotic manufacturing, Supply chain managementGraphicsRaster graphics editor,Vector graphics editor,3D modeler,Animation editor,3D computer graphics,Video editing,Image processingAudioDigital audio editor,Audio playback,Mixing,Audio synthesis,Computer musicSoftware engineeringCompiler,Assembler,Interpreter,Debugger,Text editor,Integrated development environment,Software performance analysis,Revision control,Software configuration managementEducationalEdutainment,Educational game,Serious game,Flight simulatorGamesStrategy,Arcade,Puzzle,Simulation,First-person shooter,Platform,Massively multiplayer,Interactive fictionMiscArtificial intelligence,Antivirus software,Malware scanner,Installer/Package management systems,File managerLanguagesThere are thousands of different programming languages—some intended for general purpose, others useful for only highly specialized applications.Programming languagesLists of programming languagesTimeline of programming languages,List of programming languages by category,Generational list of programming languages,List of programming languages,Non-English-based programming languagesCommonly usedassembly languagesARM,MIPS,x86Commonly usedhigh-level programming languagesAda,BASIC,C,C++,C#,COBOL,Fortran,PL/I,REXX,Java,Lisp,Pascal,Object PascalCommonly usedscripting languagesBourne script,JavaScript,Python,Ruby,PHP,PerlProgramsThe defining feature of modern computers which distinguishes them from all other machines is that they can beprogrammed. That is to say that some type ofinstructions(theprogram) can be given to the computer, and it will process them. Modern computers based on thevon Neumann architectureoften have machine code in the form of animperative programming language. In practical terms, a computer program may be just a few instructions or extend to many millions of instructions, as do the programs forword processorsandweb browsersfor example. A typical modern computer can execute billions of instructions per second (gigaflops) and rarely makes a mistake over many years of operation. Large computer programs consisting of several million instructions may take teams ofprogrammersyears to write, and due to the complexity of the task almost certainly contain errors.Stored program architectureMain articles:Computer programandComputer programmingReplica of theManchester Baby, the world's first electronicstored-program computer, at theMuseum of Science and Industryin Manchester, EnglandThis section applies to most commonRAM machine–based computers.In most cases, computer instructions are simple: add one number to another, move some data from one location to another, send a message to some external device, etc. These instructions are read from the computer'smemoryand are generally carried out (executed) in the order they were given. However, there are usually specialized instructions to tell the computer to jump ahead or backwards to some other place in the program and to carry on executing from there. These are called "jump" instructions (orbranches). Furthermore, jump instructions may be made to happenconditionallyso that different sequences of instructions may be used depending on the result of some previous calculation or some external event. Many computers directly supportsubroutinesby providing a type of jump that "remembers" the location it jumped from and another instruction to return to the instruction following that jump instruction.Program execution might be likened to reading a book. While a person will normally read each word and line in sequence, they may at times jump back to an earlier place in the text or skip sections that are not of interest. Similarly, a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met. This is called theflow of controlwithin the program and it is what allows the computer to perform tasks repeatedly without human intervention.Comparatively, a person using a pocketcalculatorcan perform a basic arithmetic operation such as adding two numbers with just a few button presses. But to add together all of the numbers from 1 to 1,000 would take thousands of button presses and a lot of time, with a near certainty of making a mistake. On the other hand, a computer may be programmed to do this with just a few simple instructions. The following example is written in theMIPS assembly language:begin:addi$8,$0,0# initialize sum to 0addi$9,$0,1# set first number to add = 1loop:slti$10,$9,1000# check if the number is less than 1000beq$10,$0,finish# if odd number is greater than n then exitadd$8,$8,$9# update sumaddi$9,$9,1# get next numberjloop# repeat the summing processfinish:add$2,$8,$0# put sum in output registerOnce told to run this program, the computer will perform the repetitive addition task without further human intervention. It will almost never make a mistake and a modern PC can complete the task in a fraction of a second.Machine codeIn most computers, individual instructions are stored asmachine codewith each instruction being given a unique number (its operation code oropcodefor short). The command to add two numbers together would have one opcode; the command to multiply them would have a different opcode, and so on. The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code. Since the computer's memory is able to store numbers, it can also store the instruction codes. This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data. The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program, architecture.[119][120]In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on. This is called theHarvard architectureafter theHarvard Mark Icomputer. Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as inCPU caches.While it is possible to write computer programs as long lists of numbers (machine language) and while this technique was used with many early computers,[h]it is extremely tedious and potentially error-prone to do so in practice, especially for complicated programs. Instead, each basic instruction can be given a short name that is indicative of its function and easy to remember – amnemonicsuch as ADD, SUB, MULT or JUMP. These mnemonics are collectively known as a computer'sassembly language. Converting programs written in assembly language into something the computer can actually understand (machine language) is usually done by a computer program called an assembler.A 1970spunched cardcontaining one line from aFortranprogram. The card reads: "Z(1) = Y + W(1)" and is labeled "PROJ039" for identification purposes.Programming languageMain article:Programming languageProgramming languages provide various ways of specifying programs for computers to run. Unlikenatural languages, programming languages are designed to permit no ambiguity and to be concise. They are purely written languages and are often difficult to read aloud. They are generally either translated intomachine codeby acompileror anassemblerbefore being run, or translated directly at run time by aninterpreter. Sometimes programs are executed by a hybrid method of the two techniques.Low-level languagesMain article:Low-level programming languageMachine languages and the assembly languages that represent them (collectively termedlow-level programming languages) are generally unique to the particular architecture of a computer's central processing unit (CPU). For instance, anARM architectureCPU (such as may be found in asmartphoneor ahand-held videogame) cannot understand the machine language of anx86CPU that might be in aPC.[i]Historically a significant number of other cpu architectures were created and saw extensive use, notably including the MOS Technology 6502 and 6510 in addition to the Zilog Z80.High-level languagesMain article:High-level programming languageAlthough considerably easier than in machine language, writing long programs in assembly language is often difficult and is also error prone. Therefore, most practical programs are written in more abstracthigh-level programming languagesthat are able to express the needs of theprogrammermore conveniently (and thereby help reduce programmer error). High level languages are usually "compiled" into machine language (or sometimes into assembly language and then into machine language) using another computer program called acompiler.[j]High level languages are less related to the workings of the target computer than assembly language, and more related to the language and structure of the problem(s) to be solved by the final program. It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer. This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and variousvideo game consoles.Program designProgram design of small programs is relatively simple and involves the analysis of the problem, collection of inputs, using the programming constructs within languages, devising or using established procedures and algorithms, providing data for output devices and solutions to the problem as applicable.[121]As problems become larger and more complex, features such as subprograms, modules, formal documentation, and new paradigms such as object-oriented programming are encountered.[122]Large programs involving thousands of line of code and more require formal software methodologies.[123]The task of developing largesoftwaresystems presents a significant intellectual challenge.[124]Producing software with an acceptably high reliability within a predictable schedule and budget has historically been difficult;[125]the academic and professional discipline of software engineering concentrates specifically on this challenge.[126]BugsMain article:Software bugThe actual first computer bug, a moth found trapped on a relay of theHarvard Mark IIcomputerErrors in computer programs are called "bugs". They may be benign and not affect the usefulness of the program, or have only subtle effects. However, in some cases they may cause the program or the entire system to "hang", becoming unresponsive to input such asmouseclicks or keystrokes, to completely fail, or tocrash.[127]Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing anexploit, code designed to take advantage of a bug and disrupt a computer's proper execution. Bugs are usually not the fault of the computer. Since computers merely execute the instructions they are given, bugs are nearly always the result of programmer error or an oversight made in the program's design.[k]AdmiralGrace Hopper, an American computer scientist and developer of the firstcompiler, is credited for having first used the term "bugs" in computing after a dead moth was found shorting a relay in theHarvard Mark IIcomputer in September 1947.[128]Networking and the InternetMain articles:Computer networkingandInternetVisualization of a portion of therouteson the InternetComputers have been used to coordinate information between multiple locations since the 1950s. The U.S. military'sSAGEsystem was the first large-scale example of such a system, which led to a number of special-purpose commercial systems such asSabre.[129]In the 1970s, computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology. The effort was funded by ARPA (nowDARPA), and thecomputer networkthat resulted was called theARPANET.[130]The technologies that made the Arpanet possible spread and evolved.In time, the network spread beyond academic and military institutions and became known as the Internet. The emergence of networking involved a redefinition of the nature and boundaries of the computer. Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network, such as peripheral devices, stored information, and the like, as extensions of the resources of an individual computer. Initially these facilities were available primarily to people working in high-tech environments, but in the 1990s the spread of applications like e-mail and theWorld Wide Web, combined with the development of cheap, fast networking technologies likeEthernetandADSLsaw computer networking become almost ubiquitous. In fact, the number of computers that are networked is growing phenomenally. A very large proportion of personal computers regularly connect to the Internet to communicate and receive information. "Wireless" networking, often utilizing mobile phone networks, has meant networking is becoming increasingly ubiquitous even in mobile computing environments.Unconventional computersMain article:Human computerSee also:Harvard ComputersA computer does not need to beelectronic, nor even have aprocessor, norRAM, nor even ahard disk. While popular usage of the word "computer" is synonymous with a personal electronic computer,[l]a typical modern definition of a computer is: "A device that computes, especially a programmable [usually] electronic machine that performs high-speed mathematical or logical operations or that assembles, stores, correlates, or otherwise processes information."[131]According to this definition, any device thatprocesses informationqualifies as a computer.FutureThere is active research to make non-classical computers out of many promising new types of technology, such asoptical computers,DNA computers,neural computers, andquantum computers. Most computers are universal, and are able to calculate anycomputable function, and are limited only by their memory capacity and operating speed. However different designs of computers can give very different performance for particular problems; for example quantum computers can potentially break some modern encryption algorithms (byquantum factoring) very quickly.Computer architecture paradigmsThere are many types ofcomputer architectures:Quantum computervs.Chemical computerScalar processorvs.Vector processorNon-Uniform Memory Access(NUMA) computersRegister machinevs.Stack machineHarvard architecturevs.von Neumann architectureCellular architectureOf all theseabstract machines, a quantum computer holds the most promise for revolutionizing computing.[132]Logic gatesare a common abstraction which can apply to most of the abovedigitaloranalogparadigms. The ability to store and execute lists of instructions calledprogramsmakes computers extremely versatile, distinguishing them fromcalculators. TheChurch–Turing thesisis a mathematical statement of this versatility: any computer with aminimum capability (being Turing-complete)is, in principle, capable of performing the same tasks that any other computer can perform. Therefore, any type of computer (netbook,supercomputer,cellular automaton, etc.) is able to perform the same computational tasks, given enough time and storage capacity.Artificial intelligenceA computer will solve problems in exactly the way it is programmed to, without regard to efficiency, alternative solutions, possible shortcuts, or possible errors in the code. Computer programs that learn and adapt are part of the emerging field ofartificial intelligenceandmachine learning. Artificial intelligence based products generally fall into two major categories:rule-based systemsandpattern recognitionsystems. Rule-based systems attempt to represent the rules used by human experts and tend to be expensive to develop. Pattern-based systems use data about a problem to generate conclusions. Examples of pattern-based systems includevoice recognition, font recognition, translation and the emerging field of on-line marketing.Professions and organizationsAs the use of computers has spread throughout society, there are an increasing number of careers involving computers.Computer-related professionsHardware-relatedElectrical engineering,Electronic engineering,Computer engineering,Telecommunications engineering,Optical engineering,NanoengineeringSoftware-relatedComputer science,Computer engineering,Desktop publishing,Human–computer interaction, Information technology,Information systems,Computational science, Software engineering,Video game industry,Web designThe need for computers to work well together and to be able to exchange information has spawned the need for many standards organizations, clubs and societies of both a formal and informal nature.OrganizationsStandards groupsANSI,IEC,IEEE,IETF,ISO,W3CProfessional societiesACM,AIS,IET,IFIP,BCSFree/open source softwaregroupsFree Software Foundation,Mozilla Foundation,Apache Software FoundationSee alsoComputability theoryComputer securityGlossary of computer hardware termsHistory of computer scienceList of computer term etymologiesList of computer system manufacturersList of fictional computersList of films about computersList of pioneers in computer scienceOutline of computersPulse computationTOP500(list of most powerful computers)Unconventional computingNotes^According toSchmandt-Besserat 1981, these clay containers contained tokens, the total of which were the count of objects being transferred. The containers thus served as something of abill of ladingor an accounts book. In order to avoid breaking open the containers, first, clay impressions of the tokens were placed on the outside of the containers, for the count; the shapes of the impressions were abstracted into stylized marks; finally, the abstract marks were systematically used as numerals; these numerals were finally formalized as numbers.Eventually the marks on the outside of the containers were all that were needed to convey the count, and the clay containers evolved into clay tablets with marks for the count.Schmandt-Besserat 1999estimates it took 4000 years.^The Intel 4004 (1971) die was 12 mm2, composed of 2300 transistors; by comparison, the Pentium Pro was 306 mm2, composed of 5.5 million transistors.[102]^Most major 64-bitinstruction setarchitectures are extensions of earlier designs. All of the architectures listed in this table, except for Alpha, existed in 32-bit forms before their 64-bit incarnations were introduced.^The control unit's role in interpreting instructions has varied somewhat in the past. Although the control unit is solely responsible for instruction interpretation in most modern computers, this is not always the case. Some computers have instructions that are partially interpreted by the control unit with further interpretation performed by another device. For example,EDVAC, one of the earliest stored-program computers, used a central control unit that interpreted only four instructions. All of the arithmetic-related instructions were passed on to its arithmetic unit and further decoded there.^Instructions often occupy more than one memory address, therefore the program counter usually increases by the number of memory locations required to store one instruction.^Flash memory also may only be rewritten a limited number of times before wearing out, making it less useful for heavy random access usage.[113]^However, it is also very common to construct supercomputers out of many pieces of cheap commodity hardware; usually individual computers connected by networks. These so-calledcomputer clusterscan often provide supercomputer performance at a much lower cost than customized designs. While custom architectures are still used for most of the most powerful supercomputers, there has been a proliferation of cluster computers in recent years.[118]^Even some later computers were commonly programmed directly in machine code. Someminicomputerslike the DECPDP-8could be programmed directly from a panel of switches. However, this method was usually used only as part of thebootingprocess. Most modern computers boot entirely automatically by reading a boot program from somenon-volatile memory.^However, there is sometimes some form of machine language compatibility between different computers. Anx86-64compatible microprocessor like the AMDAthlon 64is able to run most of the same programs that anIntel Core 2microprocessor can, as well as programs designed for earlier microprocessors like the IntelPentiumsandIntel 80486. This contrasts with very early commercial computers, which were often one-of-a-kind and totally incompatible with other computers.^High level languages are also ofteninterpretedrather than compiled. Interpreted languages are translated into machine code on the fly, while running, by another program called aninterpreter.^It is not universally true that bugs are solely due to programmer oversight. Computer hardware may fail or may itself have a fundamental problem that produces unexpected results in certain situations. For instance, thePentium FDIV bugcaused someIntelmicroprocessors in the early 1990s to produce inaccurate results for certainfloating pointdivision operations. This was caused by a flaw in themicroprocessordesign and resulted in a partial recall of the affected devices.^According to theShorter Oxford English Dictionary(6th ed, 2007), the wordcomputerdates back to the mid 17th century, when it referred to "A person who makes calculations; specifically a person employed for this in an observatory etc."References^Evans 2018, p. 23.^Smith 2013, p. 6.^"computer (n.)".Online Etymology Dictionary.Archivedfrom the original on 16 November 2016. Retrieved19 August2021.^Robson, Eleanor(2008).Mathematics in Ancient Iraq. Princeton University Press. p. 5.ISBN978-0-691-09182-2.: calculi were in use in Iraq for primitive accounting systems as early as 3200–3000 BCE, with commodity-specific counting representation systems. Balanced accounting was in use by 3000–2350 BCE, and asexagesimal number systemwas in use 2350–2000 BCE.^Flegg, Graham. (1989).Numbers through the ages. Houndmills, Basingstoke, Hampshire: Macmillan Education.ISBN0-333-49130-0.OCLC24660570.^The Antikythera Mechanism Research ProjectArchived28 April 2008 at theWayback Machine, The Antikythera Mechanism Research Project. Retrieved 1 July 2007.^Marchant, Jo (1 November 2006)."In search of lost time".Nature.444(7119): 534–538.Bibcode:2006Natur.444..534M.doi:10.1038/444534a.ISSN0028-0836.PMID17136067.S2CID4305761.^G. Wiet, V. Elisseeff, P. Wolff, J. Naudu (1975).History of Mankind, Vol 3: The Great medieval Civilisations, p. 649. George Allen & Unwin Ltd,UNESCO.^Fuat Sezgin "Catalogue of the Exhibition of the Institute for the History of Arabic-Islamic Science (at the Johann Wolfgang Goethe University", Frankfurt, Germany) Frankfurt Book Fair 2004, pp. 35 & 38.^Charette, François (2006)."Archaeology: High tech from Ancient Greece".Nature.444(7119): 551–552.Bibcode:2006Natur.444..551C.doi:10.1038/444551a.PMID17136077.S2CID33513516.^Bedini, Silvio A.; Maddison, Francis R. (1966). "Mechanical Universe: The Astrarium of Giovanni de' Dondi".Transactions of the American Philosophical Society.56(5): 1–69.doi:10.2307/1006002.JSTOR1006002.^Price, Derek de S.(1984). "A History of Calculating Machines".IEEE Micro.4(1): 22–52.doi:10.1109/MM.1984.291305.^Őren, Tuncer(2001)."Advances in Computer and Information Sciences: From Abacus to Holonic Agents"(PDF).Turk J Elec Engin.9(1): 63–70.Archived(PDF)from the original on 15 September 2009. Retrieved21 April2016.^Donald Routledge Hill(1985). "Al-Biruni's mechanical calendar",Annals of Science42, pp. 139–163.^"The Writer Automaton, Switzerland". chonday.com. 11 July 2013. Archived fromthe originalon 20 February 2015. Retrieved28 January2015.^abRay Girvan,"The revealed grace of the mechanism: computing after Babbage"Archived3 November 2012 at theWayback Machine,Scientific Computing World, May/June 2003^Torres, Leonardo(10 October 1895)."Memória sobre las Máquinas Algébricas"(PDF).Revista de Obras Públicas(in Spanish) (28): 217–222.^Leonardo Torres.Memoria sobre las máquinas algébricas: con un informe de la Real academia de ciencias exactas, fisicas y naturales, Misericordia, 1895.^Thomas, Federico (1 August 2008)."A short account on Leonardo Torres' endless spindle".Mechanism and Machine Theory.43(8).IFToMM: 1055–1063.doi:10.1016/j.mechmachtheory.2007.07.003.hdl:10261/30460.ISSN0094-114X.^Gomez-Jauregui, Valentin; Gutierrez-Garcia, Andres; González-Redondo, Francisco A.; Iglesias, Miguel; Manchado, Cristina; Otero, Cesar (1 June 2022)."Torres Quevedo's mechanical calculator for second-degree equations with complex coefficients".Mechanism and Machine Theory.172(8).IFToMM: 104830.doi:10.1016/j.mechmachtheory.2022.104830.hdl:10902/24391.S2CID247503677.^Torres Quevedo, Leonardo (1901)."Machines á calculer".Mémoires Présentés par Divers Savants à l'Académie des Scienes de l'Institut de France(in French).XXXII. Impr. nationale (París).^Halacy, Daniel Stephen (1970).Charles Babbage, Father of the Computer. Crowell-Collier Press.ISBN978-0-02-741370-0.^O'Connor, John J.;Robertson, Edmund F.(1998)."Charles Babbage".MacTutor History of Mathematics archive. School of Mathematics and Statistics, University of St Andrews, Scotland. Archived fromthe originalon 16 June 2006. Retrieved14 June2006.^"Babbage".Online stuff. Science Museum. 19 January 2007. Archived fromthe originalon 7 August 2012. Retrieved1 August2012.^Graham-Cumming, John (23 December 2010)."Let's build Babbage's ultimate mechanical computer".opinion. New Scientist.Archivedfrom the original on 5 August 2012. Retrieved1 August2012.^L. Torres Quevedo.Ensayos sobre Automática – Su definicion. Extension teórica de sus aplicaciones,Revista de la Academia de Ciencias Exacta, Revista 12, pp. 391–418, 1914.^Torres Quevedo, Leonardo.Automática: Complemento de la Teoría de las Máquinas, (pdf), pp. 575-583, Revista de Obras Públicas, 19 November 1914.^Ronald T. Kneusel.Numbers and Computers,Springer, pp. 84-85, 2017.ISBN978-3-319-50508-4^Randell 1982, p. 6, 11–13.^B. Randell.Electromechanical Calculating Machine,The Origins of Digital Computers, pp.109-120, 1982.^Bromley 1990.^Cristopher Moore. Stephan Mertens.The Nature of Computation,OUP Oxford, p. 291, 2011.ISBN978-0-199-23321-2^Randell, Brian.Digital Computers, History of Origins, (pdf), p. 545, Digital Computers: Origins, Encyclopedia of Computer Science, January 2003.^abcdThe Modern History of Computing. Stanford Encyclopedia of Philosophy. 2017.Archivedfrom the original on 12 July 2010. Retrieved7 January2014.^Zuse, Horst."Part 4: Konrad Zuse's Z1 and Z3 Computers".The Life and Work of Konrad Zuse. EPE Online. Archived fromthe originalon 1 June 2008. Retrieved17 June2008.^Bellis, Mary (15 May 2019) [First published 2006 at inventors.about.com/library/weekly/aa050298.htm]."Biography of Konrad Zuse, Inventor and Programmer of Early Computers".thoughtco.com. Dotdash Meredith.Archivedfrom the original on 13 December 2020. Retrieved3 February2021.Konrad Zuse earned the semiofficial title of 'inventor of the modern computer'[who?]^"Who is the Father of the Computer?".ComputerHope.^Zuse, Konrad(2010) [1984].The Computer – My LifeTranslated by McKenna, Patricia and Ross, J. Andrew from:Der Computer, mein Lebenswerk (1984). Berlin/Heidelberg: Springer-Verlag.ISBN978-3-642-08151-4.^Salz Trautman, Peggy (20 April 1994)."A Computer Pioneer Rediscovered, 50 Years On".The New York Times. Archived fromthe originalon 4 November 2016. Retrieved15 February2017.^Zuse, Konrad(1993).Der Computer. Mein Lebenswerk(in German) (3rd ed.). Berlin: Springer-Verlag. p. 55.ISBN978-3-540-56292-4.^"Crash! The Story of IT: Zuse". Archived fromthe originalon 18 September 2016. Retrieved1 June2016.^Rojas, R.(1998). "How to make Zuse's Z3 a universal computer".IEEE Annals of the History of Computing.20(3): 51–54.doi:10.1109/85.707574.S2CID14606587.^Rojas, Raúl."How to Make Zuse's Z3 a Universal Computer"(PDF).fu-berlin.de.Archived(PDF)from the original on 9 August 2017. Retrieved28 September2015.^abO'Regan, Gerard (2010).A Brief History of Computing. Springer Nature. p. 65.ISBN978-3-030-66599-9.^"notice".Des Moines Register. 15 January 1941.^Arthur W. Burks (1989).The First Electronic Computer. University of Michigan Press.ISBN0-472-08104-7. Retrieved1 June2019.^abcdCopeland, Jack (2006).Colossus: The Secrets of Bletchley Park's Codebreaking Computers. Oxford:Oxford University Press. pp. 101–115.ISBN978-0-19-284055-4.^Miller, Joe (10 November 2014)."The woman who cracked Enigma cyphers".BBC News.Archivedfrom the original on 10 November 2014. Retrieved14 October2018.^Bearne, Suzanne (24 July 2018)."Meet the female codebreakers of Bletchley Park".The Guardian.Archivedfrom the original on 7 February 2019. Retrieved14 October2018.^"Bletchley's code-cracking Colossus".BBC.Archivedfrom the original on 4 February 2010. Retrieved24 November2021.^"Colossus – The Rebuild Story".The National Museum of Computing. Archived fromthe originalon 18 April 2015. Retrieved7 January2014.^Randell, Brian; Fensom, Harry; Milne, Frank A. (15 March 1995)."Obituary: Allen Coombs".The Independent.Archivedfrom the original on 3 February 2012. Retrieved18 October2012.^Fensom, Jim (8 November 2010)."Harry Fensom obituary".The Guardian.Archivedfrom the original on 17 September 2013. Retrieved17 October2012.^John Presper Eckert Jr. and John W. Mauchly, Electronic Numerical Integrator and Computer, United States Patent Office, US Patent 3,120,606, filed 26 June 1947, issued 4 February 1964, and invalidated 19 October 1973 after court ruling onHoneywell v. Sperry Rand.^Evans 2018, p. 39.^Light 1999, p. 459.^"Generations of Computer". techiwarehouse.com. Archived fromthe originalon 2 July 2015. Retrieved7 January2014.^Turing, A. M. (1937). "On Computable Numbers, with an Application to the Entscheidungsproblem".Proceedings of the London Mathematical Society. 2.42(1): 230–265.doi:10.1112/plms/s2-42.1.230.S2CID73712.^Copeland, Jack(2004).The Essential Turing. p. 22:von Neumann ... firmly emphasized to me, and to others I am sure, that the fundamental conception is owing to Turing—insofar as not anticipated by Babbage, Lovelace and others.Letter byStanley FrankeltoBrian Randell, 1972.^Enticknap, Nicholas (Summer 1998)."Computing's Golden Jubilee".Resurrection(20).ISSN0958-7403. Archived fromthe originalon 9 January 2012. Retrieved19 April2008.^"Early computers at Manchester University".Resurrection.1(4). Summer 1992.ISSN0958-7403. Archived fromthe originalon 28 August 2017. Retrieved7 July2010.^"Early Electronic Computers (1946–51)". University of Manchester. Archived fromthe originalon 5 January 2009. Retrieved16 November2008.^Napper, R. B. E."Introduction to the Mark 1". The University of Manchester. Archived fromthe originalon 26 October 2008. Retrieved4 November2008.^"Our Computer Heritage Pilot Study: Deliveries of Ferranti Mark I and Mark I Star computers".Computer Conservation Society. Archived fromthe originalon 11 December 2016. Retrieved9 January2010.^Lavington, Simon."A brief history of British computers: the first 25 years (1948–1973)".British Computer Society. Archived fromthe originalon 5 July 2010. Retrieved10 January2010.^Lee, Thomas H. (2003).The Design of CMOS Radio-Frequency Integrated Circuits(PDF).Cambridge University Press.ISBN978-1-139-64377-1. Archived fromthe original(PDF)on 9 December 2019. Retrieved31 July2019.^Puers, Robert; Baldi, Livio; Voorde, Marcel Van de; Nooten, Sebastiaan E. van (2017).Nanoelectronics: Materials, Devices, Applications, 2 Volumes.John Wiley & Sons. p. 14.ISBN978-3-527-34053-8. Retrieved31 July2019.^abMoskowitz, Sanford L. (2016).Advanced Materials Innovation: Managing Global Technology in the 21st century.John Wiley & Sons. pp. 165–167.ISBN978-0-470-50892-3. Retrieved28 August2019.^Lavington 1998, pp. 34–35.^abCooke-Yarborough, E. H. (June 1998)."Some early transistor applications in the UK".Engineering Science & Education Journal.7(3): 100–106.doi:10.1049/esej:19980301.ISSN0963-7346. Archived fromthe originalon 8 November 2020. Retrieved7 June2009.(subscription required)^Cooke-Yarborough, E.H. (1957).Introduction to Transistor Circuits. Edinburgh: Oliver and Boyd. p. 139.^"1960: Metal Oxide Semiconductor (MOS) Transistor Demonstrated".The Silicon Engine: A Timeline of Semiconductors in Computers.Computer History Museum.Archivedfrom the original on 27 October 2019. Retrieved31 August2019.^Motoyoshi, M. (2009). "Through-Silicon Via (TSV)".Proceedings of the IEEE.97(1): 43–48.doi:10.1109/JPROC.2008.2007462.ISSN0018-9219.S2CID29105721.^Young, Ian (12 December 2018)."Transistors Keep Moore's Law Alive".EETimes.Archivedfrom the original on 24 September 2019. Retrieved18 July2019.^Laws, David (4 December 2013)."Who Invented the Transistor?".Computer History Museum.Archivedfrom the original on 13 December 2013. Retrieved20 July2019.^abHittinger, William C. (1973). "Metal-Oxide-Semiconductor Technology".Scientific American.229(2): 48–59.Bibcode:1973SciAm.229b..48H.doi:10.1038/scientificamerican0873-48.ISSN0036-8733.JSTOR24923169.^Malmstadt, Howard V.; Enke, Christie G.; Crouch, Stanley R. (1994).Making the Right Connections: Microcomputers and Electronic Instrumentation.American Chemical Society. p. 389.ISBN978-0-8412-2861-0. Retrieved28 August2019.The relative simplicity and low power requirements of MOSFETs have fostered today's microcomputer revolution.^Fossum, Jerry G.; Trivedi, Vishal P. (2013).Fundamentals of Ultra-Thin-Body MOSFETs and FinFETs.Cambridge University Press. p. vii.ISBN978-1-107-43449-3. Retrieved28 August2019.^Marriott, J.W. (10 June 2019)."Remarks by Director Iancu at the 2019 International Intellectual Property Conference".United States Patent and Trademark Office. Archived fromthe originalon 17 December 2019. Retrieved20 July2019.^"Dawon Kahng".National Inventors Hall of Fame.Archivedfrom the original on 27 October 2019. Retrieved27 June2019.^"Martin Atalla in Inventors Hall of Fame, 2009".Archivedfrom the original on 19 September 2019. Retrieved21 June2013.^Triumph of the MOS Transistor.Computer History Museum. 6 August 2010. Archived fromthe originalon 18 August 2021. Retrieved21 July2019– via YouTube.^"The Hapless Tale of Geoffrey Dummer"Archived11 May 2013 at theWayback Machine, (n.d.), (HTML),Electronic Product News, accessed 8 July 2008.^Kilby, Jack(2000)."Nobel lecture"(PDF). Stockholm: Nobel Foundation.Archived(PDF)from the original on 29 May 2008. Retrieved15 May2008.^The Chip that Jack BuiltArchived1 May 2015 at theWayback Machine, (c. 2008), (HTML), Texas Instruments, Retrieved 29 May 2008.^Jack S. Kilby, Miniaturized Electronic Circuits, United States Patent Office, US Patent 3,138,743, filed 6 February 1959, issued 23 June 1964.^Winston, Brian (1998).Media Technology and Society: A History: From the Telegraph to the Internet. Routledge. p. 221.ISBN978-0-415-14230-4. Retrieved6 June2020.^Saxena, Arjun N. (2009).Invention of Integrated Circuits: Untold Important Facts.World Scientific. p. 140.ISBN978-981-281-445-6. Retrieved28 August2019.^ab"Integrated circuits".NASA.Archivedfrom the original on 21 July 2019. Retrieved13 August2019.^Robert Noyce's Unitary circuit,US patent 2981877, "Semiconductor device-and-lead structure", issued 1961-04-25,  assigned toFairchild Semiconductor Corporation.^"1959: Practical Monolithic Integrated Circuit Concept Patented".Computer History Museum.Archivedfrom the original on 24 October 2019. Retrieved13 August2019.^Lojek, Bo (2007).History of Semiconductor Engineering.Springer Science & Business Media. p.120.ISBN978-3-540-34258-8.^Bassett, Ross Knox (2007).To the Digital Age: Research Labs, Start-up Companies, and the Rise of MOS Technology. Johns Hopkins University Press. p. 46.ISBN978-0-8018-8639-3. Retrieved31 July2019.^Huff, Howard R.; Tsuya, H.; Gösele, U. (1998).Silicon Materials Science and Technology: Proceedings of the Eighth International Symposium on Silicon Materials Science and Technology.Electrochemical Society. pp. 181–182.ISBN978-1-56677-193-1. Retrieved28 August2019.^abKuo, Yue (1 January 2013)."Thin Film Transistor Technology—Past, Present, and Future"(PDF).The Electrochemical Society Interface.22(1): 55–61.Bibcode:2013ECSIn..22a..55K.doi:10.1149/2.F06131if.ISSN1064-8208.Archived(PDF)from the original on 29 August 2017. Retrieved31 July2019.^ab"Tortoise of Transistors Wins the Race – CHM Revolution".Computer History Museum.Archivedfrom the original on 10 March 2020. Retrieved22 July2019.^"1964 – First Commercial MOS IC Introduced".Computer History Museum.Archivedfrom the original on 22 December 2015. Retrieved31 July2019.^"1968: Silicon Gate Technology Developed for ICs".Computer History Museum.Archivedfrom the original on 29 July 2020. Retrieved22 July2019.^ab"1971: Microprocessor Integrates CPU Function onto a Single Chip".Computer History Museum.Archivedfrom the original on 12 August 2021. Retrieved22 July2019.^Colinge, Jean-Pierre; Greer, James C. (2016).Nanowire Transistors: Physics of Devices and Materials in One Dimension.Cambridge University Press. p. 2.ISBN978-1-107-05240-6. Retrieved31 July2019.^"Intel's First Microprocessor—the Intel 4004". Intel Corp. November 1971. Archived fromthe originalon 13 May 2008. Retrieved17 May2008.^Patterson, David; Hennessy, John (1998).Computer Organization and Design. San Francisco:Morgan Kaufmann. pp.27–39.ISBN978-1-55860-428-5.^Federico Faggin,The Making of the First Microprocessor,IEEE Solid-State Circuits Magazine, Winter 2009,IEEE Xplore^ab"7 dazzling smartphone improvements with Qualcomm's Snapdragon 835 chip". 3 January 2017.Archivedfrom the original on 30 September 2019. Retrieved5 April2019.^Chartier, David (23 December 2008)."Global notebook shipments finally overtake desktops".Ars Technica.Archivedfrom the original on 4 July 2017. Retrieved14 June2017.^IDC (25 July 2013)."Growth Accelerates in the Worldwide Mobile Phone and Smartphone Markets in the Second Quarter, According to IDC". Archived fromthe originalon 26 June 2014.^"Google Books Ngram Viewer".books.google.com.^"Google Books Ngram Viewer".books.google.com.^"Google Books Ngram Viewer".books.google.com.^"Google Books Ngram Viewer".books.google.com.^David J. Eck (2000).The Most Complex Machine: A Survey of Computers and Computing. A K Peters, Ltd. p. 54.ISBN978-1-56881-128-4.^Erricos John Kontoghiorghes (2006).Handbook of Parallel Computing and Statistics. CRC Press. p. 45.ISBN978-0-8247-4067-2.^Verma & Mielke 1988.^Donald Eadie (1968).Introduction to the Basic Computer. Prentice-Hall. p. 12.^Arpad Barna; Dan I. Porat (1976).Introduction to Microcomputers and the Microprocessors. Wiley. p.85.ISBN978-0-471-05051-3.^Jerry Peek; Grace Todino; John Strang (2002).Learning the UNIX Operating System: A Concise Guide for the New User. O'Reilly. p.130.ISBN978-0-596-00261-9.^Gillian M. Davis (2002).Noise Reduction in Speech Applications. CRC Press. p. 111.ISBN978-0-8493-0949-6.^TOP500 2006, p.[page needed].^Cragon, Harvey (2000).Computer Architecture and Implementation. Cambridge University Press. p. 5.ISBN978-0-521-65168-4.Archivedfrom the original on 30 July 2022. Retrieved10 June2022.^Xu, Zhiwei; Zhang, Jialin (2021).Computational Thinking: A Perspective on Computer Science. Singapore: Springer. p. 60.ISBN978-981-16-3848-0.Archivedfrom the original on 30 July 2022. Retrieved10 June2022.It is called the stored program architecture or stored program model, also known as the von Neumann architecture. We will use these terms interchangeably.^Ronald J. Leach (27 January 2016).Introduction to Software Engineering. CRC Press. p. 11.ISBN978-1-4987-0528-8. Retrieved26 November2022.^Hong Zhu (22 March 2005).Software Design Methodology: From Principles to Architectural Styles. Elsevier. pp. 47–72.ISBN978-0-08-045496-2. Retrieved26 November2022.^Ronald J. Leach (27 January 2016).Introduction to Software Engineering. CRC Press. p. 56.ISBN978-1-4987-0528-8. Retrieved26 November2022.^John Knight (12 January 2012).Fundamentals of Dependable Computing for Software Engineers. CRC Press. p. 186.ISBN978-1-4665-1821-6. Retrieved26 November2022.^Frederick P. Brooks (Jr.) (1975).The Mythical Man-month: Essays on Software Engineering. Addison-Wesley Publishing Company.ISBN978-0-201-00650-6. Retrieved26 November2022.^Ian Sommerville (2007).Software Engineering. Pearson Education. pp. 4–17.ISBN978-0-321-31379-9. Retrieved26 November2022.^"Why do computers crash?".Scientific American.Archivedfrom the original on 1 May 2018. Retrieved3 March2022.^Taylor, Alexander L. III (16 April 1984)."The Wizard Inside the Machine".Time. Archived fromthe originalon 16 March 2007. Retrieved17 February2007.^Agatha C. Hughes (2000).Systems, Experts, and Computers.MIT Press. p. 161.ISBN978-0-262-08285-3.The experience of SAGE helped make possible the first truly large-scale commercial real-time network: the SABRE computerized airline reservations system^Leiner, Barry M.; Cerf, Vinton G.; Clark, David D.; Kahn, Robert E.; Kleinrock, Leonard; Lynch, Daniel C.; Postel, Jon; Roberts, Larry G.; Wolf, Stephen (1999). "A Brief History of the Internet".arXiv:cs/9901011.^"Definition of computer". Thefreedictionary.com.Archivedfrom the original on 26 December 2009. Retrieved29 January2012.^II, Joseph D. Dumas (2005).Computer Architecture: Fundamentals and Principles of Computer Design. CRC Press. p. 340.ISBN978-0-8493-2749-0. Retrieved9 November2020.SourcesBowden, B. V. (1953).Faster than thought. New York, Toronto, London: Pitman publishing corporation.Berkeley, Edmund (1949).Giant Brains, or Machines That Think. John Wiley & Sons.Bromley, Allan G. (1990). "Difference and Analytical Engines". In Aspray, William (ed.).Computing Before Computers(PDF). Ames: Iowa State University Press. pp. 59–98.ISBN978-0-8138-0047-9.Archived(PDF)from the original on 9 October 2022.Cohen, Bernard (2000)."Howard Aiken, Portrait of a computer pioneer".Physics Today.53(3). Cambridge, Massachusetts: The MIT Press: 74–75.Bibcode:2000PhT....53c..74C.doi:10.1063/1.883007.ISBN978-0-262-53179-5.Collier, Bruce (1970).The little engine that could've: The calculating machines of Charles Babbage. Garland Publishing.ISBN978-0-8240-0043-1.Archivedfrom the original on 20 January 2007. Retrieved24 October2013.Couffignal, Louis (1933).Les machines à calculer; leurs principes, leur évolution. Paris: Gauthier-Villars.Digital Equipment Corporation(1972).PDP-11/40 Processor Handbook(PDF).Maynard, MA: Digital Equipment Corporation.Archived(PDF)from the original on 1 December 2017. Retrieved27 November2017.Swade, Doron D. (February 1993). "Redeeming Charles Babbage's Mechanical Computer".Scientific American.268(2): 86–91.Bibcode:1993SciAm.268b..86S.doi:10.1038/scientificamerican0293-86.JSTOR24941379.Essinger, James (2004).Jacquard's Web, How a hand loom led to the birth of the information age. Oxford University Press.ISBN978-0-19-280577-5.Evans, Claire L. (2018).Broad Band: The Untold Story of the Women Who Made the Internet. New York: Portfolio/Penguin.ISBN978-0-7352-1175-9. Retrieved9 November2020.Felt, Dorr E. (1916).Mechanical arithmetic, or The history of the counting machine. Chicago: Washington Institute.Ifrah, Georges (2001).The Universal History of Computing: From the Abacus to the Quantum Computer. New York: John Wiley & Sons.ISBN978-0-471-39671-0.Lavington, Simon (1998).A History of Manchester Computers(2nd ed.). Swindon: The British Computer Society.ISBN978-0-902505-01-8.Ligonnière, Robert (1987).Préhistoire et Histoire des ordinateurs. Paris: Robert Laffont.ISBN978-2-221-05261-7.Light, Jennifer S. (1999). "When Computers Were Women".Technology and Culture.40(3): 455–483.doi:10.1353/tech.1999.0128.JSTOR25147356.S2CID108407884.Meuer, Hans; Strohmaier, Erich; Simon, Horst;Dongarra, Jack(13 November 2006)."Architectures Share Over Time".TOP500. Archived fromthe originalon 20 February 2007. Retrieved27 November2006.Moseley, Maboth (1964).Irascible Genius, Charles Babbage, inventor. London: Hutchinson.Randell, Brian(1982)."From Analytical Engine to Electronic Digital Computer: The Contributions of Ludgate, Torres, and Bush"(PDF). Archived fromthe original(PDF)on 21 September 2013. Retrieved29 October2013.Schmandt-Besserat, Denise(1999)."Tokens: The Cognitive Significance".Documenta Praehistorica.XXVI. Archived fromthe originalon 30 January 2012.Schmandt-Besserat, Denise(1981). "Decipherment of the earliest tablets".Science.211(4479): 283–285.Bibcode:1981Sci...211..283S.doi:10.1126/science.211.4479.283.PMID17748027.Smith, Erika E. (2013)."Recognizing a Collective Inheritance through the History of Women in Computing".CLCWeb: Comparative Literature and Culture.15(1): 1–9.doi:10.7771/1481-4374.1972.Verma, G.; Mielke, N. (1988).Reliability performance of ETOX based flash memories. IEEE International Reliability Physics Symposium.Zuse, Konrad (1993).The Computer – My life. Berlin: Pringler-Verlag.ISBN978-0-387-56453-1.External linksMedia related toComputersat Wikimedia CommonsWikiversity has a quiz on this articlevteBasiccomputercomponentsInput devicesPointing devicesGraphics tabletGame controllerLight penMouseOpticalOptical trackpadPointing stickTouchpadTouchscreenTrackballOtherKeyboardImage scannerGraphics cardGPUMicrophoneRefreshable braille displaySound cardSound chipWebcamSoftcamOutput devicesMonitorScreenRefreshable braille displayPrinterPlotterSpeakersSound cardGraphics cardRemovabledata storageDisk packFloppy diskOptical discCDDVDBlu-rayFlash memoryMemory cardUSB flash driveComputer caseCentral processing unitMicroprocessorMotherboardMemoryRAMBIOSData storageHDDSSD(SATA/NVMe)SSHDPower supplySMPSMOSFETPower MOSFETVRMNetwork interface controllerFax modemExpansion cardPortsCurrentEthernetUSBThunderboltAnalog audio jackDisplayPortHDMIObsoleteFireWire(IEEE 1394)Parallel portSerial portGame portPS/2 porteSATADVIVGARelatedHistory of computing hardwareHistory of computing hardware (1960s–present)List of pioneers in computer sciencevteDigital electronicsComponentsTransistorResistorInductorCapacitorPrinted electronicsPrinted circuit boardElectronic circuitFlip-flopMemory cellCombinational logicSequential logicLogic gateBoolean circuitIntegrated circuit(IC)Hybrid integrated circuit(HIC)Mixed-signal integrated circuitThree-dimensional integrated circuit(3D IC)Emitter-coupled logic(ECL)Erasable programmable logic device(EPLD)Macrocell arrayProgrammable logic array(PLA)Programmable logic device(PLD)Programmable Array Logic(PAL)Generic Array Logic(GAL)Complex programmable logic device(CPLD)Field-programmable gate array(FPGA)Field-programmable object array(FPOA)Application-specific integrated circuit(ASIC)Tensor Processing Unit(TPU)TheoryDigital signalBoolean algebraLogic synthesisLogic in computer scienceComputer architectureDigital signalDigital signal processingCircuit minimizationSwitching circuit theoryGate equivalentDesignLogic synthesisPlace and routePlacementRoutingTransaction-level modelingRegister-transfer levelHardware description languageHigh-level synthesisFormal equivalence checkingSynchronous logicAsynchronous logicFinite-state machineHierarchical state machineApplicationsComputer hardwareHardware accelerationDigital audioradioDigital photographyDigital telephoneDigital videocinematographytelevisionElectronic literatureDesign issuesMetastabilityRunt pulsevteMainframesAustraliaSILLIAC(1956)IsraelWEIZAC(1955)JapanFACOM(1954)FUJIC(1949)SwedenSARA(1957)SMIL(1956)EDB-1(1957)TRASK(1964)Soviet UnionBESM-6ES-2701[ru]Mars[ru]PS-2000PS-3000[ru]SVS[ru]ElbrusElectronika SS VLSI[ru]See alsoSoviet computer systemsUnited StatesIAS family1950sILLIAC(1952)AVIDAC(1953)BESK(1953)IBM 701(1953)JOHNNIAC(1953)ORACLE(1953)ORDVAC(1952)WEIZAC(1955)DASK(1955)SARA(1957)SILLIAC(1956)SMIL(1956)MANIAC I(1956)MANIAC II(1956)MISTIC(1957)MUSASINO-1(1957)EDB-1(1957)EDB-2/3(1957)Cyclone(1959)1960sFACOM 201(1960)TRASK(1964)University of IllinoisORDVAC(1952)ILLIAC I(1952)ILLIAC II(1958)ILLIAC III(1966)ILLIAC IV(1965)CEDAR(1988)ILLIAC 6(2005)Trusted ILLIAC(2006)Harvard UniversityHarvard Mark I(1944)Harvard Mark II(1947)Harvard Mark III(1949)Harvard Mark IV(1952)IBMvteIBM vacuum tube computers305 RAMAC610650701702704705709SAGEAN/FSQ-7AN/FSQ-8IBM mainframesUniversity of PennsylvaniaENIAC(1945)EMCCEDVAC(1949)UNIVAC I(1951)Sperry Rand CorporationUNIVAC IISee also:Computers built 1955 through 1978RaytheonRAYDAC(1953)See alsoUNIVAC family computersUnited KingdomColossus computer(1943)RelatedTransistor computerlistVacuum-tube computerlistHistory of computing hardwareHistory of computing hardware (1960s–present)List of pioneers in computer sciencevteElectronicsBranchesAnalogue electronicsDigital electronicsElectronic engineeringInstrumentationMicroelectronicsOptoelectronicsPower electronicsPrinted electronicsSemiconductorSchematic captureThermal managementAdvancedtopics2020s in computingAtomtronicsBioelectronicsList of emerging electronicsFailure of electronic componentsFlexible electronicsLow-power electronicsMolecular electronicsNanoelectronicsOrganic electronicsPhotonicsPiezotronicsQuantum electronicsSpintronicsElectronicequipmentAir conditionerCentral heatingClothes dryerComputer/NotebookCameraDishwasherFreezerHome robotHome cinemaHome theater PCInformation technologyCookerMicrowave ovenMobile phoneNetworking hardwarePortable media playerRadioRefrigeratorRobotic vacuum cleanerTabletTelephoneTelevisionWater heaterVideo game consoleWashing machineApplicationsAudio equipmentAutomotive electronicsAvionicsControl systemData acquisitione-booke-healthElectromagnetic warfareElectronics industryEmbedded systemHome applianceHome automationIntegrated circuitHome applianceConsumer electronicsMajor applianceSmall applianceMarine electronicsMicrowavetechnologyMilitaryelectronicsMultimediaNuclear electronicsOpen-source hardwareRadarandRadio navigationRadio electronicsTerahertz technologyWiredandWirelessCommunicationsAuthority control databasesInternationalFASTNationalSpainFranceBnF dataGermanyIsraelUnited StatesLatviaJapanCzech RepublicOtherHistorical Dictionary of SwitzerlandNARARetrieved from "https://en.wikipedia.org/w/index.php?title=Computer&oldid=1242459117"Categories:ComputersConsumer electronicsElectronics industryHidden categories:Webarchive template wayback linksCS1 Spanish-language sources (es)CS1 French-language sources (fr)All articles with specifically marked weasel-worded phrasesArticles with specifically marked weasel-worded phrases from February 2023CS1 German-language sources (de)Pages containing links to subscription-only contentWikipedia articles needing page number citations from March 2022Articles with short descriptionShort description is different from WikidataWikipedia indefinitely semi-protected pagesWikipedia indefinitely move-protected pagesPages using multiple image with auto scaled imagesArticles containing Chinese-language textAll articles with unsourced statementsArticles with unsourced statements from December 2007Commons category link is on WikidataUse dmy dates from July 2017Articles containing video clipsArticles with example codeThis page was last edited on 26 August 2024, at 22:18(UTC).Text is available under theCreative Commons Attribution-ShareAlike License 4.0;
additional terms may apply. By using this site, you agree to theTerms of UseandPrivacy Policy. Wikipedia® is a registered trademark of theWikimedia Foundation, Inc., a non-profit organization.Privacy policyAbout WikipediaDisclaimersContact WikipediaCode of ConductDevelopersStatisticsCookie statementMobile view