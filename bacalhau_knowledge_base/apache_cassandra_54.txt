URL: https://cassandra.apache.org/doc/latest/cassandra/getting-started/configuring.html

Get StartedCassandra BasicsQuickstartEcosystemDocumentationCommunityWelcomeDiscussionsGovernanceContributeMeet the CommunityCatalyst ProgramEventsLearnCassandra 5.0Case StudiesResourcesBlogDownload NowCassandra DocumentationVersion:5.0mastertrunk5.04.14.03.11MainGlossaryHow to report bugsContact usDevelopmentGetting startedBuilding and IDE integrationTestingContributing code changesCode styleReview checklistHow to commitWorking on documentationJenkins CI environmentDependency managementRelease processCassandraFAQGetting StartedCassandra QuickstartSAI QuickstartVector Search QuickstartInstalling CassandraConfiguring CassandraInserting and queryingClient driversProduction recommendationsWhat’s newSupport for JavaArchitectureOverviewDynamoStorage EngineGuaranteesImproved Internode MessagingImproved StreamingData ModelingIntroductionConceptual data modelingRDBMS designDefining application queriesLogical data modelingPhysical data modelingEvaluating and refining data modelsDefining database schemaCassandra data modeling toolsCassandra Query Language (CQL)DefinitionsData typesData definition (DDL)Data manipulation (DML)Dynamic Data Masking (DDM)OperatorsIndexing conceptsSAI OverviewConceptsSAI QuickstartSAI FAQWorking with SAISAI operationsSecondary indexes (2i) overviewConceptsWorking with 2iRebuild 2iMaterialized viewsFunctionsJSONSecurityTriggersAppendicesChangesSASISingle file of CQL informationVector Search overviewConceptsData ModelingVector Search QuickstartWorking with Vector SearchManagingConfiguringcassandra.yamlcassandra-rackdc.propertiescassandra-env.shcassandra-topologies.propertiescommitlog-archiving.propertieslogback.xmljvm-* filesLiberating cassandra.yaml Parameters' Names from Their UnitsOperatingBackupsBloom filtersBulk loadingChange Data Capture (CDC)CompactionCompressionHardwareHintsLoggingAudit loggingAudit logging 2Full query loggingMonitoring metricsRepairRead repairSecuritySnitchesTopology changesTransient replicationVirtual tablesToolscqlsh: the CQL shellnodetoolSSTable toolscassandra-stressTroubleshootingFinding misbehaving nodesReading Cassandra logsUsing nodetoolUsing external tools to deep-diveReferenceALTER TABLECREATE INDEXCREATE CUSTOM INDEXCREATE TABLEDROP INDEXDROP TABLEPlug-insYou are viewing the documentation for a prerelease version.CassandraGetting StartedConfiguring CassandraEditConfiguring CassandraTheCassandraconfiguration files location varies, depending on the
type of installation:docker:/etc/cassandradirectorytarball:confdirectory within the tarball install locationpackage:/etc/cassandradirectoryCassandra’s default configuration file,cassandra.yaml, is sufficient
to explore a simple single-nodecluster. However, anything beyond
running a single-node cluster locally requires additional configuration
to various Cassandra configuration files. Some examples that require
non-default configuration are deploying a multi-node cluster or using
clients that are not running on a cluster node.cassandra.yaml: the main configuration file for Cassandracassandra-env.sh: environment variables can be setcassandra-rackdc.propertiesORcassandra-topology.properties: set
rack and datacenter information for a clusterlogback.xml: logging configuration including logging levelsjvm-*: a number of JVM configuration files for both the server and
clientscommitlog_archiving.properties: set archiving parameters for thecommitlogThe sample configuration files can also be found in./conf:cqlshrc.sample: how the CQL shell, cqlsh, can be configuredMain runtime propertiesConfiguring Cassandra is done by setting yaml properties in thecassandra.yamlfile. At a minimum you should consider setting the
following properties:cluster_name: Set the name of your cluster.seeds: A comma separated list of the IP addresses of your clusterseed nodes.storage_port: Check that you don’t have the default port of 7000
blocked by a firewall.listen_address: Thelisten addressis the IP address of a node
that allows it to communicate with other nodes in the cluster. Set tolocalhostby default. Alternatively, you can setlisten_interfaceto tell Cassandra which interface to use, and
consecutively which address to use. Set one property, not both.native_transport_port: Check that you don’t have the default port of
9042 blocked by a firewall, so that clients like cqlsh can communicate
with Cassandra on this port.Changing the location of directoriesThe following yaml properties control the location of directories:data_file_directories: One or more directories where data files,
likeSSTablesare located.commitlog_directory: The directory where commitlog files are
located.saved_caches_directory: The directory where saved caches are
located.hints_directory: The directory wherehintsare located.For performance reasons, if you have multiple disks, consider putting
commitlog and data files on different disks.Environment variablesJVM-level settings such as heap size can be set incassandra-env.sh.
You can add any additional JVM command line argument to theJVM_OPTSenvironment variable; when Cassandra starts, these arguments will be
passed to the JVM.LoggingThe default logger islogback. By default it will log:INFOlevel insystem.logDEBUGlevel indebug.logWhen running in the foreground, it will also log at INFO level to the
console. You can change logging properties by editinglogback.xmlor
by running thenodetool setlogginglevelcommand.Get started with Cassandra, fast.Quickstart GuideApache Cassandrapowers mission-critical deployments with improved performance and unparalleled levels of scale in the cloud.HomeCassandra BasicsQuickstartEcosystemDocumentationCommunityCase StudiesResourcesBlogFoundationEventsLicenseThanksSecurityPrivacySponsorshipÂ© 2009-The Apache Software Foundationunder the terms of the Apache License 2.0.  Apache, the Apache feather logo, Apache Cassandra, Cassandra, and the Cassandra logo, are either registered trademarks or trademarks of The Apache Software Foundation.